cscope 15 $HOME/work/claudNcap/twemperf/src               0000323205
	@gen/mcp_call_generator.c

19 
	~<m˝_c‹e.h
>

25 
boﬁ


26 
	$issue_ˇŒ_d⁄e
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

28 i‡((
c⁄n
->
nˇŒ_¸óãd
 + c⁄n->
nˇŒ_¸óã_Áûed
) ==

29 
˘x
->
›t
.
num_ˇŒs
) {

30  
åue
;

33  
Ál£
;

34 
	}
}

37 
	$issue_ˇŒ
(
c⁄ãxt
 *
˘x
, *
¨g
)

39 
c⁄n
 *c⁄¿
¨g
;

40 
ˇŒ
 *call;

42 
	`ASSERT
(!
	`issue_ˇŒ_d⁄e
(
˘x
, 
c⁄n
));

44 
ˇŒ
 = 
	`ˇŒ_gë
(
c⁄n
);

45 i‡(
ˇŒ
 =
NULL
) {

46 
c⁄n
->
nˇŒ_¸óã_Áûed
++;

47 
d⁄e
;

50 
	`ˇŒ_make_ªq
(
˘x
, 
ˇŒ
);

56 
	`STAILQ_INSERT_TAIL
(&
c⁄n
->
ˇŒ_£ndq
, 
ˇŒ
, 
ˇŒ_tqe
);

57 
c⁄n
->
nˇŒ_£ndq
++;

59 
c⁄n
->
nˇŒ_¸óãd
++;

61 
	`ecb_sig«l
(
˘x
, 
EVENT_CALL_ISSUE_START
, 
ˇŒ
);

63 
d⁄e
:

64 i‡(
	`issue_ˇŒ_d⁄e
(
˘x
, 
c⁄n
)) {

65 
	`log_debug
(
LOG_DEBUG
, "issued %"
PRIu32
" %"PRIu32" of %"PRIu32" "

66 "ˇŒ†⁄ c %"
PRIu64
"", 
c⁄n
->
nˇŒ_¸óã_Áûed
,

67 
c⁄n
->
nˇŒ_¸óãd
, 
˘x
->
›t
.
num_ˇŒs
, c⁄n->
id
);

68 i‡(
c⁄n
->
nˇŒ_com∂ëed
 =c⁄n->
nˇŒ_¸óãd
) {

69 
	`ecb_sig«l
(
˘x
, 
EVENT_CONN_DESTROYED
, 
c⁄n
);

74 
	`log_debug
(
LOG_VERB
, "issued %"
PRIu32
" %"PRIu32" of %"PRIu32" "

75 "ˇŒ†⁄ c %"
PRIu64
"", 
c⁄n
->
nˇŒ_¸óã_Áûed
,

76 
c⁄n
->
nˇŒ_¸óãd
, 
˘x
->
›t
.
num_ˇŒs
, c⁄n->
id
);

79 
	}
}

82 
	$de°royed
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

84 
ˇŒ
 *ˇŒ = 
ˇrg
;

85 
c⁄n
 *c⁄¿
ˇŒ
->conn;

86 
gí
 *
g
 = &
c⁄n
->
ˇŒ_gí
;

88 
	`ASSERT
(
ty≥
 =
EVENT_CALL_DESTROYED
);

90 
c⁄n
->
nˇŒ_com∂ëed
++;

92 i‡(
	`issue_ˇŒ_d⁄e
(
˘x
, 
c⁄n
) &&

93 (
c⁄n
->
nˇŒ_com∂ëed
 =c⁄n->
nˇŒ_¸óãd
)) {

95 
	`log_debug
(
LOG_DEBUG
, "com∂ëed %"
PRIu32
" of %"PRIu32" of %"PRIu32" "

96 "ˇŒ†⁄ c %"
PRIu64
"", 
c⁄n
->
nˇŒ_com∂ëed
,

97 
c⁄n
->
nˇŒ_¸óãd
, 
˘x
->
›t
.
num_ˇŒs
, c⁄n->
id
);

99 
	`ecb_sig«l
(
˘x
, 
EVENT_CONN_DESTROYED
, 
c⁄n
);

103 
	`log_debug
(
LOG_VERB
, "com∂ëed %"
PRIu32
" of %"PRIu32" of %"PRIu32" "

104 "ˇŒ†⁄ c %"
PRIu64
"", 
c⁄n
->
nˇŒ_com∂ëed
,

105 
c⁄n
->
nˇŒ_¸óãd
, 
˘x
->
›t
.
num_ˇŒs
, c⁄n->
id
);

107 i‡(
g
->
⁄eshŸ
) {

108 
	`ecb_sig«l
(
˘x
, 
EVENT_GEN_CALL_FIRE
, 
g
);

110 
	}
}

113 
	$åiggî
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

115 
c⁄n
 *c⁄¿
ˇrg
;

116 
gí
 *
g
 = &
c⁄n
->
ˇŒ_gí
;

117 
di°_öfo
 *
di
 = &
˘x
->
ˇŒ_di°
;

118 
evít_ty≥_t
 
fúög_evít
 = (
di
->
ty≥
 =
DIST_NONE
Ë? 
EVENT_GEN_CALL_FIRE
 :

119 
EVENT_INVALID
;

121 
	`ASSERT
(
ty≥
 =
EVENT_GEN_CALL_TRIGGER
);

122 
	`ASSERT
(
c⁄n
->
˘x
 == ctx);

124 
	`gí_°¨t
(
g
, 
˘x
, 
di
, 
issue_ˇŒ
, 
c⁄n
, 
fúög_evít
);

125 
	}
}

128 
	$öô
(
c⁄ãxt
 *
˘x
, *
¨g
)

130 
	`ecb_ªgi°î
(
˘x
, 
EVENT_CALL_DESTROYED
, 
de°royed
, 
NULL
);

131 
	`ecb_ªgi°î
(
˘x
, 
EVENT_GEN_CALL_TRIGGER
, 
åiggî
, 
NULL
);

132 
	}
}

135 
	$no_›
(
c⁄ãxt
 *
˘x
, *
¨g
)

138 
	}
}

145 
lﬂd_gíî©‹
 
	gˇŒ_gíî©‹
 = {

147 
öô
,

148 
no_›
,

149 
no_›
,

150 
no_›


	@gen/mcp_conn_generator.c

19 
	~<m˝_c‹e.h
>

25 
boﬁ


26 
	$make_c⁄n_d⁄e
(
c⁄ãxt
 *
˘x
)

28 i‡((
˘x
->
nc⁄n_¸óãd
 + ctx->
nc⁄n_¸óã_Áûed
) ==

29 
˘x
->
›t
.
num_c⁄ns
) {

30  
åue
;

33  
Ál£
;

34 
	}
}

37 
	$make_c⁄n
(
c⁄ãxt
 *
˘x
, *
¨g
)

39 
r°©us_t
 
°©us
;

40 
c⁄n
 *conn;

42 
	`ASSERT
(!
	`make_c⁄n_d⁄e
(
˘x
));

44 
c⁄n
 = 
	`c⁄n_gë
(
˘x
);

45 i‡(
c⁄n
 =
NULL
) {

46 
˘x
->
nc⁄n_¸óã_Áûed
++;

47 
d⁄e
;

50 
°©us
 = 
	`c‹e_c⁄√˘
(
˘x
, 
c⁄n
);

51 i‡(
°©us
 !
MCP_OK
) {

52 
˘x
->
nc⁄n_¸óã_Áûed
++;

53 
	`ecb_sig«l
(
˘x
, 
EVENT_CONN_FAILED
, 
c⁄n
);

54 
d⁄e
;

57 
˘x
->
nc⁄n_¸óãd
++;

58 
	`ecb_sig«l
(
˘x
, 
EVENT_CONN_CREATED
, 
c⁄n
);

60 
d⁄e
:

61 i‡(
	`make_c⁄n_d⁄e
(
˘x
)) {

62 
	`log_debug
(
LOG_NOTICE
, "¸óãd %"
PRIu32
" %"PRIu32" of %"PRIu32" "

63 "c⁄√˘i⁄s", 
˘x
->
nc⁄n_¸óã_Áûed
, ctx->
nc⁄n_¸óãd
,

64 
˘x
->
›t
.
num_c⁄ns
);

65 i‡(
˘x
->
nc⁄n_de°royed
 =˘x->
nc⁄n_¸óãd
) {

66 
	`c‹e_°›
(
˘x
);

71 
	`log_debug
(
LOG_INFO
, "¸óãd %"
PRIu32
" %"PRIu32" of %"PRIu32" "

72 "c⁄√˘i⁄s", 
˘x
->
nc⁄n_¸óã_Áûed
, ctx->
nc⁄n_¸óãd
,

73 
˘x
->
›t
.
num_c⁄ns
);

76 
	}
}

79 
	$de°royed
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

81 
c⁄n
 *c⁄¿
ˇrg
;

82 
gí
 *
g
 = &
˘x
->
c⁄n_gí
;

84 
	`ASSERT
(
ty≥
 =
EVENT_CONN_DESTROYED
);

85 
	`ASSERT
(
c⁄n
->
˘x
 == ctx);

87 
	`c‹e_˛o£
(
˘x
, 
c⁄n
);

89 
˘x
->
nc⁄n_de°royed
++;

91 i‡(
	`make_c⁄n_d⁄e
(
˘x
Ë&& (˘x->
nc⁄n_de°royed
 =˘x->
nc⁄n_¸óãd
)) {

92 
	`log_debug
(
LOG_NOTICE
, "de°royed %"
PRIu32
" of %"PRIu32" of %"PRIu32" "

93 "c⁄√˘i⁄s", 
˘x
->
nc⁄n_de°royed
, ctx->
nc⁄n_¸óãd
,

94 
˘x
->
›t
.
num_c⁄ns
);

95 
	`c‹e_°›
(
˘x
);

99 
	`log_debug
(
LOG_INFO
, "de°royed %"
PRIu32
" of %"PRIu32" of %"PRIu32" "

100 "c⁄√˘i⁄s", 
˘x
->
nc⁄n_de°royed
, ctx->
nc⁄n_¸óãd
,

101 
˘x
->
›t
.
num_c⁄ns
);

103 i‡(
g
->
⁄eshŸ
) {

104 
	`ecb_sig«l
(
˘x
, 
EVENT_GEN_CONN_FIRE
, 
g
);

106 
	}
}

109 
	$åiggî
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

111 
gí
 *
g
 = &
˘x
->
c⁄n_gí
;

112 
di°_öfo
 *
di
 = &
˘x
->
c⁄n_di°
;

113 
evít_ty≥_t
 
fúög_evít
 = (
di
->
ty≥
 =
DIST_NONE
Ë? 
EVENT_GEN_CONN_FIRE
 :

114 
EVENT_INVALID
;

116 
	`ASSERT
(
ty≥
 =
EVENT_GEN_CONN_TRIGGER
);

118 
	`gí_°¨t
(
g
, 
˘x
, 
di
, 
make_c⁄n
, 
NULL
, 
fúög_evít
);

119 
	}
}

122 
	$öô
(
c⁄ãxt
 *
˘x
, *
¨g
)

124 
	`ecb_ªgi°î
(
˘x
, 
EVENT_CONN_DESTROYED
, 
de°royed
, 
NULL
);

125 
	`ecb_ªgi°î
(
˘x
, 
EVENT_GEN_CONN_TRIGGER
, 
åiggî
, 
NULL
);

126 
	}
}

129 
	$no_›
(
c⁄ãxt
 *
˘x
, *
¨g
)

132 
	}
}

139 
lﬂd_gíî©‹
 
	gc⁄n_gíî©‹
 = {

141 
öô
,

142 
no_›
,

143 
no_›
,

144 
no_›


	@gen/mcp_size_generator.c

19 
	~<m˝_c‹e.h
>

22 
	$ôem_size_tickî
(
c⁄ãxt
 *
˘x
, *
¨g
)

24 
di°_öfo
 *
di
 = 
¨g
;

26 
di
->
	`√xt
(di);

29 
	}
}

32 
	$åiggî
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

34 
gí
 *
g
 = &
˘x
->
size_gí
;

35 
di°_öfo
 *
di
 = &
˘x
->
size_di°
;

37 
	`ASSERT
(
ty≥
 =
EVENT_GEN_SIZE_TRIGGER
);

43 
	`gí_°¨t
(
g
, 
˘x
, 
di
, 
ôem_size_tickî
, di, 
EVENT_GEN_SIZE_FIRE
);

44 
	}
}

47 
	$öô
(
c⁄ãxt
 *
˘x
, *
¨g
)

49 
	`ecb_ªgi°î
(
˘x
, 
EVENT_GEN_SIZE_TRIGGER
, 
åiggî
, 
NULL
);

50 
	}
}

53 
	$no_›
(
c⁄ãxt
 *
˘x
, *
¨g
)

56 
	}
}

58 
lﬂd_gíî©‹
 
	gsize_gíî©‹
 = {

60 
öô
,

61 
no_›
,

62 
no_›
,

63 
no_›


	@mcp.c

19 
	~<°dio.h
>

20 
	~<°dlib.h
>

21 
	~<uni°d.h
>

22 
	~<gë›t.h
>

23 
	~<m˝_c‹e.h
>

25 
°rög
 
ªq_°rögs
[];

27 
	gshow_hñp
;

28 
	gshow_vîsi⁄
;

30 
	#MCP_LOG_DEFAULT
 
LOG_NOTICE


	)

31 
	#MCP_LOG_MIN
 
LOG_EMERG


	)

32 
	#MCP_LOG_MAX
 
LOG_PVERB


	)

33 
	#MCP_LOG_PATH
 "°dîr"

	)

35 
	#MCP_SERVER
 "loˇlho°"

	)

36 
	#MCP_PORT
 11211

	)

38 
	#MCP_CLIENT_ID
 0

	)

39 
	#MCP_CLIENT_N
 1

	)

41 
	#MCP_METHOD_STR
 "£t"

	)

42 
	#MCP_METHOD
 
REQ_SET


	)

44 
	#MCP_EXPIRY_STR
 "0"

	)

45 
	#MCP_EXPIRY
 0

	)

47 
	#MCP_PREFIX
 "m˝:"

	)

48 
	#MCP_PREFIX_LEN
 
CALL_PREFIX_LEN


	)

50 
	#MCP_TIMEOUT
 0.0

	)

51 
	#MCP_TIMEOUT_STR
 "0.0"

	)

53 
	#MCP_LINGER_STR
 "off"

	)

54 
	#MCP_LINGER
 0

	)

56 
	#MCP_SEND_BUFSIZE
 4096

	)

57 
	#MCP_RECV_BUFSIZE
 16384

	)

59 
	#MCP_NUM_CONNS
 1

	)

60 
	#MCP_NUM_CALLS
 1

	)

62 
	#MCP_CONN_DIST_STR
 "0"

	)

63 
	#MCP_CONN_DIST
 
DIST_NONE


	)

64 
	#MCP_CONN_DIST_MIN
 0.0

	)

65 
	#MCP_CONN_DIST_MAX
 0.0

	)

67 
	#MCP_CALL_DIST_STR
 "0"

	)

68 
	#MCP_CALL_DIST
 
DIST_NONE


	)

69 
	#MCP_CALL_DIST_MIN
 0.0

	)

70 
	#MCP_CALL_DIST_MAX
 0.0

	)

72 
	#MCP_SIZE_DIST_STR
 "d1"

	)

73 
	#MCP_SIZE_DIST
 
DIST_DETERMINISTIC


	)

74 
	#MCP_SIZE_DIST_MIN
 1

	)

75 
	#MCP_SIZE_DIST_MAX
 1

	)

77 
	#MCP_PRINT_RUSAGE
 0

	)

79 
›ti⁄
 
	gl⁄g_›ti⁄s
[] = {

80 { "hñp", 
no_¨gumít
, 
NULL
, 'h' },

81 { "vîsi⁄", 
no_¨gumít
, 
NULL
, 'V' },

82 { "vîbosôy", 
ªquúed_¨gumít
, 
NULL
, 'v' },

83 { "ouçut", 
ªquúed_¨gumít
, 
NULL
, 'o' },

84 { "£rvî", 
ªquúed_¨gumít
, 
NULL
, 's' },

85 { "p‹t", 
ªquúed_¨gumít
, 
NULL
, 'p' },

86 { "¥öt-hi°ogøm", 
no_¨gumít
, 
NULL
, 'H' },

87 { "timeout", 
ªquúed_¨gumít
, 
NULL
, 't' },

88 { "lögî", 
ªquúed_¨gumít
, 
NULL
, 'l' },

89 { "£nd-buf„r", 
ªquúed_¨gumít
, 
NULL
, 'b' },

90 { "ªcv-buf„r", 
ªquúed_¨gumít
, 
NULL
, 'B' },

91 { "dißbÀ-nodñay", 
no_¨gumít
, 
NULL
, 'D' },

92 { "mëhod", 
ªquúed_¨gumít
, 
NULL
, 'm' },

93 { "expúy", 
ªquúed_¨gumít
, 
NULL
, 'e' },

94 { "u£-n‹ïly", 
no_¨gumít
, 
NULL
, 'q' },

95 { "¥efix", 
ªquúed_¨gumít
, 
NULL
, 'P' },

96 { "˛õ¡", 
ªquúed_¨gumít
, 
NULL
, 'c' },

97 { "num-c⁄ns", 
ªquúed_¨gumít
, 
NULL
, 'n' },

98 { "num-ˇŒs", 
ªquúed_¨gumít
, 
NULL
, 'N' },

99 { "c⁄n-øã", 
ªquúed_¨gumít
, 
NULL
, 'r' },

100 { "ˇŒ-øã", 
ªquúed_¨gumít
, 
NULL
, 'R' },

101 { "sizes", 
ªquúed_¨gumít
, 
NULL
, 'z' },

102 { 
NULL
, 0, NULL, 0 }

105 
	gsh‹t_›ti⁄s
[] = "hVv:o:s:p:Ht:l:b:B:Dm:e:qP:c:n:N:r:R:z:";

108 
	$m˝_show_ußge
()

110 
	`log_°dîr
(

111 "Ußge: m˝î‡[-?hV] [-v vîbosôyÜevñ] [-ÿouçuàfûe]" 
CRLF


112 " [-†£rvî] [-∞p‹t] [-H] [-àtimeout] [-»lögî]" 
CRLF


113 " [-b síd-buf„r] [-BÑecv-buf„r] [-D]" 
CRLF


114 " [-m mëhod] [-êexpúy] [-q] [-PÖªfix]" 
CRLF


115 " [-¯˛õ¡] [-¿num-c⁄ns] [-NÇum-ˇŒs]" 
CRLF


116 " [-∏c⁄n-øã] [-R cÆl-øã] [-z sizes]" 
CRLF


117 "" 
CRLF


118 "O±i⁄s:" 
CRLF


119 " -h, --hñ∞ :Åhi†hñp" 
CRLF


120 " -V, --vîsi⁄ : show vîsi⁄ándÉxô" 
CRLF


121 " -v, --vîbosôy=N : sëÜoggögÜevñ (deÁu…: %d, mö: %d, max: %d)" 
CRLF


122 " -o, --ouçut=S : sëÜoggög fûê(deÁu…: %s)" 
CRLF


123 " -s, --£rvî=S : sëÅhêho°«mêo‡thê£rvî (deÁu…: %s)" 
CRLF


124 " -p, --p‹t=N : sëÅhêp‹ànumbî o‡thê£rvî (deÁu…: %d)" 
CRLF


125 " -H, --¥öt-hi°ogøm :Öröàª•⁄£Åimêhi°ogøm" 
CRLF


127 
MCP_LOG_DEFAULT
, 
MCP_LOG_MIN
, 
MCP_LOG_MAX
, 
MCP_LOG_PATH
,

128 
MCP_SERVER
, 
MCP_PORT
);

130 
	`log_°dîr
(

131 " -t, --timeout=X : sëÅhêc⁄√˘i⁄ándÑe•⁄£Åimeouàö se¯(deÁu…: %†£c)" 
CRLF


132 " -l, --lögî=N : sëÅhêlögîÅimeouàö sec, whí closög TCP c⁄√˘i⁄†(deÁu…: %s)" 
CRLF


133 " -b, --£nd-buf„r=N : së sockë síd buf„∏sizê(deÁu…: %d byãs)" 
CRLF


134 " -B, --ªcv-buf„r=N : së sockëÑecv buf„∏sizê(deÁu…: %d byãs)" 
CRLF


135 " -D, --dißbÀ-nodñay : dißbÀÅ˝Çodñay" 
CRLF


137 
MCP_TIMEOUT_STR
, 
MCP_LINGER_STR
,

138 
MCP_SEND_BUFSIZE
, 
MCP_RECV_BUFSIZE


141 
	`log_°dîr
(

142 " -m, --mëhod=M : sëÅhêmëhodÅÿu£ whí issuög memˇchedÑeque° (deÁu…: %s)" 
CRLF


143 " -e, --expúy=N : sëÅhêexpúy vÆuêö se¯f‹ gíî©edÑeque°†(deÁu…: %†£c)" 
CRLF


144 " -q, --u£-n‹ïly : sëÇ‹ïly f‹ gíî©edÑeque°s" 
CRLF


145 " -P, --¥efix=S : sëÅhê¥efix o‡gíî©ed key†(deÁu…: %s)" 
CRLF


147 
MCP_METHOD_STR
, 
MCP_EXPIRY_STR
,

148 
MCP_PREFIX


151 
	`log_°dîr
(

152 " -c, --˛õ¡=I/N : së m˝î‡ö°™˚ÅÿbêI ouào‡tŸÆ N in°™˚†(deÁu…: %d/%d)" 
CRLF


153 " -n, --num-c⁄ns=N : sëÅhênumbî o‡c⁄√˘i⁄†tÿ¸óã (deÁu…: %d)" 
CRLF


154 " -N, --num-ˇŒs=N : sëÅhênumbî o‡ˇŒ†tÿ¸óã o¿óch c⁄√˘i⁄ (deÁu…: %d)" 
CRLF


155 " -r, --c⁄n-øã=R : sëÅhêc⁄√˘i⁄ cª©i⁄Ñ©ê(deÁu…: %†c⁄ns/£cË"
CRLF


156 " -R, --ˇŒ-øã=R : sëÅhêˇŒ cª©i⁄Ñ©ê(deÁu…: %†ˇŒs/£c)" 
CRLF


157 " -z, --sizes=R : sëÅhêdi°ributi⁄ f‹ iãm size†(deÁu…: %†byãs)" 
CRLF


159 
MCP_CLIENT_ID
, 
MCP_CLIENT_N
, 
MCP_NUM_CONNS
, 
MCP_NUM_CALLS
,

160 
MCP_CONN_DIST_STR
, 
MCP_CALL_DIST_STR
, 
MCP_SIZE_DIST_STR


163 
	`log_°dîr
(

164 "Whîe:" 
CRLF


165 " N i†™ i¡egî" 
CRLF


166 " X i†®ªÆ" 
CRLF


167 " S i†®°rög" 
CRLF


168 " M i†®mëhod såögánd i†eôhîá 'gë', 'gës', 'dñëe', 'ˇs', '£t', 'add', 'ª∂a˚'" 
CRLF


169 " '≠≥nd', '¥ïíd', 'ö¸', 'de¸'" 
CRLF


170 " R i†thêøã wrôã¿a†[D]R1[,R2] whîe:" 
CRLF


171 " D i†thêdi°ributi⁄Åy≥ánd i†eôhî dëîmöi°i¯'d', unif‹m 'u', o∏exp⁄ítü»'e'ánd if:" 
CRLF


172 " D i†ommôed o∏£àtÿ'd',á dëîmöi°i¯öãrvÆ s≥cifõd byÖ¨amëî R1 i†u£d" 
CRLF


173 " D i†£àtÿ'e',á¿exp⁄ítü»di°ibuti⁄ wôh mó¿öãrvÆ o‡R1 i†u£d" 
CRLF


174 " D i†£àtÿ'u',á unif‹m di°ributi⁄ ovî i¡îvÆ [R1, R2Ëi†u£d" 
CRLF


175 " R i†0,Åhê√xàªque° o∏c⁄√˘i⁄ i†¸óãdá·îÅhê¥eviou†⁄êcom∂ëes" 
CRLF


178 
	}
}

181 
	$m˝_£t_deÁu…_›ti⁄s
(
c⁄ãxt
 *
˘x
)

183 
›t
 *›à&
˘x
->opt;

185 
›t
->
log_Àvñ
 = 
MCP_LOG_DEFAULT
;

186 
›t
->
log_fûíame
 = 
NULL
;

189 
›t
->
£rvî
 = 
MCP_SERVER
;

190 
›t
->
p‹t
 = 
MCP_PORT
;

191 
	`mem£t
(&
›t
->
si
, 0, (opt->si));

193 
›t
->
¥öt_hi°ogøm
 = 0;

195 
›t
->
timeout
 = 
MCP_TIMEOUT
;

197 
›t
->
lögî
 = 
MCP_LINGER
;

198 
›t
->
£nd_buf_size
 = 
MCP_SEND_BUFSIZE
;

199 
›t
->
ªcv_buf_size
 = 
MCP_RECV_BUFSIZE
;

200 
›t
->
dißbÀ_nodñay
 = 0;

202 
›t
->
mëhod
 = 
MCP_METHOD
;

203 
›t
->
expúy
 = 
MCP_EXPIRY
;

204 
›t
->
u£_n‹ïly
 = 0;

205 
›t
->
¥efix
.
d©a
 = 
MCP_PREFIX
;

206 
›t
->
¥efix
.
Àn
 = (
MCP_PREFIX
) - 1;

209 
›t
->
˛õ¡
.
id
 = 
MCP_CLIENT_ID
;

210 
›t
->
˛õ¡
.
n
 = 
MCP_CLIENT_N
;

213 
›t
->
num_c⁄ns
 = 
MCP_NUM_CONNS
;

214 
›t
->
c⁄n_d›t
.
ty≥
 = 
MCP_CONN_DIST
;

215 
›t
->
c⁄n_d›t
.
mö
 = 
MCP_CONN_DIST_MIN
;

216 
›t
->
c⁄n_d›t
.
max
 = 
MCP_CONN_DIST_MAX
;

219 
›t
->
num_ˇŒs
 = 
MCP_NUM_CALLS
;

220 
›t
->
ˇŒ_d›t
.
ty≥
 = 
MCP_CALL_DIST
;

221 
›t
->
ˇŒ_d›t
.
mö
 = 
MCP_CALL_DIST_MIN
;

222 
›t
->
ˇŒ_d›t
.
max
 = 
MCP_CALL_DIST_MAX
;

225 
›t
->
size_d›t
.
ty≥
 = 
MCP_SIZE_DIST
;

226 
›t
->
size_d›t
.
mö
 = 
MCP_SIZE_DIST_MIN
;

227 
›t
->
size_d›t
.
max
 = 
MCP_SIZE_DIST_MAX
;

229 
›t
->
¥öt_rußge
 = 
MCP_PRINT_RUSAGE
;

230 
	}
}

232 
r°©us_t


233 
	$m˝_gë_di°_›t
(
di°_›t
 *
d›t
, *
löe
)

235 *
pos
;

241 *
löe
) {

243 
d›t
->
ty≥
 = 
DIST_DETERMINISTIC
;

244 
löe
++;

248 
d›t
->
ty≥
 = 
DIST_UNIFORM
;

249 
löe
++;

253 
d›t
->
ty≥
 = 
DIST_EXPONENTIAL
;

254 
löe
++;

258 
d›t
->
ty≥
 = 
DIST_SEQUENTIAL
;

259 
löe
++;

263 
d›t
->
ty≥
 = 
DIST_NONE
;

266 
d›t
->
mö
 = 0.0;

267 
d›t
->
max
 = 0.0;

269 
d›t
->
ty≥
) {

270 
DIST_NONE
:

271 
d›t
->
mö
 = 
	`m˝_©od
(
löe
);

272 i‡(
d›t
->
mö
 < 0.0) {

273 
	`log_°dîr
("m˝îf: invÆid di°ributi⁄ vÆuê'%s'", 
löe
);

274  
MCP_ERROR
;

276 i‡(
d›t
->
mö
 != 0.0) {

277 
d›t
->
ty≥
 = 
DIST_DETERMINISTIC
;

278 
d›t
->
mö
 = 1.0 / dopt->min;

279 
d›t
->
max
 = d›t->
mö
;

283 
DIST_DETERMINISTIC
:

284 
DIST_EXPONENTIAL
:

285 
DIST_SEQUENTIAL
:

286 
d›t
->
mö
 = 
	`m˝_©od
(
löe
);

287 i‡(
d›t
->
mö
 <= 0.0) {

288 
	`log_°dîr
("m˝îf: invÆid mó¿vÆuê'%s'", 
löe
);

289  
MCP_ERROR
;

291 
d›t
->
max
 = d›t->
mö
;

294 
DIST_UNIFORM
:

295 
pos
 = 
	`°rchr
(
löe
, ',');

296 i‡(
pos
 =
NULL
) {

297 
	`log_°dîr
("m˝îf: invÆid unif‹m di°ributi⁄ vÆuê'%s'", 
löe
);

298  
MCP_ERROR
;

300 *
pos
 = '\0';

302 
d›t
->
mö
 = 
	`m˝_©od
(
löe
);

303 i‡(
d›t
->
mö
 <= 0.0) {

304 
	`log_°dîr
("m˝îf: invÆid möimum vÆuê'%s'", 
löe
);

305  
MCP_ERROR
;

308 
löe
 = 
pos
 + 1;

310 
d›t
->
max
 = 
	`m˝_©od
(
löe
);

311 i‡(
d›t
->
max
 <= 0.0) {

312 
	`log_°dîr
("m˝îf: invÆid maximum vÆuê'%s'", 
löe
);

313  
MCP_ERROR
;

315 i‡(
d›t
->
max
 < d›t->
mö
) {

316 
	`log_°dîr
("mcperf: maximum value '%g' should be greaterÅhan or "

317 "equÆÅÿmöium vÆuê'%g'", 
d›t
->
max
, d›t->
mö
);

318  
MCP_ERROR
;

324 
	`NOT_REACHED
();

327  
MCP_OK
;

328 
	}
}

330 
r°©us_t


331 
	$m˝_gë_mëhod
(
c⁄ãxt
 *
˘x
, *
löe
)

333 
›t
 *›à&
˘x
->opt;

334 
size_t
 
löñí
 = 
	`°æí
(
löe
);

335 
°rög
 *
°r
;

337 
°r
 = 
ªq_°rögs
; så->
d©a
 !
NULL
; str++) {

338 i‡((
°r
->
Àn
 - 1 =
löñí
) &&

339 
	`°∫cmp
(
°r
->
d©a
, 
löe
, 
löñí
) == 0) {

340 
›t
->
mëhod
 = 
°r
 - 
ªq_°rögs
;

341  
MCP_OK
;

345 
	`log_°dîr
("mcperf: '%s' isán invalid method; valid methodsáre get, "

347 "de¸", 
löe
);

349  
MCP_ERROR
;

350 
	}
}

352 
r°©us_t


353 
	$m˝_gë_›ti⁄s
(
c⁄ãxt
 *
˘x
, 
¨gc
, **
¨gv
)

355 
r°©us_t
 
°©us
;

356 
›t
 *opt;

357 
c
, 
vÆue
;

358 
size_t
 
size
;

359 
ªÆ
;

360 *
pos
;

362 
›t
 = &
˘x
->opt;

363 
›ãº
 = 0;

366 
c
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, 
sh‹t_›ti⁄s
, 
l⁄g_›ti⁄s
, 
NULL
);

367 i‡(
c
 == -1) {

372 
c
) {

374 
show_vîsi⁄
 = 1;

375 
show_hñp
 = 1;

379 
show_vîsi⁄
 = 1;

383 
vÆue
 = 
	`m˝_©oi
(
›èrg
);

384 i‡(
vÆue
 < 0) {

385 
	`log_°dîr
("mcperf: option -vÑequiresáÇumber");

386  
MCP_ERROR
;

388 
›t
->
log_Àvñ
 = 
vÆue
;

392 
›t
->
log_fûíame
 = 
›èrg
;

396 
›t
->
£rvî
 = 
›èrg
;

400 
vÆue
 = 
	`m˝_©oi
(
›èrg
);

401 i‡(
vÆue
 < 0) {

402 
	`log_°dîr
("mcperf: option -pÑequiresáÇumber");

403  
MCP_ERROR
;

405 i‡(!
	`m˝_vÆid_p‹t
(
vÆue
)) {

406 
	`log_°dîr
("mcperf: option -p value %d isÇotá validÖort",

407 
vÆue
);

408  
MCP_ERROR
;

411 
›t
->
p‹t
 = (
uöt16_t
)
vÆue
;

415 
›t
->
¥öt_hi°ogøm
 = 1;

419 
ªÆ
 = 
	`m˝_©od
(
›èrg
);

420 i‡(
ªÆ
 < 0.0) {

421 
	`log_°dîr
("mcperf: option -TÑequiresáÑealÇumber");

422  
MCP_ERROR
;

424 
›t
->
timeout
 = 
ªÆ
;

428 
vÆue
 = 
	`m˝_©oi
(
›èrg
);

429 i‡(
vÆue
 < 0) {

430 
	`log_°dîr
("mcperf: option -lÑequiresáÇumber");

431  
MCP_ERROR
;

433 
›t
->
lögî
 = 1;

434 
›t
->
lögî_timeout
 = 
vÆue
;

438 
vÆue
 = 
	`m˝_©oi
(
›èrg
);

439 i‡(
vÆue
 < 0) {

440 
	`log_°dîr
("mcperf: option -bÑequiresáÇumber");

441  
MCP_ERROR
;

443 
›t
->
£nd_buf_size
 = 
vÆue
;

447 
vÆue
 = 
	`m˝_©oi
(
›èrg
);

448 i‡(
vÆue
 < 0) {

449 
	`log_°dîr
("mcperf: option -BÑequiresáÇumber");

450  
MCP_ERROR
;

452 
›t
->
ªcv_buf_size
 = 
vÆue
;

456 
°©us
 = 
	`m˝_gë_mëhod
(
˘x
, 
›èrg
);

457 i‡(
°©us
 !
MCP_OK
) {

458  
°©us
;

463 
vÆue
 = 
	`m˝_©oi
(
›èrg
);

464 i‡(
vÆue
 < 0) {

465 
	`log_°dîr
("mcperf: option -eÑequiresáÇumber");

466  
MCP_ERROR
;

468 
›t
->
expúy
 = (
uöt32_t
)
vÆue
;

472 
›t
->
u£_n‹ïly
 = 1;

476 
size
 = 
	`°æí
(
›èrg
);

477 i‡(
size
 > 
MCP_PREFIX_LEN
) {

478 
	`log_°dîr
("mcperf: keyÖrefix cannotÉxceed %d inÜength",

479 
MCP_PREFIX_LEN
);

480  
MCP_ERROR
;

482 
›t
->
¥efix
.
d©a
 = 
›èrg
;

483 
›t
->
¥efix
.
Àn
 = 
size
;

487 
pos
 = 
	`°rchr
(
›èrg
, '/');

488 i‡(
pos
 =
NULL
) {

489 
	`log_°dîr
("m˝îf: invÆid clõ¡ id f‹m© '%s'", 
›èrg
);

490  
MCP_ERROR
;

492 *
pos
 = '\0';

494 
vÆue
 = 
	`m˝_©oi
(
›èrg
);

495 i‡(
vÆue
 < 0) {

496 
	`log_°dîr
("m˝îf: clõ¡ id i†nŸáÇumbî '%s'", 
›èrg
);

497  
MCP_ERROR
;

499 
›t
->
˛õ¡
.
id
 = (
uöt32_t
)
vÆue
;

501 
›èrg
 = 
pos
 + 1;

503 
vÆue
 = 
	`m˝_©oi
(
›èrg
);

504 i‡(
vÆue
 < 0) {

505 
	`log_°dîr
("mcperf:Çumber of clients isÇotáÇumber '%s'",

506 
›èrg
);

507  
MCP_ERROR
;

509 
›t
->
˛õ¡
.
n
 = (
uöt32_t
)
vÆue
;

513 
vÆue
 = 
	`m˝_©oi
(
›èrg
);

514 i‡(
vÆue
 < 0) {

515 
	`log_°dîr
("mcperf: option -nÑequiresáÇumber");

516  
MCP_ERROR
;

518 
›t
->
num_c⁄ns
 = (
uöt32_t
)
vÆue
;

522 
vÆue
 = 
	`m˝_©oi
(
›èrg
);

523 i‡(
vÆue
 < 0) {

524 
	`log_°dîr
("mcperf: option -NÑequiresáÇumber");

525  
MCP_ERROR
;

527 
›t
->
num_ˇŒs
 = (
uöt32_t
)
vÆue
;

531 
°©us
 = 
	`m˝_gë_di°_›t
(&
›t
->
c⁄n_d›t
, 
›èrg
);

532 i‡(
°©us
 !
MCP_OK
) {

533  
°©us
;

538 
°©us
 = 
	`m˝_gë_di°_›t
(&
›t
->
ˇŒ_d›t
, 
›èrg
);

539 i‡(
°©us
 !
MCP_OK
) {

540  
°©us
;

545 
›t
->
dißbÀ_nodñay
 = 1;

549 
°©us
 = 
	`m˝_gë_di°_›t
(&
›t
->
size_d›t
, 
›èrg
);

550 i‡(
°©us
 !
MCP_OK
) {

551  
°©us
;

553 i‡(
›t
->
size_d›t
.
ty≥
 =
DIST_NONE
) {

554 
	`log_°dîr
("mcperf: invalid distributionÅype %d for item "

555 "sizes", 
›t
->
size_d›t
.
ty≥
);

556  
MCP_ERROR
;

561 
›t›t
) {

563 
	`log_°dîr
("m˝îf: o±i⁄ -%¯ªquúe†®fûê«me", 
›t›t
);

570 
	`log_°dîr
("m˝îf: o±i⁄ -%¯ªquúe†®°rög", 
›t›t
);

581 
	`log_°dîr
("m˝îf: o±i⁄ -%¯ªquúe†®numbî", 
›t›t
);

585 
	`log_°dîr
("m˝îf: o±i⁄ -%¯ªquúe†®ªÆÇumbî", 
›t›t
);

591 
	`log_°dîr
("m˝îf: o±i⁄ -%¯ªquúe†®di°ributi⁄", 
›t›t
);

595 
	`log_°dîr
("m˝îf: invÆid o±i⁄ -- '%c'", 
›t›t
);

598  
MCP_ERROR
;

601 
	`log_°dîr
("m˝îf: invÆid o±i⁄ -- '%c'", 
›t›t
);

602  
MCP_ERROR
;

606  
MCP_OK
;

607 
	}
}

609 
r°©us_t


610 
	$m˝_¥e_run
(
c⁄ãxt
 *
˘x
)

612 
r°©us_t
 
°©us
;

613 
›t
 *›à&
˘x
->opt;

616 
°©us
 = 
	`log_öô
(
›t
->
log_Àvñ
, o±->
log_fûíame
);

617 i‡(
°©us
 !
MCP_OK
) {

618  
°©us
;

622 
	`mem£t
(
˘x
->
buf1m
, '0', (ctx->buf1m));

625 
°©us
 = 
	`m˝_ªsﬁve_addr
(
›t
->
£rvî
, o±->
p‹t
, &›t->
si
);

626 i‡(
°©us
 !
MCP_OK
) {

627  
°©us
;

634 
	`di°_öô
(&
˘x
->
c⁄n_di°
, 
›t
->
c⁄n_d›t
.
ty≥
, o±->c⁄n_d›t.
mö
,

635 
›t
->
c⁄n_d›t
.
max
, o±->
˛õ¡
.
id
);

637 
	`di°_öô
(&
˘x
->
ˇŒ_di°
, 
›t
->
ˇŒ_d›t
.
ty≥
, o±->ˇŒ_d›t.
mö
,

638 
›t
->
ˇŒ_d›t
.
max
, o±->
˛õ¡
.
id
);

640 
	`di°_öô
(&
˘x
->
size_di°
, 
›t
->
size_d›t
.
ty≥
, o±->size_d›t.
mö
,

641 
›t
->
size_d›t
.
max
, o±->
˛õ¡
.
id
);

644 
	`°©s_öô
(
˘x
);

647 
	`timî_öô
();

650 
°©us
 = 
	`c‹e_öô
(
˘x
);

651 i‡(
°©us
 !
MCP_OK
) {

652  
°©us
;

655  
MCP_OK
;

656 
	}
}

659 
	$m˝_run
(
c⁄ãxt
 *
˘x
)

661 
r°©us_t
 
°©us
;

663 
	`c‹e_°¨t
(
˘x
);

666 
°©us
 = 
	`c‹e_lo›
(
˘x
);

667 i‡(
°©us
 !
MCP_OK
) {

671 
	}
}

674 
	$maö
(
¨gc
, **
¨gv
)

676 
r°©us_t
 
°©us
;

677 
c⁄ãxt
 
˘x
;

679 
	`m˝_£t_deÁu…_›ti⁄s
(&
˘x
);

681 
°©us
 = 
	`m˝_gë_›ti⁄s
(&
˘x
, 
¨gc
, 
¨gv
);

682 i‡(
°©us
 !
MCP_OK
) {

683 
	`m˝_show_ußge
();

684 
	`exô
(1);

687 i‡(
show_vîsi⁄
) {

688 
	`log_°dîr
("Thi†i†m˝îf-%s" 
CRLF
, 
MCP_VERSION_STRING
);

689 i‡(
show_hñp
) {

690 
	`m˝_show_ußge
();

692 
	`exô
(0);

695 
°©us
 = 
	`m˝_¥e_run
(&
˘x
);

696 i‡(
°©us
 !
MCP_OK
) {

697 
	`exô
(1);

700 
	`m˝_run
(&
˘x
);

703 
	}
}

	@mcp_call.c

19 
	~<m˝_c‹e.h
>

21 
	gn‰ì_ˇŒq
;

22 
ˇŒ_tqh
 
	g‰ì_ˇŒq
;

23 
uöt64_t
 
	gid
;

25 
	#DEFINE_ACTION
(
_ty≥
, 
_«me
Ë{ _«me, (_«meË- 1 },

	)

26 
°rög
 
	gªq_°rögs
[] = {

27 
REQ_CODEC
–
DEFINE_ACTION
 )

28 { 
NULL
, 0 }

30 #unde‡
DEFINE_ACTION


32 
	#DEFINE_ACTION
(
_ty≥
, 
_«me
Ë{ _«me, (_«meË- 1 },

	)

33 
°rög
 
	gr•_°rögs
[] = {

34 
RSP_CODEC
–
DEFINE_ACTION
 )

35 { 
NULL
, 0 }

37 #unde‡
DEFINE_ACTION


39 
	#DEFINE_ACTION
(
_ty≥
, 
_«me
Ë{ _«me, (_«meË- 1 },

	)

40 
°rög
 
	gmsg_°rögs
[] = {

41 
REQ_CODEC
–
DEFINE_ACTION
 )

42 
RSP_CODEC
–
DEFINE_ACTION
 )

43 
MSG_CODEC
–
DEFINE_ACTION
 )

44 { 
NULL
, 0 }

46 #unde‡
DEFINE_ACTION


48 
ˇŒ
 *

49 
	$ˇŒ_gë
(
c⁄n
 *conn)

51 
ˇŒ
 *call;

52 
uöt32_t
 
i
;

54 i‡(!
	`STAILQ_EMPTY
(&
‰ì_ˇŒq
)) {

55 
	`ASSERT
(
n‰ì_ˇŒq
 > 0);

57 
ˇŒ
 = 
	`STAILQ_FIRST
(&
‰ì_ˇŒq
);

58 
n‰ì_ˇŒq
--;

60 
	`STAILQ_REMOVE_HEAD
(&
‰ì_ˇŒq
, 
ˇŒ_tqe
);

62 
ˇŒ
 = 
	`m˝_Æloc
((*call));

63 i‡(
ˇŒ
 =
NULL
) {

64  
NULL
;

68 
	`STAILQ_NEXT
(
ˇŒ
, 
ˇŒ_tqe
Ë
NULL
;

69 
ˇŒ
->
id
 = ++id;

70 
ˇŒ
->
c⁄n
 = conn;

73 
ˇŒ
->
ªq
.
£nd
 = 0;

74 
ˇŒ
->
ªq
.
£¡
 = 0;

75 
ˇŒ
->
ªq
.
issue_°¨t
 = 0.0;

76 
ˇŒ
->
ªq
.
£nd_°¨t
 = 0.0;

77 
ˇŒ
->
ªq
.
£nd_°›
 = 0.0;

78 
i
 = 0; i < 
REQ_IOV_LEN
; i++) {

79 
ˇŒ
->
ªq
.
iov
[
i
].
iov_ba£
 = 
NULL
;

80 
ˇŒ
->
ªq
.
iov
[
i
].
iov_Àn
 = 0;

82 
ˇŒ
->
ªq
.
n‹ïly
 = 0;

83 
ˇŒ
->
ªq
.
£ndög
 = 0;

85 
ˇŒ
->
r•
.
ªcv_°¨t
 = 0.0;

86 
ˇŒ
->
r•
.
rcvd
 = 0;

87 
ˇŒ
->
r•
.
rcuº
 = 
c⁄n
->
buf
;

88 
ˇŒ
->
r•
.
rsize
 = (
c⁄n
->
buf
);

89 
ˇŒ
->
r•
.
pcuº
 = cÆl->r•.
rcuº
;

90 
ˇŒ
->
r•
.
°¨t
 = 
NULL
;

91 
ˇŒ
->
r•
.
íd
 = 
NULL
;

92 
ˇŒ
->
r•
.
ty≥
 = 0;

93 
ˇŒ
->
r•
.
vÀn
 = 0;

94 
ˇŒ
->
r•
.
∑r£d_löe
 = 0;

95 
ˇŒ
->
r•
.
∑r£d_vÀn
 = 0;

97 
	`log_debug
(
LOG_VVERB
, "gë cÆ»%∞id %"
PRIu64
"", 
ˇŒ
, cÆl->
id
);

99  
ˇŒ
;

100 
	}
}

103 
	$ˇŒ_put
(
ˇŒ
 *call)

105 
	`log_debug
(
LOG_VVERB
, "puàˇŒ %∞id %"
PRIu64
"", 
ˇŒ
, cÆl->
id
);

107 
n‰ì_ˇŒq
++;

108 
	`STAILQ_INSERT_TAIL
(&
‰ì_ˇŒq
, 
ˇŒ
, 
ˇŒ_tqe
);

109 
	}
}

112 
	$ˇŒ_‰ì
(
ˇŒ
 *call)

114 
	`log_debug
(
LOG_VVERB
, "‰ì cÆ»%∞id %"
PRIu64
"", 
ˇŒ
, cÆl->
id
);

115 
	`m˝_‰ì
(
ˇŒ
);

116 
	}
}

119 
	$ˇŒ_öô
()

121 
n‰ì_ˇŒq
 = 0;

122 
	`STAILQ_INIT
(&
‰ì_ˇŒq
);

123 
	}
}

126 
	$ˇŒ_deöô
()

128 
ˇŒ
 *ˇŒ, *
nˇŒ
;

130 
ˇŒ
 = 
	`STAILQ_FIRST
(&
‰ì_ˇŒq
); cÆ»!
NULL
;

131 
ˇŒ
 = 
nˇŒ
, 
n‰ì_ˇŒq
--) {

132 
	`ASSERT
(
n‰ì_ˇŒq
 > 0);

133 
nˇŒ
 = 
	`STAILQ_NEXT
(
ˇŒ
, 
ˇŒ_tqe
);

134 
	`ˇŒ_‰ì
(
ˇŒ
);

136 
	`ASSERT
(
n‰ì_ˇŒq
 == 0);

137 
	}
}

139 
r°©us_t


140 
	$ˇŒ_°¨t_timî
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *call)

142 
›t
 *›à&
˘x
->opt;

143 
c⁄n
 *c⁄¿
ˇŒ
->conn;

144 
timeout
;

146 
	`ASSERT
(!
	`STAILQ_EMPTY
(&
c⁄n
->
ˇŒ_ªcvq
));

148 i‡(
›t
->
timeout
 == 0.0) {

149  
MCP_OK
;

152 i‡(
ˇŒ
 !
	`STAILQ_FIRST
(&
c⁄n
->
ˇŒ_ªcvq
)) {

157 
	`ASSERT
(
c⁄n
->
w©chdog
 !
NULL
);

158  
MCP_OK
;

161 
	`ASSERT
(
c⁄n
->
w©chdog
 =
NULL
);

162 
	`ASSERT
(
ˇŒ
->
ªq
.
£nd_°›
 > 0.0);

163 
	`ASSERT
(
	`timî_now
(Ë>
ˇŒ
->
ªq
.
£nd_°›
);

164 
	`ASSERT
(
›t
->
timeout
 > (
	`timî_now
(Ë- 
ˇŒ
->
ªq
.
£nd_°›
));

166 
timeout
 = 
›t
->timeout;

167 
timeout
 -
	`timî_now
(Ë- 
ˇŒ
->
ªq
.
£nd_°›
;

168 
c⁄n
->
w©chdog
 = 
	`timî_scheduÀ
(
c‹e_timeout
, c⁄n, 
timeout
);

169 i‡(
c⁄n
->
w©chdog
 =
NULL
) {

170  
MCP_ENOMEM
;

173  
MCP_OK
;

174 
	}
}

176 
r°©us_t


177 
	$ˇŒ_ª£t_timî
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *call)

179 
›t
 *›à&
˘x
->opt;

180 
c⁄n
 *c⁄¿
ˇŒ
->conn;

182 i‡(
›t
->
timeout
 == 0.0) {

183  
MCP_OK
;

186 
	`ASSERT
(
c⁄n
->
w©chdog
 !
NULL
);

187 
	`timî_ˇn˚l
(
c⁄n
->
w©chdog
);

189 i‡(
	`STAILQ_EMPTY
(&
c⁄n
->
ˇŒ_ªcvq
)) {

194  
MCP_OK
;

197  
	`ˇŒ_°¨t_timî
(
˘x
, 
	`STAILQ_FIRST
(&
c⁄n
->
ˇŒ_ªcvq
));

198 
	}
}

201 
	$ˇŒ_make_ªåõvÆ_ªq
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *call,

202 
uöt32_t
 
key_id
)

204 
›t
 *›à&
˘x
->opt;

205 
Àn
;

206 
uöt32_t
 
i
;

209 
ˇŒ
->
ªq
.
n‹ïly
 = 0;

211 
i
 = 0; i < 
REQ_IOV_LEN
; i++) {

212 
iovec
 *
iov
 = &
ˇŒ
->
ªq
.iov[
i
];

214 
i
) {

215 
REQ_IOV_METHOD
:

216 
iov
->
iov_ba£
 = 
ªq_°rögs
[
›t
->
mëhod
].
d©a
;

217 
iov
->
iov_Àn
 = 
ªq_°rögs
[
›t
->
mëhod
].
Àn
;

220 
REQ_IOV_KEY
:

221 
Àn
 = 
	`m˝_s˙¥ötf
(
ˇŒ
->
ªq
.
key«me
, (call->req.keyname),

222 "%.*s%08"
PRIx32
, 
›t
->
¥efix
.
Àn
,

223 
›t
->
¥efix
.
d©a
, 
key_id
);

224 
iov
->
iov_ba£
 = 
ˇŒ
->
ªq
.
key«me
;

225 
iov
->
iov_Àn
 = (
size_t
)
Àn
;

228 
REQ_IOV_CRLF
:

229 
iov
->
iov_ba£
 = 
msg_°rögs
[
MSG_CRLF
].
d©a
;

230 
iov
->
iov_Àn
 = 
msg_°rögs
[
MSG_CRLF
].
Àn
;

233 
REQ_IOV_FLAG
:

234 
REQ_IOV_EXPIRY
:

235 
REQ_IOV_VLEN
:

236 
REQ_IOV_CAS
:

237 
REQ_IOV_NOREPLY
:

238 
REQ_IOV_VALUE
:

239 
REQ_IOV_CRLF2
:

240 
iov
->
iov_ba£
 = 
NULL
;

241 
iov
->
iov_Àn
 = 0;

245 
	`NOT_REACHED
();

247 
ˇŒ
->
ªq
.
£nd
 +
iov
->
iov_Àn
;

249 
	}
}

252 
	$ˇŒ_make_dñëe_ªq
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *ˇŒ, 
uöt32_t
 
key_id
)

254 
›t
 *›à&
˘x
->opt;

255 
Àn
;

256 
uöt32_t
 
i
;

258 
i
 = 0; i < 
REQ_IOV_LEN
; i++) {

259 
iovec
 *
iov
 = &
ˇŒ
->
ªq
.iov[
i
];

261 
i
) {

262 
REQ_IOV_METHOD
:

263 
iov
->
iov_ba£
 = 
ªq_°rögs
[
›t
->
mëhod
].
d©a
;

264 
iov
->
iov_Àn
 = 
ªq_°rögs
[
›t
->
mëhod
].
Àn
;

267 
REQ_IOV_KEY
:

268 
Àn
 = 
	`m˝_s˙¥ötf
(
ˇŒ
->
ªq
.
key«me
, (call->req.keyname),

269 "%.*s%08"
PRIx32
" ", 
›t
->
¥efix
.
Àn
,

270 
›t
->
¥efix
.
d©a
, 
key_id
);

271 
iov
->
iov_ba£
 = 
ˇŒ
->
ªq
.
key«me
;

272 
iov
->
iov_Àn
 = (
size_t
)
Àn
;

275 
REQ_IOV_FLAG
:

276 
REQ_IOV_EXPIRY
:

277 
REQ_IOV_VLEN
:

278 
REQ_IOV_CAS
:

279 
iov
->
iov_ba£
 = 
NULL
;

280 
iov
->
iov_Àn
 = 0;

283 
REQ_IOV_NOREPLY
:

284 i‡(
›t
->
u£_n‹ïly
) {

285 
iov
->
iov_ba£
 = 
msg_°rögs
[
MSG_NOREPLY
].
d©a
;

286 
iov
->
iov_Àn
 = 
msg_°rögs
[
MSG_NOREPLY
].
Àn
;

287 
ˇŒ
->
ªq
.
n‹ïly
 = 1;

289 
iov
->
iov_ba£
 = 
NULL
;

290 
iov
->
iov_Àn
 = 0;

291 
ˇŒ
->
ªq
.
n‹ïly
 = 0;

295 
REQ_IOV_CRLF
:

296 
iov
->
iov_ba£
 = 
msg_°rögs
[
MSG_CRLF
].
d©a
;

297 
iov
->
iov_Àn
 = 
msg_°rögs
[
MSG_CRLF
].
Àn
;

300 
REQ_IOV_VALUE
:

301 
REQ_IOV_CRLF2
:

302 
iov
->
iov_ba£
 = 
NULL
;

303 
iov
->
iov_Àn
 = 0;

307 
	`NOT_REACHED
();

309 
ˇŒ
->
ªq
.
£nd
 +
iov
->
iov_Àn
;

311 
	}
}

314 
	$ˇŒ_make_°‹age_ªq
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *ˇŒ, 
uöt32_t
 
key_id
,

315 
key_vÀn
)

317 
›t
 *›à&
˘x
->opt;

318 
Àn
;

319 
uöt32_t
 
i
;

321 
i
 = 0; i < 
REQ_IOV_LEN
; i++) {

322 
iovec
 *
iov
 = &
ˇŒ
->
ªq
.iov[
i
];

324 
i
) {

325 
REQ_IOV_METHOD
:

326 
iov
->
iov_ba£
 = 
ªq_°rögs
[
›t
->
mëhod
].
d©a
;

327 
iov
->
iov_Àn
 = 
ªq_°rögs
[
›t
->
mëhod
].
Àn
;

330 
REQ_IOV_KEY
:

331 
Àn
 = 
	`m˝_s˙¥ötf
(
ˇŒ
->
ªq
.
key«me
, (call->req.keyname),

332 "%.*s%08"
PRIx32
" ", 
›t
->
¥efix
.
Àn
,

333 
›t
->
¥efix
.
d©a
, 
key_id
);

334 
iov
->
iov_ba£
 = 
ˇŒ
->
ªq
.
key«me
;

335 
iov
->
iov_Àn
 = (
size_t
)
Àn
;

338 
REQ_IOV_FLAG
:

339 
iov
->
iov_ba£
 = 
msg_°rögs
[
MSG_ZERO
].
d©a
;

340 
iov
->
iov_Àn
 = 
msg_°rögs
[
MSG_ZERO
].
Àn
;

343 
REQ_IOV_EXPIRY
:

344 
Àn
 = 
	`m˝_s˙¥ötf
(
ˇŒ
->
ªq
.
expúy
, (call->req.expiry),

345 "%"
PRIu32
" ", 
›t
->
expúy
);

346 
iov
->
iov_ba£
 = 
ˇŒ
->
ªq
.
expúy
;

347 
iov
->
iov_Àn
 = (
size_t
)
Àn
;

350 
REQ_IOV_VLEN
:

351 
Àn
 = 
	`m˝_s˙¥ötf
(
ˇŒ
->
ªq
.
keyÀn
, (call->req.keylen),

352 "%ld ", 
key_vÀn
);

353 
iov
->
iov_ba£
 = 
ˇŒ
->
ªq
.
keyÀn
;

354 
iov
->
iov_Àn
 = (
size_t
)
Àn
;

357 
REQ_IOV_CAS
:

358 i‡(
›t
->
mëhod
 =
REQ_CAS
) {

359 
iov
->
iov_ba£
 = "1 ";

360 
iov
->
iov_Àn
 = 2;

362 
iov
->
iov_ba£
 = 
NULL
;

363 
iov
->
iov_Àn
 = 0;

367 
REQ_IOV_NOREPLY
:

368 i‡(
›t
->
u£_n‹ïly
) {

369 
iov
->
iov_ba£
 = 
msg_°rögs
[
MSG_NOREPLY
].
d©a
;

370 
iov
->
iov_Àn
 = 
msg_°rögs
[
MSG_NOREPLY
].
Àn
;

371 
ˇŒ
->
ªq
.
n‹ïly
 = 1;

373 
iov
->
iov_ba£
 = 
NULL
;

374 
iov
->
iov_Àn
 = 0;

375 
ˇŒ
->
ªq
.
n‹ïly
 = 0;

379 
REQ_IOV_CRLF
:

380 
iov
->
iov_ba£
 = 
msg_°rögs
[
MSG_CRLF
].
d©a
;

381 
iov
->
iov_Àn
 = 
msg_°rögs
[
MSG_CRLF
].
Àn
;

384 
REQ_IOV_VALUE
:

385 
	`ASSERT
(
key_vÀn
 >0 && key_vÀ¿<(
˘x
->
buf1m
));

386 
iov
->
iov_ba£
 = 
˘x
->
buf1m
;

387 
iov
->
iov_Àn
 = (
size_t
)
key_vÀn
;

390 
REQ_IOV_CRLF2
:

391 
iov
->
iov_ba£
 = 
msg_°rögs
[
MSG_CRLF
].
d©a
;

392 
iov
->
iov_Àn
 = 
msg_°rögs
[
MSG_CRLF
].
Àn
;

396 
	`NOT_REACHED
();

398 
ˇŒ
->
ªq
.
£nd
 +
iov
->
iov_Àn
;

400 
	}
}

403 
	$ˇŒ_make_¨ôhmëic_ªq
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *call,

404 
uöt32_t
 
key_id
, 
key_vÀn
)

406 
›t
 *›à&
˘x
->opt;

407 
Àn
;

408 
uöt32_t
 
i
;

410 
i
 = 0; i < 
REQ_IOV_LEN
; i++) {

411 
iovec
 *
iov
 = &
ˇŒ
->
ªq
.iov[
i
];

413 
i
) {

414 
REQ_IOV_METHOD
:

415 
iov
->
iov_ba£
 = 
ªq_°rögs
[
›t
->
mëhod
].
d©a
;

416 
iov
->
iov_Àn
 = 
ªq_°rögs
[
›t
->
mëhod
].
Àn
;

419 
REQ_IOV_KEY
:

420 
Àn
 = 
	`m˝_s˙¥ötf
(
ˇŒ
->
ªq
.
key«me
, (call->req.keyname),

421 "%.*s%08"
PRIx32
" ", 
›t
->
¥efix
.
Àn
,

422 
›t
->
¥efix
.
d©a
, 
key_id
);

423 
iov
->
iov_ba£
 = 
ˇŒ
->
ªq
.
key«me
;

424 
iov
->
iov_Àn
 = (
size_t
)
Àn
;

427 
REQ_IOV_FLAG
:

428 
iov
->
iov_ba£
 = 
NULL
;

429 
iov
->
iov_Àn
 = 0;

432 
REQ_IOV_EXPIRY
:

434 
Àn
 = 
	`m˝_s˙¥ötf
(
ˇŒ
->
ªq
.
expúy
, (call->req.expiry),

435 "%ld ", 
key_vÀn
);

436 
iov
->
iov_ba£
 = 
ˇŒ
->
ªq
.
expúy
;

437 
iov
->
iov_Àn
 = (
size_t
)
Àn
;

440 
REQ_IOV_VLEN
:

441 
REQ_IOV_CAS
:

442 
iov
->
iov_ba£
 = 
NULL
;

443 
iov
->
iov_Àn
 = 0;

446 
REQ_IOV_NOREPLY
:

447 i‡(
›t
->
u£_n‹ïly
) {

448 
iov
->
iov_ba£
 = 
msg_°rögs
[
MSG_NOREPLY
].
d©a
;

449 
iov
->
iov_Àn
 = 
msg_°rögs
[
MSG_NOREPLY
].
Àn
;

450 
ˇŒ
->
ªq
.
n‹ïly
 = 1;

452 
iov
->
iov_ba£
 = 
NULL
;

453 
iov
->
iov_Àn
 = 0;

454 
ˇŒ
->
ªq
.
n‹ïly
 = 0;

458 
REQ_IOV_CRLF
:

459 
iov
->
iov_ba£
 = 
msg_°rögs
[
MSG_CRLF
].
d©a
;

460 
iov
->
iov_Àn
 = 
msg_°rögs
[
MSG_CRLF
].
Àn
;

463 
REQ_IOV_VALUE
:

464 
REQ_IOV_CRLF2
:

465 
iov
->
iov_ba£
 = 
NULL
;

466 
iov
->
iov_Àn
 = 0;

470 
	`NOT_REACHED
();

472 
ˇŒ
->
ªq
.
£nd
 +
iov
->
iov_Àn
;

474 
	}
}

477 
	$ˇŒ_make_ªq
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *call)

479 
›t
 *›à&
˘x
->opt;

480 
di°_öfo
 *
di
 = &
˘x
->
size_di°
;

481 
uöt32_t
 
key_id
;

482 
key_vÀn
;

484 
ˇŒ
->
ªq
.
£nd
 = 0;

485 
ˇŒ
->
ªq
.
£¡
 = 0;

491 
key_id
 = 
di
->
√xt_id
;

492 
key_vÀn
 = 
	`Ãöt
(
di
->
√xt_vÆ
);

493 
	`ecb_sig«l
(
˘x
, 
EVENT_GEN_SIZE_FIRE
, &˘x->
size_gí
);

495 
›t
->
mëhod
) {

496 
REQ_GET
:

497 
REQ_GETS
:

498 
	`ˇŒ_make_ªåõvÆ_ªq
(
˘x
, 
ˇŒ
, 
key_id
);

501 
REQ_DELETE
:

502 
	`ˇŒ_make_dñëe_ªq
(
˘x
, 
ˇŒ
, 
key_id
);

505 
REQ_CAS
:

506 
REQ_SET
:

507 
REQ_ADD
:

508 
REQ_REPLACE
:

509 
REQ_APPEND
:

510 
REQ_PREPEND
:

511 
REQ_XXX
:

512 
	`ˇŒ_make_°‹age_ªq
(
˘x
, 
ˇŒ
, 
key_id
, 
key_vÀn
);

515 
REQ_INCR
:

516 
REQ_DECR
:

517 
	`ˇŒ_make_¨ôhmëic_ªq
(
˘x
, 
ˇŒ
, 
key_id
, 
key_vÀn
);

521 
	`NOT_REACHED
();

523 
	}
}

525 
r°©us_t


526 
	$ˇŒ_£nd
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *call)

528 
c⁄n
 *c⁄¿
ˇŒ
->conn;

529 
size_t
 
£¡
;

530 
ssize_t
 
n
;

531 
uöt32_t
 
i
;

533 
	`ASSERT
(
ˇŒ
->
ªq
.
£nd
 != 0);

535 i‡(!
ˇŒ
->
ªq
.
£ndög
) {

540 
	`ecb_sig«l
(
˘x
, 
EVENT_CALL_SEND_START
, 
ˇŒ
);

541 
ˇŒ
->
ªq
.
£ndög
 = 1;

544 
n
 = 
	`c⁄n_£ndv
(
c⁄n
, 
ˇŒ
->
ªq
.
iov
, 
REQ_IOV_LEN
, cÆl->ªq.
£nd
);

546 
£¡
 = 
n
 > 0 ? (
size_t
)n : 0;

548 
	`log_debug
(
LOG_VERB
, "£nd cÆ»%"
PRIu64
" on c %"PRIu64" sd %d %zu of %zu "

549 "byãs", 
ˇŒ
->
id
, 
c⁄n
->id, c⁄n->
sd
, 
£¡
, cÆl->
ªq
.
£nd
);

551 
ˇŒ
->
ªq
.
£nd
 -
£¡
;

552 
ˇŒ
->
ªq
.
£¡
 += sent;

554 
i
 = 0; i < 
REQ_IOV_LEN
; i++) {

555 
iovec
 *
iov
 = &
ˇŒ
->
ªq
.iov[
i
];

557 i‡(
£¡
 == 0) {

561 i‡(
£¡
 < 
iov
->
iov_Àn
) {

563 
iov
->
iov_ba£
 = (*)iov->iov_ba£ + 
£¡
;

564 
iov
->
iov_Àn
 -
£¡
;

565 
£¡
 = 0;

570 
£¡
 -
iov
->
iov_Àn
;

571 
iov
->
iov_ba£
 = 
NULL
;

572 
iov
->
iov_Àn
 = 0;

575 i‡(
ˇŒ
->
ªq
.
£nd
 == 0) {

576 
	`ecb_sig«l
(
˘x
, 
EVENT_CALL_SEND_STOP
, 
ˇŒ
);

582 
c⁄n
->
nˇŒ_£ndq
--;

583 
	`STAILQ_REMOVE
(&
c⁄n
->
ˇŒ_£ndq
, 
ˇŒ
, cÆl, 
ˇŒ_tqe
);

585 i‡(
ˇŒ
->
ªq
.
n‹ïly
) {

586 
	`ecb_sig«l
(
˘x
, 
EVENT_CALL_DESTROYED
, 
ˇŒ
);

587 
	`ˇŒ_put
(
ˇŒ
);

589 
	`STAILQ_INSERT_TAIL
(&
c⁄n
->
ˇŒ_ªcvq
, 
ˇŒ
, 
ˇŒ_tqe
);

590 
c⁄n
->
nˇŒ_ªcvq
++;

591 
	`ˇŒ_°¨t_timî
(
˘x
, 
ˇŒ
);

595 i‡(
n
 > 0) {

596  
MCP_OK
;

599  (
n
 =
MCP_EAGAIN
Ë? 
MCP_OK
 : 
MCP_ERROR
;

600 
	}
}

602 
r°©us_t


603 
	$ˇŒ_∑r£_r•_löe
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *call)

605 *
p
, *
q
;

606 
size
;

607 
°rög
 *
°r
;

609 i‡(
ˇŒ
->
r•
.
∑r£d_löe
) {

610  
MCP_OK
;

613 
	`ASSERT
(
ˇŒ
->
r•
.
rcuº
 > cÆl->r•.
pcuº
);

615 
size
 = 
ˇŒ
->
r•
.
rcuº
 - cÆl->r•.
pcuº
;

617 
p
 = 
ˇŒ
->
r•
.
pcuº
;

618 
q
 = 
	`m˝_memchr
(
p
, '\n', 
size
);

619 i‡(
q
 =
NULL
) {

620  
MCP_EAGAIN
;

622 
	`ASSERT
(*(
q
 - 1) == '\r');

623 
q
 = q + 1;

626 
ˇŒ
->
r•
.
°¨t
 = 
p
;

627 
ˇŒ
->
r•
.
íd
 = 
q
;

630 
ˇŒ
->
r•
.
pcuº
 = 
q
;

632 
°r
 = &
r•_°rögs
[0]; så->
d©a
 !
NULL
; str++) {

633 i‡((
°r
->
Àn
 < (
ˇŒ
->
r•
.
íd
 - cÆl->r•.
°¨t
)) &&

634 
	`°∫cmp
(
p
, 
°r
->
d©a
, så->
Àn
) == 0) {

635 
ˇŒ
->
r•
.
ty≥
 = 
°r
 - 
r•_°rögs
;

636 
ˇŒ
->
r•
.
∑r£d_löe
 = 1;

637  
MCP_OK
;

641  
MCP_ERROR
;

642 
	}
}

644 
r°©us_t


645 
	$ˇŒ_∑r£_r•_vÀn
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *call)

647 *
p
, *
q
;

648 
tokí
;

650 
p
 = 
ˇŒ
->
r•
.
°¨t
;

651 
q
 = 
ˇŒ
->
r•
.
íd
;

657 
tokí
 = 0;

658 
p
 < 
q
) {

659 i‡(*
p
 != ' ') {

660 
p
++;

664 
tokí
++;

667 *
p
 == ' ') {

668 
p
++;

671 i‡(
tokí
 == 3) {

676 i‡(
tokí
 != 3) {

677  
MCP_EAGAIN
;

680 
ˇŒ
->
r•
.
vÀn
 = 0;

681 
p
 < 
q
) {

682 i‡(*
p
 < '0' || *p > '9') {

686 
ˇŒ
->
r•
.
vÀn
 = cÆl->r•.vÀ¿* 10 + (
uöt32_t
)(*
p
 - '0');

687 
p
++;

690 
p
 = (∞!
q
) ?Ö :Ö - 1;

691 
q
 = 
	`m˝_memchr
(
p
, '\n', q -Ö);

692 i‡(
q
 =
NULL
) {

693 
ˇŒ
->
r•
.
vÀn
 = 0;

694  
MCP_EAGAIN
;

697 
ˇŒ
->
r•
.
vÀn
 += (("\r\n") - 1) + (("END\r\n") - 1);

698 
ˇŒ
->
r•
.
∑r£d_vÀn
 = 1;

700  
MCP_OK
;

701 
	}
}

703 
r°©us_t


704 
	$ˇŒ_∑r£_r•_vÆue
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *call)

706 
r°©us_t
 
°©us
;

707 
c⁄n
 *c⁄¿
ˇŒ
->conn;

708 
size_t
 
size
;

710 i‡(!
ˇŒ
->
r•
.
∑r£d_vÀn
) {

711 
°©us
 = 
	`ˇŒ_∑r£_r•_vÀn
(
˘x
, 
ˇŒ
);

712 i‡(
°©us
 !
MCP_OK
) {

713  
°©us
;

715 
	`ASSERT
(
ˇŒ
->
r•
.
∑r£d_vÀn
);

718 
	`ASSERT
(
ˇŒ
->
r•
.
rcuº
 >ˇŒ->r•.
pcuº
);

720 
size
 = (
size_t
)(
ˇŒ
->
r•
.
rcuº
 - cÆl->r•.
pcuº
);

722 i‡(
ˇŒ
->
r•
.
vÀn
 < 
size
) {

727 
ˇŒ
->
r•
.
pcuº
 = cÆl->r•.pcuº + cÆl->r•.
vÀn
;

728 
ˇŒ
->
r•
.
vÀn
 = 0;

729  
MCP_OK
;

732 
ˇŒ
->
r•
.
vÀn
 -
size
;

738 
ˇŒ
->
r•
.
rcuº
 = 
c⁄n
->
buf
;

739 
ˇŒ
->
r•
.
rsize
 = (
c⁄n
->
buf
);

740 
ˇŒ
->
r•
.
pcuº
 = cÆl->r•.
rcuº
;

742  
ˇŒ
->
r•
.
vÀn
 =0 ? 
MCP_OK
 : 
MCP_EAGAIN
;

743 
	}
}

745 
r°©us_t


746 
	$ˇŒ_∑r£_r•
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *call)

748 
r°©us_t
 
°©us
;

754 
°©us
 = 
	`ˇŒ_∑r£_r•_löe
(
˘x
, 
ˇŒ
);

755 i‡(
°©us
 !
MCP_OK
) {

756  
°©us
;

764 i‡(
ˇŒ
->
r•
.
ty≥
 =
RSP_VALUE
) {

765  
	`ˇŒ_∑r£_r•_vÆue
(
˘x
, 
ˇŒ
);

768  
MCP_OK
;

769 
	}
}

771 
r°©us_t


772 
	$ˇŒ_ªcv
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *call)

774 
r°©us_t
 
°©us
;

775 
c⁄n
 *c⁄¿
ˇŒ
->conn;

776 
ssize_t
 
n
;

777 
size_t
 
rcvd
;

779 i‡(
ˇŒ
->
r•
.
rsize
 == 0) {

780 
size_t
 
chunk_size
;

782 
	`ASSERT
(
ˇŒ
->
r•
.
rcuº
 > cÆl->r•.
pcuº
);

788 
chunk_size
 = (
size_t
)(
ˇŒ
->
r•
.
rcuº
 - cÆl->r•.
pcuº
);

789 
	`m˝_memmove
(
c⁄n
->
buf
, 
ˇŒ
->
r•
.
pcuº
, 
chunk_size
);

790 
ˇŒ
->
r•
.
pcuº
 = 
c⁄n
->
buf
;

791 
ˇŒ
->
r•
.
rcuº
 = 
c⁄n
->
buf
 + 
chunk_size
;

792 
ˇŒ
->
r•
.
rsize
 = (
c⁄n
->
buf
Ë- 
chunk_size
;

795 i‡(
ˇŒ
->
r•
.
rcvd
 == 0) {

796 
	`ecb_sig«l
(
˘x
, 
EVENT_CALL_RECV_START
, 
ˇŒ
);

799 
n
 = 
	`c⁄n_ªcv
(
c⁄n
, 
ˇŒ
->
r•
.
rcuº
, cÆl->r•.
rsize
);

801 
rcvd
 = 
n
 > 0 ? (
size_t
)n : 0;

803 
ˇŒ
->
r•
.
rcvd
 +=Ñcvd;

804 
ˇŒ
->
r•
.
rcuº
 +
rcvd
;

805 
ˇŒ
->
r•
.
rsize
 -
rcvd
;

807 i‡(
n
 <= 0) {

808 i‡(
n
 =0 ||Ç =
MCP_EAGAIN
) {

809  
MCP_OK
;

811  
MCP_ERROR
;

815 
ˇŒ
 *
√xt_ˇŒ
;

817 
°©us
 = 
	`ˇŒ_∑r£_r•
(
˘x
, 
ˇŒ
);

818 i‡(
°©us
 !
MCP_OK
) {

819 i‡(
°©us
 =
MCP_EAGAIN
) {

821  
MCP_OK
;

823  
°©us
;

826 
√xt_ˇŒ
 = 
NULL
;

831 i‡(
ˇŒ
->
r•
.
rcuº
 !ˇŒ->r•.
pcuº
) {

832 
√xt_ˇŒ
 = 
	`STAILQ_NEXT
(
ˇŒ
, 
ˇŒ_tqe
);

833 i‡(
√xt_ˇŒ
 =
NULL
) {

834 
	`log_debug
(
LOG_ERR
, "°øyÑe•⁄£Åy≥ %d o¿¯%"
PRIu64
"",

835 
ˇŒ
->
r•
.
ty≥
, 
c⁄n
->
id
);

836 
c⁄n
->
îr
 = 
EINVAL
;

837  
MCP_ERROR
;

840 
	`ecb_sig«l
(
˘x
, 
EVENT_CALL_RECV_START
, 
√xt_ˇŒ
);

842 
√xt_ˇŒ
->
r•
.
rcuº
 = 
ˇŒ
->rsp.rcurr;

843 
√xt_ˇŒ
->
r•
.
rsize
 = 
ˇŒ
->rsp.rsize;

844 
√xt_ˇŒ
->
r•
.
pcuº
 = 
ˇŒ
->rsp.pcurr;

850 
	`ASSERT
(
ˇŒ
->
r•
.
rcuº
 > cÆl->r•.
pcuº
);

851 
√xt_ˇŒ
->
r•
.
rcvd
 = (
size_t
)(
ˇŒ
->r•.
rcuº
 - cÆl->r•.
pcuº
);

852 
ˇŒ
->
r•
.
rcvd
 -
√xt_ˇŒ
->rsp.rcvd;

855 
c⁄n
->
nˇŒ_ªcvq
--;

856 
	`STAILQ_REMOVE
(&
c⁄n
->
ˇŒ_ªcvq
, 
ˇŒ
, cÆl, 
ˇŒ_tqe
);

858 
	`ˇŒ_ª£t_timî
(
˘x
, 
ˇŒ
);

860 
	`ecb_sig«l
(
˘x
, 
EVENT_CALL_RECV_STOP
, 
ˇŒ
);

861 
	`ecb_sig«l
(
˘x
, 
EVENT_CALL_DESTROYED
, 
ˇŒ
);

863 
	`ˇŒ_put
(
ˇŒ
);

865 
ˇŒ
 = 
√xt_ˇŒ
;

866 } 
ˇŒ
 !
NULL
);

868  
MCP_OK
;

869 
	}
}

	@mcp_call.h

19 #i‚de‡
_MCP_CALL_H_


20 
	#_MCP_CALL_H_


	)

22 
	~<sys/uio.h
>

24 
	#LF
 (
uöt8_t
Ë10

	)

25 
	#CR
 (
uöt8_t
Ë13

	)

26 
	#CRLF
 "\x0d\x0a"

	)

27 
	#CRLF_LEN
 (
CRLF
Ë- 1

	)

29 
	#REQ_CODEC
(
ACTION
) \

30 
	`ACTION
–
GET
, "get " )\

31 
	`ACTION
–
GETS
, "gets " )\

32 
	`ACTION
–
DELETE
, "delete " )\

33 
	`ACTION
–
CAS
, "cas " )\

34 
	`ACTION
–
SET
, "set " )\

35 
	`ACTION
–
ADD
, "add " )\

36 
	`ACTION
–
REPLACE
, "replace " )\

37 
	`ACTION
–
APPEND
, "append " )\

38 
	`ACTION
–
PREPEND
, "prepend " )\

39 
	`ACTION
–
INCR
, "incr " )\

40 
	`ACTION
–
DECR
, "decr " )\

41 
	`ACTION
–
XXX
, "xxx " )\

42 

	)

43 
	#RSP_CODEC
(
ACTION
) \

44 
	`ACTION
–
STORED
, "STORED" )\

45 
	`ACTION
–
NOT_STORED
, "NOT_STORED" )\

46 
	`ACTION
–
EXISTS
, "EXISTS" )\

47 
	`ACTION
–
NOT_FOUND
, "NOT_FOUND" )\

48 
	`ACTION
–
END
, "END" )\

49 
	`ACTION
–
VALUE
, "VALUE" )\

50 
	`ACTION
–
DELETED
, "DELETED" )\

51 
	`ACTION
–
ERROR
, "ERROR" )\

52 
	`ACTION
–
CLIENT_ERROR
, "CLIENT_ERROR" )\

53 
	`ACTION
–
SERVER_ERROR
, "SERVER_ERROR" )\

54 
	`ACTION
–
NUM
, "" )\

55 

	)

56 
	#MSG_CODEC
(
ACTION
) \

57 
	`ACTION
–
NOREPLY
, "noreply" )\

58 
	`ACTION
–
CRLF
, "\r\n" )\

59 
	`ACTION
–
ZERO
, "0 " )\

60 

	)

61 
	#DEFINE_ACTION
(
_ty≥
, 
_«me
Ë
REQ_
##_ty≥,

	)

62 
	eªq_ty≥
 {

63 
REQ_CODEC
–
DEFINE_ACTION
 )

64 
	mREQ_MAX_TYPES


65 } 
	tªq_ty≥_t
;

66 #unde‡
DEFINE_ACTION


68 
	#DEFINE_ACTION
(
_ty≥
, 
_«me
Ë
RSP_
##_ty≥,

	)

69 
	er•_ty≥
 {

70 
RSP_CODEC
–
DEFINE_ACTION
 )

71 
	mRSP_MAX_TYPES


72 } 
	tr•_ty≥_t
;

73 #unde‡
DEFINE_ACTION


75 
	#DEFINE_ACTION
(
_ty≥
, 
_«me
Ë
MSG_
##_ty≥,

	)

76 
	emsg_ty≥
 {

77 
REQ_CODEC
–
DEFINE_ACTION
 )

78 
RSP_CODEC
–
DEFINE_ACTION
 )

79 
MSG_CODEC
–
DEFINE_ACTION
 )

80 
	mMSG_MAX_TYPES


81 } 
	tmsg_ty≥_t
;

82 #unde‡
DEFINE_ACTION


84 
	eªq_iov
 {

85 
	mREQ_IOV_METHOD
,

86 
	mREQ_IOV_KEY
,

87 
	mREQ_IOV_FLAG
,

88 
	mREQ_IOV_EXPIRY
,

89 
	mREQ_IOV_VLEN
,

90 
	mREQ_IOV_CAS
,

91 
	mREQ_IOV_NOREPLY
,

92 
	mREQ_IOV_CRLF
,

93 
	mREQ_IOV_VALUE
,

94 
	mREQ_IOV_CRLF2
,

95 
	mREQ_IOV_LEN


96 } 
	tªq_iov_t
;

98 
	#UINT32_MAX_LEN
 10

	)

100 
	#CALL_PREFIX_LEN
 16

	)

101 
	#CALL_ID_LEN
 8

	)

102 
	#CALL_KEYNAME_LEN
 (
CALL_PREFIX_LEN
 + 
CALL_ID_LEN
)

	)

103 
	#CALL_EXPIRY_LEN
 
UINT32_MAX_LEN


	)

104 
	#CALL_KEYLEN_LEN
 
UINT32_MAX_LEN


	)

111 
	sˇŒ
 {

112 
STAILQ_ENTRY
(
ˇŒ
Ë
	mˇŒ_tqe
;

113 
uöt64_t
 
	mid
;

114 
c⁄n
 *
	mc⁄n
;

117 
	mkey«me
[
CALL_KEYNAME_LEN
];

118 
	mexpúy
[
CALL_EXPIRY_LEN
];

119 
	mkeyÀn
[
CALL_KEYLEN_LEN
];

120 
size_t
 
	m£nd
;

121 
size_t
 
	m£¡
;

122 
	missue_°¨t
;

123 
	m£nd_°¨t
;

124 
	m£nd_°›
;

125 
iovec
 
	miov
[
REQ_IOV_LEN
];

126 
	mn‹ïly
:1;

127 
	m£ndög
:1;

128 } 
	mªq
;

131 
	mªcv_°¨t
;

132 
size_t
 
	mrcvd
;

133 *
	mrcuº
;

134 
size_t
 
	mrsize
;

135 *
	mpcuº
;

136 *
	m°¨t
;

137 *
	míd
;

138 
r•_ty≥_t
 
	mty≥
;

139 
uöt32_t
 
	mvÀn
;

140 
	m∑r£d_löe
:1;

141 
	m∑r£d_vÀn
:1;

142 } 
	mr•
;

145 
STAILQ_HEAD
(
ˇŒ_tqh
, 
ˇŒ
);

147 
ˇŒ
 *
ˇŒ_gë
(
c⁄n
 *conn);

148 
ˇŒ_put
(
ˇŒ
 *call);

150 
ssize_t
 
ˇŒ_£ndv
(
ˇŒ
 *ˇŒ, 
iovec
 *
iov
, 
iov˙t
);

151 
ˇŒ_make_ªq
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *call);

153 
r°©us_t
 
ˇŒ_£nd
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *call);

154 
r°©us_t
 
ˇŒ_ªcv
(
c⁄ãxt
 *
˘x
, 
ˇŒ
 *call);

156 
ˇŒ_öô
();

157 
ˇŒ_deöô
();

	@mcp_conn.c

19 
	~<sys/uio.h
>

21 
	~<m˝_c‹e.h
>

23 
	gn‰ì_c⁄nq
;

24 
c⁄n_tqh
 
	g‰ì_c⁄nq
;

25 
uöt64_t
 
	gid
;

27 
c⁄n
 *

28 
	$c⁄n_gë
(
c⁄ãxt
 *
˘x
)

30 
c⁄n
 *conn;

32 i‡(!
	`STAILQ_EMPTY
(&
‰ì_c⁄nq
)) {

33 
	`ASSERT
(
n‰ì_c⁄nq
 > 0);

35 
c⁄n
 = 
	`STAILQ_FIRST
(&
‰ì_c⁄nq
);

36 
n‰ì_c⁄nq
--;

38 
	`STAILQ_REMOVE_HEAD
(&
‰ì_c⁄nq
, 
c⁄n_tqe
);

40 
c⁄n
 = 
	`m˝_Æloc
((*conn));

41 i‡(
c⁄n
 =
NULL
) {

42  
NULL
;

46 
	`STAILQ_NEXT
(
c⁄n
, 
c⁄n_tqe
Ë
NULL
;

47 
c⁄n
->
id
 = ++id;

48 
c⁄n
->
˘x
 = ctx;

50 
c⁄n
->
nˇŒ_£ndq
 = 0;

51 
	`STAILQ_INIT
(&
c⁄n
->
ˇŒ_£ndq
);

52 
c⁄n
->
nˇŒ_ªcvq
 = 0;

53 
	`STAILQ_INIT
(&
c⁄n
->
ˇŒ_ªcvq
);

55 
c⁄n
->
w©chdog
 = 
NULL
;

56 
c⁄n
->
c⁄√˘_°¨t
 = 0.0;

58 
c⁄n
->
sd
 = -1;

61 
c⁄n
->
nˇŒ_¸óãd
 = 0;

62 
c⁄n
->
nˇŒ_¸óã_Áûed
 = 0;

63 
c⁄n
->
nˇŒ_com∂ëed
 = 0;

65 
c⁄n
->
îr
 = 0;

66 
c⁄n
->
ªcv_a˘ive
 = 0;

67 
c⁄n
->
ªcv_ªady
 = 0;

68 
c⁄n
->
£nd_a˘ive
 = 0;

69 
c⁄n
->
£nd_ªady
 = 0;

71 
c⁄n
->
c⁄√˘ög
 = 0;

72 
c⁄n
->
c⁄√˘ed
 = 0;

73 
c⁄n
->
eof
 = 0;

75 
	`log_debug
(
LOG_VVERB
, "gë c⁄¿%∞id %"
PRIu64
"", 
c⁄n
, c⁄n->
id
);

77  
c⁄n
;

78 
	}
}

81 
	$c⁄n_put
(
c⁄n
 *conn)

83 
	`log_debug
(
LOG_VVERB
, "puàc⁄¿%∞id %"
PRIu64
"", 
c⁄n
, c⁄n->
id
);

85 
n‰ì_c⁄nq
++;

86 
	`STAILQ_INSERT_TAIL
(&
‰ì_c⁄nq
, 
c⁄n
, 
c⁄n_tqe
);

87 
	}
}

90 
	$c⁄n_‰ì
(
c⁄n
 *conn)

92 
	`log_debug
(
LOG_VVERB
, "‰ì c⁄¿%∞id %"
PRIu64
"", 
c⁄n
, c⁄n->
id
);

93 
	`m˝_‰ì
(
c⁄n
);

94 
	}
}

96 
ssize_t


97 
	$c⁄n_£ndv
(
c⁄n
 *c⁄n, 
iovec
 *
iov
, 
iov˙t
, 
size_t
 
iov_size
)

99 
ssize_t
 
n
;

101 
	`ASSERT
(
iov_size
 != 0);

102 
	`ASSERT
(
c⁄n
->
£nd_ªady
);

105 
n
 = 
	`wrôev
(
c⁄n
->
sd
, 
iov
, 
iov˙t
);

107 
	`log_debug
(
LOG_VERB
, "£ndv o¿¯%"
PRIu64
" sd %d %zd of %zu in "

108 "%"
PRIu32
" buf„rs", 
c⁄n
->
id
, c⁄n->
sd
, 
n
, 
iov_size
,

109 
iov˙t
);

111 i‡(
n
 > 0) {

112 i‡(
n
 < (
ssize_t
Ë
iov_size
) {

113 
c⁄n
->
£nd_ªady
 = 0;

115  
n
;

118 i‡(
n
 == 0) {

119 
	`log_w¨n
("£ndv o¿¯%"
PRIu64
" sd %dÑëu∫ed zîo", 
c⁄n
->
id
,

120 
c⁄n
->
sd
);

121 
c⁄n
->
£nd_ªady
 = 0;

125 i‡(
î∫o
 =
EINTR
) {

126 
	`log_debug
(
LOG_VERB
, "£ndv o¿¯%"
PRIu64
" sd %dÇotÑeady -Éintr",

127 
c⁄n
->
id
, c⁄n->
sd
);

129 } i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EWOULDBLOCK
) {

130 
c⁄n
->
£nd_ªady
 = 0;

131 
	`log_debug
(
LOG_VERB
, "£ndv o¿¯%"
PRIu64
" sd %dÇotÑeady - "

132 "ógaö", 
c⁄n
->
id
, c⁄n->
sd
);

133  
MCP_EAGAIN
;

135 
c⁄n
->
£nd_ªady
 = 0;

136 
c⁄n
->
îr
 = 
î∫o
;

137 
	`log_debug
(
LOG_ERR
, "£ndv o¿¯%"
PRIu64
" sd %d failed: %s",

138 
c⁄n
->
id
, c⁄n->
sd
, 
	`°ªº‹
(
î∫o
));

139  
MCP_EAGAIN
;

143 
	`NOT_REACHED
();

144 
	}
}

146 
ssize_t


147 
	$c⁄n_ªcv
(
c⁄n
 *c⁄n, *
buf
, 
size_t
 
size
)

149 
ssize_t
 
n
;

151 
	`ASSERT
(
buf
 !
NULL
);

152 
	`ASSERT
(
size
 > 0);

153 
	`ASSERT
(
c⁄n
->
ªcv_ªady
);

156 
n
 = 
	`ªad
(
c⁄n
->
sd
, 
buf
, 
size
);

158 
	`log_debug
(
LOG_VERB
, "ªcv o¿sd %d %zd o‡%zu", 
c⁄n
->
sd
, 
n
, 
size
);

160 i‡(
n
 > 0) {

161 i‡(
n
 < (
ssize_t
Ë
size
) {

162 
c⁄n
->
ªcv_ªady
 = 0;

164  
n
;

167 i‡(
n
 == 0) {

168 
c⁄n
->
ªcv_ªady
 = 0;

169 
c⁄n
->
eof
 = 1;

170 
	`log_debug
(
LOG_INFO
, "ªcv o¿sd %dÉof", 
c⁄n
->
sd
);

171  
n
;

174 i‡(
î∫o
 =
EINTR
) {

175 
	`log_debug
(
LOG_VERB
, "ªcv o¿sd %dÇŸÑódy -Éöå", 
c⁄n
->
sd
);

177 } i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EWOULDBLOCK
) {

178 
c⁄n
->
ªcv_ªady
 = 0;

179 
	`log_debug
(
LOG_VERB
, "ªcv o¿sd %dÇŸÑódy -Éagaö", 
c⁄n
->
sd
);

180  
MCP_EAGAIN
;

182 
c⁄n
->
ªcv_ªady
 = 0;

183 
c⁄n
->
îr
 = 
î∫o
;

184 
	`log_îr‹
("ªcv o¿sd %d faûed: %s", 
c⁄n
->
sd
, 
	`°ªº‹
(
î∫o
));

185  
MCP_ERROR
;

189 
	`NOT_REACHED
();

190 
	}
}

193 
	$c⁄n_öô
()

195 
n‰ì_c⁄nq
 = 0;

196 
	`STAILQ_INIT
(&
‰ì_c⁄nq
);

197 
	}
}

200 
	$c⁄n_deöô
()

202 
c⁄n
 *c⁄n, *
nc⁄n
;

204 
c⁄n
 = 
	`STAILQ_FIRST
(&
‰ì_c⁄nq
); c⁄¿!
NULL
;

205 
c⁄n
 = 
nc⁄n
, 
n‰ì_c⁄nq
--) {

206 
	`ASSERT
(
n‰ì_c⁄nq
 > 0);

207 
nc⁄n
 = 
	`STAILQ_NEXT
(
c⁄n
, 
c⁄n_tqe
);

208 
	`c⁄n_‰ì
(
c⁄n
);

210 
	`ASSERT
(
n‰ì_c⁄nq
 == 0);

211 
	}
}

	@mcp_conn.h

19 #i‚de‡
_MCP_CONN_H_


20 
	#_MCP_CONN_H_


	)

22 
	~<m˝_gíî©‹.h
>

24 
	sc⁄n
 {

25 
STAILQ_ENTRY
(
c⁄n
Ë
	mc⁄n_tqe
;

26 
uöt64_t
 
	mid
;

27 
c⁄ãxt
 *
	m˘x
;

29 
uöt32_t
 
	mnˇŒ_£ndq
;

30 
ˇŒ_tqh
 
	mˇŒ_£ndq
;

31 
uöt32_t
 
	mnˇŒ_ªcvq
;

32 
ˇŒ_tqh
 
	mˇŒ_ªcvq
;

34 
timî
 *
	mw©chdog
;

35 
	mc⁄√˘_°¨t
;

37 
	msd
;

39 
	mbuf
[8 * 
KB
];

41 
gí
 
	mˇŒ_gí
;

42 
uöt32_t
 
	mnˇŒ_¸óãd
;

43 
uöt32_t
 
	mnˇŒ_¸óã_Áûed
;

44 
uöt32_t
 
	mnˇŒ_com∂ëed
;

46 
îr_t
 
	mîr
;

47 
	mªcv_a˘ive
:1;

48 
	mªcv_ªady
:1;

49 
	m£nd_a˘ive
:1;

50 
	m£nd_ªady
:1;

52 
	mc⁄√˘ög
:1;

53 
	mc⁄√˘ed
:1;

54 
	meof
:1;

57 
STAILQ_HEAD
(
c⁄n_tqh
, 
c⁄n
);

59 
c⁄n
 *
c⁄n_gë
(
c⁄ãxt
 *
˘x
);

60 
c⁄n_put
(
c⁄n
 *conn);

62 
ssize_t
 
c⁄n_£ndv
(
c⁄n
 *c⁄n, 
iovec
 *
iov
, 
iov˙t
, 
size_t
 
iov_size
);

63 
ssize_t
 
c⁄n_ªcv
(
c⁄n
 *c⁄n, *
buf
, 
size_t
 
size
);

65 
c⁄n_öô
();

66 
c⁄n_deöô
();

	@mcp_core.c

19 
	~<sys/ïﬁl.h
>

21 
	~<m˝_c‹e.h
>

23 
lﬂd_gíî©‹
 
size_gíî©‹
, 
c⁄n_gíî©‹
, 
ˇŒ_gíî©‹
;

24 
°©s_cﬁÀ˘‹
 
c⁄n_°©s
, 
ˇŒ_°©s
;

26 
lﬂd_gíî©‹
 *
	ggí
[] = {

27 &
size_gíî©‹
,

28 &
c⁄n_gíî©‹
,

29 &
ˇŒ_gíî©‹


32 
°©s_cﬁÀ˘‹
 *
	gcﬁ
[] = {

33 &
c⁄n_°©s
,

34 &
ˇŒ_°©s


37 
r°©us_t


38 
	$c‹e_öô
(
c⁄ãxt
 *
˘x
)

40 
r°©us_t
 
°©us
;

41 
›t
 *›à&
˘x
->opt;

42 
uöt32_t
 
i
;

45 
˘x
->
timeout
 = 
TIMER_INTERVAL
 * 1e3;

46 
˘x
->
√vít
 = ()
›t
->
num_c⁄ns
;

47 
°©us
 = 
	`evít_öô
(
˘x
, 
EVENT_SIZE_HINT
);

48 i‡(
°©us
 !
MCP_OK
) {

49  
°©us
;

53 
	`c⁄n_öô
();

56 
	`ˇŒ_öô
();

59 
i
 = 0; i < 
	`NELEM
(
cﬁ
); i++) {

60 
cﬁ
[
i
]->
	`öô
(
˘x
, 
NULL
);

64 
i
 = 0; i < 
	`NELEM
(
gí
); i++) {

65 
gí
[
i
]->
	`öô
(
˘x
, 
NULL
);

68  
MCP_OK
;

69 
	}
}

72 
	$c‹e_deöô
(
c⁄ãxt
 *
˘x
)

74 
	}
}

77 
	$c‹e_°¨t
(
c⁄ãxt
 *
˘x
)

79 
uöt32_t
 
i
;

82 
	`°©s_°¨t
(
˘x
);

85 
i
 = 0; i < 
	`NELEM
(
cﬁ
); i++) {

86 
cﬁ
[
i
]->
	`°¨t
(
˘x
, 
NULL
);

93 
	`ecb_sig«l
(
˘x
, 
EVENT_GEN_SIZE_TRIGGER
, 
NULL
);

96 
	`ecb_sig«l
(
˘x
, 
EVENT_GEN_CONN_TRIGGER
, 
NULL
);

97 
	}
}

100 
	$c‹e_°›
(
c⁄ãxt
 *
˘x
)

102 
	`m˝_‰ì
(
˘x
->
evít
);

103 
	`˛o£
(
˘x
->
ï
);

105 
	`°©s_dump
(
˘x
);

106 
	}
}

109 
	$c‹e_timeout
(
timî
 *
t
, *
¨g
)

111 
c⁄n
 *c⁄¿
¨g
;

112 
c⁄ãxt
 *
˘x
 = 
c⁄n
->ctx;

114 
	`log_debug
(
LOG_INFO
, "¯%"
PRIu64
" o¿sd %dÅimedout", 
c⁄n
->
id
, c⁄n->
sd
);

117 
	`ASSERT
(
c⁄n
->
w©chdog
 =
t
);

118 
c⁄n
->
w©chdog
 = 
NULL
;

120 
c⁄n
->
c⁄√˘ög
 = 0;

122 
	`ecb_sig«l
(
˘x
, 
EVENT_CONN_TIMEOUT
, 
c⁄n
);

123 
	`ecb_sig«l
(
˘x
, 
EVENT_CONN_DESTROYED
, 
c⁄n
);

124 
	}
}

126 
r°©us_t


127 
	$c‹e_c⁄√˘ög
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

129 
›t
 *›à&
˘x
->opt;

131 
	`ASSERT
(!
c⁄n
->
c⁄√˘ög
);

132 
	`ASSERT
(
c⁄n
->
w©chdog
 =
NULL
);

134 i‡(
›t
->
timeout
 > 0.0) {

135 
c⁄n
->
w©chdog
 = 
	`timî_scheduÀ
(
c‹e_timeout
, c⁄n, 
›t
->
timeout
);

136 i‡(
c⁄n
->
w©chdog
 =
NULL
) {

137  
MCP_ENOMEM
;

141 
c⁄n
->
c⁄√˘ög
 = 1;

143 
	`log_debug
(
LOG_VERB
, "c⁄√˘ög o¿¯%"
PRIu64
" sd %d", 
c⁄n
->
id
, c⁄n->
sd
);

145  
MCP_OK
;

146 
	}
}

149 
	$c‹e_c⁄√˘ed
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

151 
›t
 *›à&
˘x
->opt;

153 
	`ASSERT
(
c⁄n
->
c⁄√˘ög
);

154 
	`ASSERT
(!
c⁄n
->
c⁄√˘ed
);

156 
	`log_debug
(
LOG_DEBUG
, "c⁄√˘ed o¿¯%"
PRIu64
" sd %d", 
c⁄n
->
id
, c⁄n->
sd
);

158 
c⁄n
->
c⁄√˘ög
 = 0;

159 
c⁄n
->
c⁄√˘ed
 = 1;

161 i‡(
›t
->
timeout
 > 0.0) {

162 
	`ASSERT
(
c⁄n
->
w©chdog
 !
NULL
);

163 
	`timî_ˇn˚l
(
c⁄n
->
w©chdog
);

166 
	`ecb_sig«l
(
˘x
, 
EVENT_CONN_CONNECTED
, 
c⁄n
);

172 
	`ecb_sig«l
(
˘x
, 
EVENT_GEN_CALL_TRIGGER
, 
c⁄n
);

173 
	}
}

175 
r°©us_t


176 
	$c‹e_c⁄√˘
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

178 
r°©us_t
 
°©us
;

179 
›t
 *›à&
˘x
->opt;

180 
socköfo
 *
si
 = &
›t
->si;

182 
	`ASSERT
(
c⁄n
->
sd
 < 0);

184 
c⁄n
->
sd
 = 
	`sockë
(
si
->
Ámûy
, 
SOCK_STREAM
, 0);

185 i‡(
c⁄n
->
sd
 < 0) {

186 
	`log_debug
(
LOG_ERR
, "sockë cª©êf‹ c %"
PRIu64
" failed: %s",

187 
c⁄n
->
id
, 
	`°ªº‹
(
î∫o
));

188 
°©us
 = 
MCP_ERROR
;

189 
îr‹
;

192 
°©us
 = 
	`m˝_£t_n⁄blockög
(
c⁄n
->
sd
);

193 i‡(
°©us
 !
MCP_OK
) {

194 
	`log_debug
(
LOG_ERR
, "£àn⁄block o¿¯%"
PRIu64
" sd %d failed: %s",

195 
c⁄n
->
id
, c⁄n->
sd
, 
	`°ªº‹
(
î∫o
));

196 
îr‹
;

199 i‡(!
›t
->
dißbÀ_nodñay
) {

200 
°©us
 = 
	`m˝_£t_t˝nodñay
(
c⁄n
->
sd
);

201 i‡(
°©us
 !
MCP_OK
) {

202 
	`log_debug
(
LOG_ERR
, "£àt˝nodñay o¿¯%"
PRIu64
" sd %d failed: %s",

203 
c⁄n
->
id
, c⁄n->
sd
, 
	`°ªº‹
(
î∫o
));

204 
îr‹
;

208 i‡(
›t
->
lögî
) {

209 
°©us
 = 
	`m˝_£t_lögî
(
c⁄n
->
sd
, 
›t
->
lögî_timeout
);

210 i‡(
°©us
 !
MCP_OK
) {

211 
	`log_debug
(
LOG_ERR
, "£àlögî o¿¯%"
PRIu64
" sd %d failed: %s",

212 
c⁄n
->
id
, c⁄n->
sd
, 
	`°ªº‹
(
î∫o
));

213 
îr‹
;

217 
°©us
 = 
	`m˝_£t_¢dbuf
(
c⁄n
->
sd
, 
›t
->
£nd_buf_size
);

218 i‡(
°©us
 !
MCP_OK
) {

219 
	`log_debug
(
LOG_ERR
, "£à¢dbu‡⁄ c %"
PRIu64
" sd %dÅo %d failed: %s",

220 
c⁄n
->
id
, c⁄n->
sd
, 
›t
->
£nd_buf_size
);

221 
îr‹
;

224 
°©us
 = 
	`m˝_£t_rcvbuf
(
c⁄n
->
sd
, 
›t
->
ªcv_buf_size
);

225 i‡(
°©us
 !
MCP_OK
) {

226 
	`log_debug
(
LOG_ERR
, "£àrcvbu‡⁄ c %"
PRIu64
" sd %dÅo %d failed: %s",

227 
c⁄n
->
id
, c⁄n->
sd
, 
›t
->
ªcv_buf_size
);

228 
îr‹
;

231 
°©us
 = 
	`evít_add_c⁄n
(
˘x
->
ï
, 
c⁄n
);

232 i‡(
°©us
 !
MCP_OK
) {

233 
	`log_debug
(
LOG_ERR
, "evíàadd c⁄¿ê%d sd %d faûed: %s", 
˘x
->
ï
,

234 
c⁄n
->
sd
, 
	`°ªº‹
(
î∫o
));

235 
îr‹
;

238 
	`ecb_sig«l
(
˘x
, 
EVENT_CONN_CONNECTING
, 
c⁄n
);

240 
°©us
 = 
	`c⁄√˘
(
c⁄n
->
sd
, (
sockaddr
 *)&
si
->
addr
, si->
addæí
);

241 i‡(
°©us
 !
MCP_OK
) {

242 i‡(
î∫o
 =
EINPROGRESS
) {

243 
°©us
 = 
	`c‹e_c⁄√˘ög
(
˘x
, 
c⁄n
);

244 i‡(
°©us
 =
MCP_OK
) {

245  
MCP_OK
;

248 
	`log_debug
(
LOG_ERR
, "c⁄√˘ o¿¯%"
PRIu64
" sd %d faûed: %s", 
c⁄n
->
id
,

249 
c⁄n
->
sd
, 
	`°ªº‹
(
î∫o
));

250 
îr‹
;

253 
	`ASSERT
(!
c⁄n
->
c⁄√˘ög
);

254 
	`ASSERT
(!
c⁄n
->
c⁄√˘ed
);

255 
	`ASSERT
(
c⁄n
->
w©chdog
 =
NULL
);

257 
c⁄n
->
c⁄√˘ed
 = 1;

259 
	`log_debug
(
LOG_INFO
, "c⁄√˘ed o¿¯%"
PRIu64
" sd %d", 
c⁄n
->
id
, c⁄n->
sd
);

261 
	`ecb_sig«l
(
˘x
, 
EVENT_CONN_CONNECTED
, 
c⁄n
);

267 
	`ecb_sig«l
(
˘x
, 
EVENT_GEN_CALL_TRIGGER
, 
c⁄n
);

269  
MCP_OK
;

271 
îr‹
:

272 
c⁄n
->
îr
 = 
î∫o
;

273  
°©us
;

274 
	}
}

277 
	$c‹e_£nd
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

279 
r°©us_t
 
°©us
;

280 
ˇŒ
 *call;

282 i‡(
c⁄n
->
c⁄√˘ög
) {

283 
	`c‹e_c⁄√˘ed
(
˘x
, 
c⁄n
);

286 
c⁄n
->
£nd_ªady
 = 1;

288 
ˇŒ
 = 
	`STAILQ_FIRST
(&
c⁄n
->
ˇŒ_£ndq
);

289 i‡(
ˇŒ
 =
NULL
) {

293 
°©us
 = 
	`ˇŒ_£nd
(
˘x
, 
ˇŒ
);

294 i‡(
°©us
 !
MCP_OK
) {

298 } 
c⁄n
->
£nd_ªady
);

299 
	}
}

302 
	$c‹e_ªcv
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

304 
r°©us_t
 
°©us
;

305 
ˇŒ
 *call;

307 
	`ASSERT
(!
c⁄n
->
c⁄√˘ög
);

309 
c⁄n
->
ªcv_ªady
 = 1;

311 
ˇŒ
 = 
	`STAILQ_FIRST
(&
c⁄n
->
ˇŒ_ªcvq
);

312 i‡(
ˇŒ
 =
NULL
) {

316 
°©us
 = 
	`ˇŒ_ªcv
(
˘x
, 
ˇŒ
);

317 i‡(
°©us
 !
MCP_OK
) {

320 } 
c⁄n
->
ªcv_ªady
);

321 
	}
}

324 
	$c‹e_˛o£
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

326 
r°©us_t
 
°©us
;

327 
ˇŒ
 *ˇŒ, *
nˇŒ
;

329 i‡(
c⁄n
->
sd
 < 0) {

333 
ˇŒ
 = 
	`STAILQ_FIRST
(&
c⁄n
->
ˇŒ_ªcvq
); cÆ»!
NULL
; cÆ»
nˇŒ
) {

334 
nˇŒ
 = 
	`STAILQ_NEXT
(
ˇŒ
, 
ˇŒ_tqe
);

336 
	`ASSERT
(
c⁄n
->
nˇŒ_ªcvq
 != 0);

338 
c⁄n
->
nˇŒ_ªcvq
--;

339 
	`STAILQ_REMOVE
(&
c⁄n
->
ˇŒ_ªcvq
, 
ˇŒ
, cÆl, 
ˇŒ_tqe
);

340 
	`ˇŒ_put
(
ˇŒ
);

342 
	`ASSERT
(
c⁄n
->
nˇŒ_ªcvq
 == 0);

344 
ˇŒ
 = 
	`STAILQ_FIRST
(&
c⁄n
->
ˇŒ_£ndq
); cÆ»!
NULL
; cÆ»
nˇŒ
) {

345 
nˇŒ
 = 
	`STAILQ_NEXT
(
ˇŒ
, 
ˇŒ_tqe
);

347 
	`ASSERT
(
c⁄n
->
nˇŒ_£ndq
 != 0);

349 
c⁄n
->
nˇŒ_£ndq
--;

350 
	`STAILQ_REMOVE
(&
c⁄n
->
ˇŒ_£ndq
, 
ˇŒ
, cÆl, 
ˇŒ_tqe
);

351 
	`ˇŒ_put
(
ˇŒ
);

353 
	`ASSERT
(
c⁄n
->
nˇŒ_£ndq
 == 0);

355 
°©us
 = 
	`˛o£
(
c⁄n
->
sd
);

356 i‡(
°©us
 !
MCP_OK
) {

357 
	`log_debug
(
LOG_ERR
, "˛o£ c %"
PRIu64
" sd %d faûed: %s", 
c⁄n
->
id
,

358 
c⁄n
->
sd
, 
	`°ªº‹
(
î∫o
));

360 
c⁄n
->
sd
 = -1;

362 
	`c⁄n_put
(
c⁄n
);

363 
	}
}

366 
	$c‹e_îr‹
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn)

368 
r°©us_t
 
°©us
;

370 i‡(
c⁄n
->
îr
 == 0) {

371 
°©us
 = 
	`m˝_gë_s€º‹
(
c⁄n
->
sd
);

372 i‡(
°©us
 < 0) {

373 
	`log_debug
(
LOG_ERR
, "gë s€º o¿¯%"
PRIu64
" sd %d failed: %s",

374 
c⁄n
->
id
, c⁄n->
sd
, 
	`°ªº‹
(
î∫o
));

376 
c⁄n
->
îr
 = 
î∫o
;

379 
	`log_debug
(
LOG_ERR
, "îr‹ o¿¯%"
PRIu64
" sd %d: %s", 
c⁄n
->
id
, c⁄n->
sd
,

380 
	`°ªº‹
(
c⁄n
->
îr
));

382 
	`ecb_sig«l
(
˘x
, 
EVENT_CONN_FAILED
, 
c⁄n
);

383 
	`ecb_sig«l
(
˘x
, 
EVENT_CONN_DESTROYED
, 
c⁄n
);

384 
	}
}

387 
	$c‹e_c‹e
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *c⁄n, 
uöt32_t
 
evíts
)

389 i‡(
evíts
 & 
EPOLLERR
) {

390 
	`c‹e_îr‹
(
˘x
, 
c⁄n
);

395 i‡(
evíts
 & (
EPOLLIN
 | 
EPOLLHUP
)) {

396 
	`c‹e_ªcv
(
˘x
, 
c⁄n
);

397 i‡(
c⁄n
->
eof
 || c⁄n->
îr
 != 0) {

398 
	`c‹e_îr‹
(
˘x
, 
c⁄n
);

403 i‡(
evíts
 & 
EPOLLOUT
) {

404 
	`c‹e_£nd
(
˘x
, 
c⁄n
);

405 i‡(
c⁄n
->
îr
 != 0) {

406 
	`c‹e_îr‹
(
˘x
, 
c⁄n
);

410 
	}
}

412 
r°©us_t


413 
	$c‹e_lo›
(
c⁄ãxt
 *
˘x
)

415 
i
, 
nsd
;

417 
	`timî_tick
();

419 
nsd
 = 
	`evít_waô
(
˘x
->
ï
, ctx->
evít
, ctx->
√vít
, ctx->
timeout
);

420 i‡(
nsd
 < 0) {

421  
nsd
;

424 
i
 = 0; i < 
nsd
; i++) {

425 
ïﬁl_evít
 *
ev
 = &
˘x
->
evít
[
i
];

427 
	`c‹e_c‹e
(
˘x
, 
ev
->
d©a
.
±r
,Év->
evíts
);

429 
	`timî_tick
();

432  
MCP_OK
;

433 
	}
}

	@mcp_core.h

19 #i‚de‡
_MCP_CORE_H_


20 
	#_MCP_CORE_H_


	)

22 #ifde‡
HAVE_CONFIG_H


23 
	~<c⁄fig.h
>

26 #ifde‡
HAVE_DEBUG_LOG


27 
	#MCP_DEBUG_LOG
 1

	)

30 #ifde‡
HAVE_ASSERT_PANIC


31 
	#MCP_ASSERT_PANIC
 1

	)

34 
	#MCP_OK
 0

	)

35 
	#MCP_ERROR
 -1

	)

36 
	#MCP_EAGAIN
 -2

	)

37 
	#MCP_ENOMEM
 -3

	)

39 
	tr°©us_t
;

40 
	tîr_t
;

42 
	gc⁄ãxt
;

43 
	gc⁄n
;

44 
	gˇŒ
;

45 
	gïﬁl_evít
;

46 
	g°rög
;

48 
	eevít_ty≥
 {

49 
	mEVENT_INVALID
 = 0,

51 
	mEVENT_CONN_CREATED
 = 1,

52 
	mEVENT_CONN_CONNECTING
 = 2,

53 
	mEVENT_CONN_CONNECTED
 = 3,

54 
	mEVENT_CONN_CLOSE
 = 4,

55 
	mEVENT_CONN_TIMEOUT
 = 5,

56 
	mEVENT_CONN_FAILED
 = 6,

57 
	mEVENT_CONN_DESTROYED
 = 7,

59 
	mEVENT_CALL_CREATED
 = 8,

60 
	mEVENT_CALL_ISSUE_START
 = 9,

61 
	mEVENT_CALL_SEND_START
 = 10,

62 
	mEVENT_CALL_SEND_STOP
 = 11,

63 
	mEVENT_CALL_RECV_START
 = 12,

64 
	mEVENT_CALL_RECV_STOP
 = 13,

65 
	mEVENT_CALL_DESTROYED
 = 14,

67 
	mEVENT_GEN_CONN_TRIGGER
 = 15,

68 
	mEVENT_GEN_CONN_FIRE
 = 16,

69 
	mEVENT_GEN_CALL_TRIGGER
 = 17,

70 
	mEVENT_GEN_CALL_FIRE
 = 18,

71 
	mEVENT_GEN_SIZE_TRIGGER
 = 19,

72 
	mEVENT_GEN_SIZE_FIRE
 = 20,

74 
	mMAX_EVENT_TYPES
 = 21

75 } 
	tevít_ty≥_t
;

77 
	~<°ddef.h
>

78 
	~<°döt.h
>

79 
	~<°dboﬁ.h
>

80 
	~<öây≥s.h
>

81 
	~<°rög.h
>

82 
	~<î∫o.h
>

83 
	~<uni°d.h
>

85 
	~<m˝_queue.h
>

86 
	~<m˝_log.h
>

87 
	~<m˝_utû.h
>

88 
	~<m˝_evít.h
>

89 
	~<m˝_ecb.h
>

90 
	~<m˝_di°ributi⁄.h
>

91 
	~<m˝_ˇŒ.h
>

92 
	~<m˝_c⁄n.h
>

93 
	~<m˝_timî.h
>

94 
	~<m˝_°©s.h
>

95 
	~<m˝_gíî©‹.h
>

97 
	s°rög
 {

98 *
	md©a
;

99 
size_t
 
	mÀn
;

102 
	s›t
 {

103 
	mlog_Àvñ
;

104 *
	mlog_fûíame
;

106 *
	m£rvî
;

107 
uöt16_t
 
	mp‹t
;

108 
socköfo
 
	msi
;

110 
	mtimeout
;

111 
	mlögî_timeout
;

113 
	m£nd_buf_size
;

114 
	mªcv_buf_size
;

116 
°rög
 
	m¥efix
;

117 
ªq_ty≥_t
 
	mmëhod
;

118 
uöt32_t
 
	mexpúy
;

121 
uöt32_t
 
	mid
;

122 
uöt32_t
 
	mn
;

123 } 
	m˛õ¡
;

125 
uöt32_t
 
	mnum_c⁄ns
;

126 
uöt32_t
 
	mnum_ˇŒs
;

128 
di°_›t
 
	mc⁄n_d›t
;

129 
di°_›t
 
	mˇŒ_d›t
;

130 
di°_›t
 
	msize_d›t
;

132 
	m¥öt_hi°ogøm
:1;

133 
	mdißbÀ_nodñay
:1;

134 
	m¥öt_rußge
:1;

135 
	mlögî
:1;

136 
	mu£_n‹ïly
:1;

139 
	sc⁄ãxt
 {

140 
›t
 
	m›t
;

142 
	mï
;

143 
ïﬁl_evít
 *
	mevít
;

144 
	m√vít
;

145 
	mtimeout
;

147 
uöt32_t
 
	mnc⁄n_¸óãd
;

148 
uöt32_t
 
	mnc⁄n_¸óã_Áûed
;

149 
uöt32_t
 
	mnc⁄n_de°royed
;

151 
di°_öfo
 
	mc⁄n_di°
;

152 
di°_öfo
 
	mˇŒ_di°
;

153 
di°_öfo
 
	msize_di°
;

155 
gí
 
	mc⁄n_gí
;

156 
gí
 
	msize_gí
;

158 
a˘i⁄
 
	ma˘i⁄
[
MAX_EVENT_TYPES
];

160 
°©s
 
	m°©s
;

162 
	mbuf1m
[
MB
];

165 (*
	töô_t
)(
	tc⁄ãxt
 *, *);

166 (*
	tdeöô_t
)(
	tc⁄ãxt
 *, *);

167 (*
	tdump_t
)(
	tc⁄ãxt
 *, *);

168 (*
	t°¨t_t
)(
	tc⁄ãxt
 *, *);

169 (*
	t°›_t
)(
	tc⁄ãxt
 *, *);

171 
	slﬂd_gíî©‹
 {

172 *
«me
;

173 
öô_t
 
öô
;

174 
deöô_t
 
deöô
;

175 
°¨t_t
 
°¨t
;

176 
°›_t
 
°›
;

179 
	s°©s_cﬁÀ˘‹
 {

180 *
«me
;

181 
öô_t
 
öô
;

182 
°¨t_t
 
°¨t
;

183 
°›_t
 
°›
;

184 
dump_t
 
dump
;

187 
r°©us_t
 
	`c‹e_öô
(
c⁄ãxt
 *
˘x
);

188 
	`c‹e_deöô
(
c⁄ãxt
 *
˘x
);

190 
	`c‹e_°¨t
(
c⁄ãxt
 *
˘x
);

191 
	`c‹e_°›
(
c⁄ãxt
 *
˘x
);

192 
r°©us_t
 
	`c‹e_lo›
(
c⁄ãxt
 *
˘x
);

194 
r°©us_t
 
	`c‹e_c⁄√˘
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn);

195 
	`c‹e_£nd
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn);

196 
	`c‹e_ªcv
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn);

197 
	`c‹e_˛o£
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn);

198 
	`c‹e_îr‹
(
c⁄ãxt
 *
˘x
, 
c⁄n
 *conn);

200 
	`c‹e_timeout
(
timî
 *
t
, *
¨g
);

	@mcp_distribution.c

19 
	~<°dlib.h
>

21 
	~<m˝_c‹e.h
>

24 
	$di°_√xt_dëîmöi°ic
(
di°_öfo
 *
di
)

26 
di
->
√xt_id
++;

27 
di
->
√xt_vÆ
 = 0.5 * (di->
mö
 + di->
max
);

28 
	}
}

31 
	$di°_√xt_unif‹m
(
di°_öfo
 *
di
)

33 
lowî
 = 
di
->
mö
, 
uµî
 = di->
max
;

35 
di
->
√xt_id
++;

36 
di
->
√xt_vÆ
 = 
lowî
 + (
uµî
 -ÜowîË* 
	`î™d48
(di->
xsubi
);

37 
	}
}

40 
	$di°_√xt_exp⁄ítül
(
di°_öfo
 *
di
)

42 
món
 = 0.5 * (
di
->
mö
 + di->
max
);

44 
di
->
√xt_id
++;

45 
di
->
√xt_vÆ
 = -
món
 * 
	`log
(1.0 - 
	`î™d48
(di->
xsubi
));

46 
	}
}

49 
	$di°_√xt_£quítül
(
di°_öfo
 *
di
)

51 
di
->
√xt_id
++;

52 
di
->
√xt_vÆ
 = di->
mö
++;

53 
	}
}

56 
	$di°_öô
(
di°_öfo
 *
di
, 
di°_ty≥_t
 
ty≥
, 
mö
, 
max
,

57 
uöt32_t
 
id
)

59 
di
->
ty≥
 =Åype;

61 
di
->
xsubi
[0] = (
uöt16_t
)(0x1234 ^ 
id
);

62 
di
->
xsubi
[1] = (
uöt16_t
)(0x5678 ^ (
id
 << 8));

63 
di
->
xsubi
[2] = (
uöt16_t
)(0x9ab¯^ ~
id
);

65 
di
->
mö
 = min;

66 
di
->
max
 = max;

68 
di
->
ty≥
) {

69 
DIST_NONE
:

70 
di
->
√xt
 = 
NULL
;

73 
DIST_DETERMINISTIC
:

74 
di
->
√xt
 = 
di°_√xt_dëîmöi°ic
;

77 
DIST_UNIFORM
:

78 
di
->
√xt
 = 
di°_√xt_unif‹m
;

81 
DIST_EXPONENTIAL
:

82 
di
->
√xt
 = 
di°_√xt_exp⁄ítül
;

85 
DIST_SEQUENTIAL
:

86 
di
->
√xt
 = 
di°_√xt_£quítül
;

90 
	`NOT_REACHED
();

92 
di
->
√xt_id
 = 0;

93 
di
->
√xt_vÆ
 = 0.0;

94 
	}
}

	@mcp_distribution.h

19 #i‚de‡
_MCP_DISTRIBUTION_H_


20 
	#_MCP_DISTRIBUTION_H_


	)

22 
	gdi°_öfo
;

24 (*
	tdi°_√xt_t
)(
	tdi°_öfo
 *);

26 
	edi°_ty≥
 {

27 
DIST_NONE
,

28 
DIST_DETERMINISTIC
,

29 
DIST_UNIFORM
,

30 
DIST_EXPONENTIAL
,

31 
DIST_SEQUENTIAL
,

32 
DIST_SENTINEL


33 } 
	tdi°_ty≥_t
;

35 
	sdi°_›t
 {

36 
di°_ty≥_t
 
ty≥
;

37 
mö
;

38 
max
;

41 
	sdi°_öfo
 {

42 
di°_ty≥_t
 
ty≥
;

44 
uöt16_t
 
xsubi
[3];

45 
mö
;

46 
max
;

48 
di°_√xt_t
 
√xt
;

49 
uöt32_t
 
√xt_id
;

50 
√xt_vÆ
;

53 
	`di°_öô
(
di°_öfo
 *
di
, 
di°_ty≥_t
 
ty≥
, 
mö
, 
max
, 
uöt32_t
 
id
);

	@mcp_ecb.c

19 
	~<m˝_c‹e.h
>

22 
	$_ecb_ªgi°î
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, 
cb_t
 
cb
, *
ørg
,

23 *
«me
, *
fûe
, 
löe
)

25 
a˘i⁄
 *
a˘
;

26 
cb
 *
c
, *
íd
;

28 
	`ASSERT
(
ty≥
 < 
MAX_EVENT_TYPES
);

30 
a˘
 = &
˘x
->
a˘i⁄
[
ty≥
];

31 
íd
 = &
a˘
->
cb
[a˘->
ncb
];

33 
c
 = &
a˘
->
cb
[0]; c < 
íd
; c++) {

35 i‡(
c
->
cb
 =cb && c->
ørg
 ==Ñarg) {

40 i‡(
a˘
->
ncb
 >
MAX_NCB
) {

41 
	`log_∑nic
("attemptedÅoÑegister moreÅhan %d callbacks forÉvent %d",

42 
MAX_NCB
, 
ty≥
);

45 
	`log_debug
(
LOG_VERB
, "ªgi°îÉvíà%dáà%d wôh cb '%s' from %s:%d", 
ty≥
,

46 
a˘
->
ncb
, 
«me
, 
fûe
, 
löe
);

48 
c
 = &
a˘
->
cb
[a˘->
ncb
++];

50 
c
->
cb
 = cb;

51 
c
->
ørg
 =Ñarg;

53 
c
->
«me
 =Çame;

54 
c
->
fûe
 = file;

55 
c
->
löe
 =Üine;

56 
	}
}

59 
	$_ecb_sig«l
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ˇrg
)

61 
a˘i⁄
 *
a˘
;

62 
cb
 *
c
, *
íd
;

64 
	`ASSERT
(
ty≥
 < 
MAX_EVENT_TYPES
);

66 
a˘
 = &
˘x
->
a˘i⁄
[
ty≥
];

67 
íd
 = &
a˘
->
cb
[a˘->
ncb
];

70 
c
 = &
a˘
->
cb
[0]; c < 
íd
; c++) {

71 
	`log_debug
(
LOG_VERB
, "signalÉvent %dát %d with cb '%s' from %s:%d",

72 
ty≥
, 
c
 - 
a˘
->
cb
, c->
«me
, c->
fûe
, c->
löe
);

73 
c
->
	`cb
(
˘x
, 
ty≥
, c->
ørg
, 
ˇrg
);

75 
	}
}

	@mcp_ecb.h

19 #i‚de‡
_MCP_ECB_H_


20 
	#_MCP_ECB_H_


	)

22 (*
	tcb_t
)(
	tc⁄ãxt
 *, 
	tevít_ty≥_t
, *, *);

24 
	scb
 {

25 
cb_t
 
cb
;

26 *
ørg
;

27 *
«me
;

28 *
fûe
;

29 
löe
;

32 
	#MAX_NCB
 4

	)

34 
	sa˘i⁄
 {

35 
ncb
;

36 
cb
 cb[
MAX_NCB
];

39 
	#ecb_ªgi°î
(
_˘x
, 
_ty≥
, 
_cb
, 
_ørg
) \

40 
	`_ecb_ªgi°î
(
_˘x
, 
_ty≥
, 
_cb
, 
_ørg
, #_cb, 
__FILE__
, 
__LINE__
)

	)

42 
	#ecb_sig«l
(
_˘x
, 
_ty≥
, 
_ˇrg
) \

43 
	`_ecb_sig«l
(
_˘x
, 
_ty≥
, 
_ˇrg
);

	)

45 
	`_ecb_ªgi°î
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, 
cb_t
 
cb
, *
ørg
, *
«me
, *
fûe
, 
löe
);

46 
	`_ecb_sig«l
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ˇrg
);

	@mcp_event.c

19 
	~<uni°d.h
>

20 
	~<sys/ïﬁl.h
>

22 
	~<m˝_c‹e.h
>

25 
	$evít_öô
(
c⁄ãxt
 *
˘x
, 
size
)

27 
°©us
, 
ï
;

28 
ïﬁl_evít
 *
evít
;

30 
	`ASSERT
(
˘x
->
√vít
 != 0);

32 
ï
 = 
	`ïﬁl_¸óã
(
size
);

33 i‡(
ï
 < 0) {

34 
	`log_îr‹
("ïﬁ»¸óã o‡sizê%d faûed: %s", 
size
, 
	`°ªº‹
(
î∫o
));

38 
evít
 = 
	`m˝_ˇŒoc
(
˘x
->
√vít
, (*ctx->event));

39 i‡(
evít
 =
NULL
) {

40 
°©us
 = 
	`˛o£
(
ï
);

41 i‡(
°©us
 < 0) {

42 
	`log_îr‹
("˛o£É %d faûed, ign‹ed: %s", 
ï
, 
	`°ªº‹
(
î∫o
));

44 
	`log_îr‹
("ïﬁ»¸óã o‡%dÉvít†Áûed: %s", 
˘x
->
√vít
,

45 
	`°ªº‹
(
î∫o
));

49 
˘x
->
ï
 =Ép;

50 
˘x
->
evít
 =Évent;

52 
	`log_debug
(
LOG_DEBUG
, "ê%d wôhÇevíà%dÅimeouà%d", 
˘x
->
ï
,

53 
˘x
->
√vít
, ctx->
timeout
);

56 
	}
}

59 
	$evít_deöô
(
c⁄ãxt
 *
˘x
)

61 
°©us
;

63 
	`ASSERT
(
˘x
->
ï
 > 0);

65 
	`m˝_‰ì
(
˘x
->
evít
);

67 
°©us
 = 
	`˛o£
(
˘x
->
ï
);

68 i‡(
°©us
 < 0) {

69 
	`log_îr‹
("˛o£É %d faûed, ign‹ed: %s", 
˘x
->
ï
, 
	`°ªº‹
(
î∫o
));

71 
˘x
->
ï
 = -1;

72 
	}
}

75 
	$evít_add_out
(
ï
, 
c⁄n
 *
c
)

77 
°©us
;

78 
ïﬁl_evít
 
evít
;

80 
	`ASSERT
(
ï
 > 0);

81 
	`ASSERT
(
c
 !
NULL
);

82 
	`ASSERT
(
c
->
sd
 > 0);

83 
	`ASSERT
(
c
->
ªcv_a˘ive
);

85 i‡(
c
->
£nd_a˘ive
) {

90 
evít
.
evíts
 = (
uöt32_t
)(
EPOLLIN
 | 
EPOLLOUT
);

91 
evít
.
d©a
.
±r
 = 
c
;

93 
°©us
 = 
	`ïﬁl_˘l
(
ï
, 
EPOLL_CTL_MOD
, 
c
->
sd
, &
evít
);

94 i‡(
°©us
 < 0) {

95 
	`log_îr‹
("ïﬁ»˘»⁄É %d sd %d faûed: %s", 
ï
, 
c
->
sd
,

96 
	`°ªº‹
(
î∫o
));

98 
c
->
£nd_a˘ive
 = 1;

101  
°©us
;

102 
	}
}

105 
	$evít_dñ_out
(
ï
, 
c⁄n
 *
c
)

107 
°©us
;

108 
ïﬁl_evít
 
evít
;

110 
	`ASSERT
(
ï
 > 0);

111 
	`ASSERT
(
c
 !
NULL
);

112 
	`ASSERT
(
c
->
sd
 > 0);

113 
	`ASSERT
(
c
->
ªcv_a˘ive
);

115 i‡(!
c
->
£nd_a˘ive
) {

120 
evít
.
evíts
 = (
uöt32_t
)(
EPOLLIN
);

121 
evít
.
d©a
.
±r
 = 
c
;

123 
°©us
 = 
	`ïﬁl_˘l
(
ï
, 
EPOLL_CTL_MOD
, 
c
->
sd
, &
evít
);

124 i‡(
°©us
 < 0) {

125 
	`log_îr‹
("ïﬁ»˘»⁄É %d sd %d faûed: %s", 
ï
, 
c
->
sd
,

126 
	`°ªº‹
(
î∫o
));

128 
c
->
£nd_a˘ive
 = 0;

131  
°©us
;

132 
	}
}

135 
	$evít_add_c⁄n
(
ï
, 
c⁄n
 *
c
)

137 
°©us
;

138 
ïﬁl_evít
 
evít
;

140 
	`ASSERT
(
ï
 > 0);

141 
	`ASSERT
(
c
 !
NULL
);

142 
	`ASSERT
(
c
->
sd
 > 0);

145 
evít
.
evíts
 = (
uöt32_t
)(
EPOLLIN
 | 
EPOLLOUT
);

146 
evít
.
d©a
.
±r
 = 
c
;

148 
°©us
 = 
	`ïﬁl_˘l
(
ï
, 
EPOLL_CTL_ADD
, 
c
->
sd
, &
evít
);

149 i‡(
°©us
 < 0) {

150 
	`log_îr‹
("ïﬁ»˘»⁄É %d sd %d faûed: %s", 
ï
, 
c
->
sd
,

151 
	`°ªº‹
(
î∫o
));

153 
c
->
£nd_a˘ive
 = 1;

154 
c
->
ªcv_a˘ive
 = 1;

157  
°©us
;

158 
	}
}

161 
	$evít_dñ_c⁄n
(
ï
, 
c⁄n
 *
c
)

163 
°©us
;

165 
	`ASSERT
(
ï
 > 0);

166 
	`ASSERT
(
c
 !
NULL
);

167 
	`ASSERT
(
c
->
sd
 > 0);

169 
°©us
 = 
	`ïﬁl_˘l
(
ï
, 
EPOLL_CTL_DEL
, 
c
->
sd
, 
NULL
);

170 i‡(
°©us
 < 0) {

171 
	`log_îr‹
("ïﬁ»˘»⁄É %d sd %d faûed: %s", 
ï
, 
c
->
sd
,

172 
	`°ªº‹
(
î∫o
));

174 
c
->
ªcv_a˘ive
 = 0;

175 
c
->
£nd_a˘ive
 = 0;

178  
°©us
;

179 
	}
}

182 
	$evít_waô
(
ï
, 
ïﬁl_evít
 *
evít
, 
√vít
, 
timeout
)

184 
nsd
;

186 
	`ASSERT
(
ï
 > 0);

187 
	`ASSERT
(
evít
 !
NULL
);

188 
	`ASSERT
(
√vít
 > 0);

191 
nsd
 = 
	`ïﬁl_waô
(
ï
, 
evít
, 
√vít
, 
timeout
);

192 i‡(
nsd
 > 0) {

193  
nsd
;

196 i‡(
nsd
 == 0) {

197 i‡(
timeout
 == -1) {

198 
	`log_îr‹
("epoll wait onÉ %d with %dÉventsánd %dÅimeout "

199 "ªtu∫edÇÿevíts", 
ï
, 
√vít
, 
timeout
);

206 i‡(
î∫o
 =
EINTR
) {

210 
	`log_îr‹
("ïﬁ»waô o¿ê%d wôh %dÉvít†Áûed: %s", 
ï
, 
√vít
,

211 
	`°ªº‹
(
î∫o
));

216 
	`NOT_REACHED
();

217 
	}
}

	@mcp_event.h

19 #i‚de‡
_MCP_EVENT_H_


20 
	#_MCP_EVENT_H_


	)

26 
	#EVENT_SIZE_HINT
 1024

	)

28 
evít_öô
(
c⁄ãxt
 *
˘x
, 
size
);

29 
evít_deöô
(
c⁄ãxt
 *
˘x
);

31 
evít_add_out
(
ï
, 
c⁄n
 *
c
);

32 
evít_dñ_out
(
ï
, 
c⁄n
 *
c
);

33 
evít_add_c⁄n
(
ï
, 
c⁄n
 *
c
);

34 
evít_dñ_c⁄n
(
ï
, 
c⁄n
 *
c
);

36 
evít_waô
(
ï
, 
ïﬁl_evít
 *
evít
, 
√vít
, 
timeout
);

	@mcp_generator.c

19 
	~<m˝_c‹e.h
>

22 
	$gí_tick
(
timî
 *
t
, *
¨g
)

24 
gí
 *
g
 = 
¨g
;

25 
c⁄ãxt
 *
˘x
 = 
g
->ctx;

26 
di°_öfo
 *
di
 = 
g
->di;

27 
now
;

29 
	`ASSERT
(
g
->
timî
 =
t
);

32 
g
->
timî
 = 
NULL
;

34 i‡(
g
->
d⁄e
) {

35 
	`gí_°›
(
g
);

39 
now
 = 
	`timî_now
();

41 
now
 > 
g
->
√xt_time
) {

42 
g
->
d⁄e
 = (g->
	`tick
(
˘x
, g->
¨g
) < 0) ? 1 : 0;

43 i‡(
g
->
d⁄e
) {

44 
	`gí_°›
(
g
);

48 
di
->
	`√xt
(di);

50 
g
->
√xt_time
 +
di
->
√xt_vÆ
;

52 
	`log_debug
(
LOG_DEBUG
, "tick '%s' i¿%g s", 
g
->
tick«me
, 
di
->
√xt_vÆ
);

55 
g
->
timî
 = 
	`timî_scheduÀ
(
gí_tick
, g, g->
√xt_time
 - 
now
);

56 
	}
}

59 
	$gí_fúe
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

61 
gí
 *
g
 = 
ˇrg
;

63 
	`ASSERT
(
g
->
⁄eshŸ
);

65 i‡(
g
->
d⁄e
) {

69 
g
->
d⁄e
 = (g->
	`tick
(
˘x
, g->
¨g
) < 0) ? 1 : 0;

70 i‡(
g
->
d⁄e
) {

71 
	`gí_°›
(
g
);

73 
	}
}

76 
	$_gí_°¨t
(
gí
 *
g
, 
c⁄ãxt
 *
˘x
, 
di°_öfo
 *
di
,

77 *
tick«me
, 
gí_tick_t
 
tick
, *
¨g
,

78 
evít_ty≥_t
 
fúög_evít
)

80 
g
->
˘x
 = ctx;

82 
g
->
di
 = di;

85 
g
->
tick«me
 =Åickname;

86 
g
->
tick
 =Åick;

87 
g
->
¨g
 =árg;

88 
g
->
°¨t_time
 = 
	`timî_now
();

92 
g
->
⁄eshŸ
 = (
fúög_evít
 !
EVENT_INVALID
) ? 1 : 0;

106 i‡(
g
->
⁄eshŸ
) {

107 
	`ASSERT
(
fúög_evít
 < 
MAX_EVENT_TYPES
);

108 
g
->
√xt_time
 = 0.0;

109 
g
->
timî
 = 
NULL
;

110 
	`ecb_ªgi°î
(
˘x
, 
fúög_evít
, 
gí_fúe
, 
NULL
);

112 
di
->
	`√xt
(di);

113 
g
->
√xt_time
 = 
	`timî_now
(Ë+ 
di
->
√xt_vÆ
;

114 
g
->
timî
 = 
	`timî_scheduÀ
(
gí_tick
, g, g->
√xt_time
 - 
	`timî_now
());

117 
	`log_debug
(
LOG_DEBUG
, "°¨àgí %∞tÿtick '%s'", 
g
, g->
tick«me
);

119 
g
->
d⁄e
 = (g->
	`tick
(
˘x
, g->
¨g
) < 0) ? 1 : 0;

120 i‡(
g
->
d⁄e
) {

121 
	`gí_°›
(
g
);

123 
	}
}

126 
	$gí_°›
(
gí
 *
g
)

128 
	`ASSERT
(
g
->
d⁄e
);

130 i‡(
g
->
timî
 !
NULL
) {

131 
	`timî_ˇn˚l
(
g
->
timî
);

134 
	`log_debug
(
LOG_DEBUG
, "°› gí %∞tÿtick '%s'", 
g
, g->
tick«me
);

135 
	}
}

	@mcp_generator.h

19 #i‚de‡
_MCP_GENERATOR_H_


20 
	#_MCP_GENERATOR_H_


	)

22 (*
	tgí_tick_t
)(
	tc⁄ãxt
 *, *);

29 
	sgí
 {

30 
c⁄ãxt
 *
˘x
;

32 
di°_öfo
 *
di
;

34 
timî
 *timer;

35 *
tick«me
;

36 
gí_tick_t
 
tick
;

37 *
¨g
;

38 
°¨t_time
;

39 
√xt_time
;

41 
⁄eshŸ
:1;

42 
d⁄e
:1;

45 
	#gí_°¨t
(
_g
, 
_˘x
, 
_di
, 
_tick
, 
_¨g
, 
_e
) \

46 
	`_gí_°¨t
(
_g
, 
_˘x
, 
_di
, #_tick, 
_tick
, 
_¨g
, 
_e
)

	)

48 
	`_gí_°¨t
(
gí
 *
g
, 
c⁄ãxt
 *
˘x
, 
di°_öfo
 *
di
, *
tick«me
, 
gí_tick_t
 
tick
, *
¨g
, 
evít_ty≥_t
 
fúög_evít
);

49 
	`gí_°›
(
gí
 *
g
);

	@mcp_log.c

19 
	~<°dlib.h
>

20 
	~<°d¨g.h
>

21 
	~<î∫o.h
>

22 
	~<time.h
>

23 
	~<˘y≥.h
>

24 
	~<uni°d.h
>

25 
	~<f˙é.h
>

26 
	~<sys/°©.h
>

28 
	~<m˝_log.h
>

29 
	~<m˝_utû.h
>

31 
loggî
 
	gloggî
;

34 
	$log_öô
(
Àvñ
, *
«me
)

36 
loggî
 *
l
 = &logger;

38 
l
->
Àvñ
 = 
	`MAX
(
LOG_EMERG
, 
	`MIN
÷evñ, 
LOG_PVERB
));

39 
l
->
«me
 =Çame;

40 i‡(
«me
 =
NULL
 || !
	`°æí
(name)) {

41 
l
->
fd
 = 
STDERR_FILENO
;

43 
l
->
fd
 = 
	`›í
(
«me
, 
O_WRONLY
 | 
O_APPEND
 | 
O_CREAT
, 0644);

44 i‡(
l
->
fd
 < 0) {

45 
	`log_°dîr
("›íögÜog fûê'%s' faûed: %s", 
«me
,

46 
	`°ªº‹
(
î∫o
));

52 
	}
}

55 
	$log_deöô
()

57 
loggî
 *
l
 = &logger;

59 i‡(
l
->
fd
 !
STDERR_FILENO
) {

60 
	`˛o£
(
l
->
fd
);

62 
	}
}

65 
	$log_ª›í
()

67 
loggî
 *
l
 = &logger;

69 i‡(
l
->
fd
 !
STDERR_FILENO
) {

70 
	`˛o£
(
l
->
fd
);

71 
l
->
fd
 = 
	`›í
÷->
«me
, 
O_WRONLY
 | 
O_APPEND
 | 
O_CREAT
, 0644);

72 i‡(
l
->
fd
 < 0) {

73 
	`log_°dîr
("ª›íögÜog fûê'%s'Áûed, ign‹ed: %s", 
l
->
«me
,

74 
	`°ªº‹
(
î∫o
));

77 
	}
}

80 
	$log_Àvñ_up
()

82 
loggî
 *
l
 = &logger;

84 i‡(
l
->
Àvñ
 < 
LOG_PVERB
) {

85 
l
->
Àvñ
++;

86 
	`loga
("u∞logÜevñÅÿ%d", 
l
->
Àvñ
);

88 
	}
}

91 
	$log_Àvñ_down
()

93 
loggî
 *
l
 = &logger;

95 i‡(
l
->
Àvñ
 > 
LOG_EMERG
) {

96 
l
->
Àvñ
--;

97 
	`loga
("dow¿logÜevñÅÿ%d", 
l
->
Àvñ
);

99 
	}
}

102 
	$log_Àvñ_£t
(
Àvñ
)

104 
loggî
 *
l
 = &logger;

106 
l
->
Àvñ
 = 
	`MAX
(
LOG_EMERG
, 
	`MIN
÷evñ, 
LOG_PVERB
));

107 
	`loga
("£àlogÜevñÅÿ%d", 
l
->
Àvñ
);

108 
	}
}

111 
	$log_loggabÀ
(
Àvñ
)

113 
loggî
 *
l
 = &logger;

115 i‡(
Àvñ
 > 
l
->level) {

120 
	}
}

123 
	$_log
(c⁄° *
fûe
, 
löe
, 
∑nic
, c⁄° *
fmt
, ...)

125 
loggî
 *
l
 = &logger;

126 
Àn
, 
size
, 
î∫o_ßve
;

127 
buf
[
LOG_MAX_LEN
], *
time°r
;

128 
va_li°
 
¨gs
;

129 
tm
 *
loˇl
;

130 
time_t
 
t
;

131 
ssize_t
 
n
;

133 i‡(
l
->
fd
 < 0) {

137 
î∫o_ßve
 = 
î∫o
;

138 
Àn
 = 0;

139 
size
 = 
LOG_MAX_LEN
;

141 
t
 = 
	`time
(
NULL
);

142 
loˇl
 = 
	`loˇ…ime
(&
t
);

143 
time°r
 = 
	`as˘ime
(
loˇl
);

145 
Àn
 +
	`m˝_s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "[%.*s] %s:%d ",

146 
	`°æí
(
time°r
Ë- 1,Åime°r, 
fûe
, 
löe
);

148 
	`va_°¨t
(
¨gs
, 
fmt
);

149 
Àn
 +
	`m˝_vs˙¥ötf
(
buf
 +Üí, 
size
 -Üí, 
fmt
, 
¨gs
);

150 
	`va_íd
(
¨gs
);

152 
buf
[
Àn
++] = '\n';

154 
n
 = 
	`m˝_wrôe
(
l
->
fd
, 
buf
, 
Àn
);

155 i‡(
n
 < 0) {

156 
l
->
√º‹
++;

159 
î∫o
 = 
î∫o_ßve
;

161 i‡(
∑nic
) {

162 
	`ab‹t
();

164 
	}
}

167 
	$_log_°dîr
(c⁄° *
fmt
, ...)

169 
loggî
 *
l
 = &logger;

170 
Àn
, 
size
, 
î∫o_ßve
;

171 
buf
[4 * 
LOG_MAX_LEN
];

172 
va_li°
 
¨gs
;

173 
ssize_t
 
n
;

175 
î∫o_ßve
 = 
î∫o
;

176 
Àn
 = 0;

177 
size
 = 4 * 
LOG_MAX_LEN
;

179 
	`va_°¨t
(
¨gs
, 
fmt
);

180 
Àn
 +
	`m˝_vs˙¥ötf
(
buf
, 
size
, 
fmt
, 
¨gs
);

181 
	`va_íd
(
¨gs
);

183 
buf
[
Àn
++] = '\n';

185 
n
 = 
	`m˝_wrôe
(
STDERR_FILENO
, 
buf
, 
Àn
);

186 i‡(
n
 < 0) {

187 
l
->
√º‹
++;

190 
î∫o
 = 
î∫o_ßve
;

191 
	}
}

198 
	$_log_hexdump
(c⁄° *
fûe
, 
löe
, *
d©a
, 
d©Æí
,

199 c⁄° *
fmt
, ...)

201 
loggî
 *
l
 = &logger;

202 
buf
[8 * 
LOG_MAX_LEN
];

203 
i
, 
off
, 
Àn
, 
size
, 
î∫o_ßve
;

204 
va_li°
 
¨gs
;

205 
ssize_t
 
n
;

207 i‡(
l
->
fd
 < 0) {

212 
	`va_°¨t
(
¨gs
, 
fmt
);

213 
	`_log
(
fûe
, 
löe
, 0, 
fmt
);

214 
	`va_íd
(
¨gs
);

217 
î∫o_ßve
 = 
î∫o
;

218 
off
 = 0;

219 
Àn
 = 0;

220 
size
 = 8 * 
LOG_MAX_LEN
;

222 
d©Æí
 !0 && (
Àn
 < 
size
 - 1)) {

223 *
ßve
, *
°r
;

224 
c
;

225 
ßvñí
;

227 
Àn
 +
	`m˝_s˙¥ötf
(
buf
 +Üí, 
size
 -Üí, "%08x ", 
off
);

229 
ßve
 = 
d©a
;

230 
ßvñí
 = 
d©Æí
;

232 
i
 = 0; 
d©Æí
 !0 && i < 16; 
d©a
++, datalen--, i++) {

233 
c
 = ()(*
d©a
);

234 
°r
 = (
i
 == 7) ? " " : " ";

235 
Àn
 +
	`m˝_s˙¥ötf
(
buf
 +Üí, 
size
 -Üí, "%02x%s", 
c
, 
°r
);

237  ; 
i
 < 16; i++) {

238 
°r
 = (
i
 == 7) ? " " : " ";

239 
Àn
 +
	`m˝_s˙¥ötf
(
buf
 +Üí, 
size
 -Üí, " %s", 
°r
);

242 
d©a
 = 
ßve
;

243 
d©Æí
 = 
ßvñí
;

245 
Àn
 +
	`m˝_s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, " |");

247 
i
 = 0; 
d©Æí
 !0 && i < 16; 
d©a
++, datalen--, i++) {

248 
c
 = ()(
	`i•röt
(*
d©a
) ? *data : '.');

249 
Àn
 +
	`m˝_s˙¥ötf
(
buf
 +Üí, 
size
 -Üí, "%c", 
c
);

251 
Àn
 +
	`m˝_s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "|\n");

253 
off
 += 16;

256 
n
 = 
	`m˝_wrôe
(
l
->
fd
, 
buf
, 
Àn
);

257 i‡(
n
 < 0) {

258 
l
->
√º‹
++;

261 
î∫o
 = 
î∫o_ßve
;

262 
	}
}

	@mcp_log.h

19 #i‚de‡
_MCP_LOG_H_


20 
	#_MCP_LOG_H_


	)

22 
	sloggî
 {

23 *
	m«me
;

24 
	mÀvñ
;

25 
	mfd
;

26 
	m√º‹
;

29 
	#LOG_EMERG
 0

	)

30 
	#LOG_ALERT
 1

	)

31 
	#LOG_CRIT
 2

	)

32 
	#LOG_ERR
 3

	)

33 
	#LOG_WARN
 4

	)

34 
	#LOG_NOTICE
 5

	)

35 
	#LOG_INFO
 6

	)

36 
	#LOG_DEBUG
 7

	)

37 
	#LOG_VERB
 8

	)

38 
	#LOG_VVERB
 9

	)

39 
	#LOG_VVVERB
 10

	)

40 
	#LOG_PVERB
 11

	)

42 
	#LOG_MAX_LEN
 256

	)

55 #ifde‡
MCP_DEBUG_LOG


57 
	#log_debug
(
_Àvñ
, ...) do { \

58 i‡(
	`log_loggabÀ
(
_Àvñ
) != 0) { \

59 
	`_log
(
__FILE__
, 
__LINE__
, 0, 
__VA_ARGS__
); \

61 } 0)

	)

63 
	#log_hexdump
(
_Àvñ
, 
_d©a
, 
_d©Æí
, ...) do { \

64 i‡(
	`log_loggabÀ
(
_Àvñ
) != 0) { \

65 
	`_log_hexdump
(
__FILE__
, 
__LINE__
, (*)(
_d©a
), ()(
_d©Æí
), \

66 
__VA_ARGS__
); \

68 } 0)

	)

72 
	#log_debug
(
_Àvñ
, ...)

	)

73 
	#log_hexdump
(
_Àvñ
, 
_d©a
, 
_d©Æí
, ...)

	)

77 
	#log_°dîr
(...) do { \

78 
	`_log_°dîr
(
__VA_ARGS__
); \

79 } 0)

	)

81 
	#loga
(...) do { \

82 
	`_log
(
__FILE__
, 
__LINE__
, 0, 
__VA_ARGS__
); \

83 } 0)

	)

85 
	#loga_hexdump
(
_d©a
, 
_d©Æí
, ...) do { \

86 
	`_log_hexdump
(
__FILE__
, 
__LINE__
, (*)(
_d©a
), ()(
_d©Æí
), \

87 
__VA_ARGS__
); \

89 

	)

90 
	#log_îr‹
(...) do { \

91 i‡(
	`log_loggabÀ
(
LOG_ALERT
) != 0) { \

92 
	`_log
(
__FILE__
, 
__LINE__
, 0, 
__VA_ARGS__
); \

94 } 0)

	)

96 
	#log_w¨n
(...) do { \

97 i‡(
	`log_loggabÀ
(
LOG_WARN
) != 0) { \

98 
	`_log
(
__FILE__
, 
__LINE__
, 0, 
__VA_ARGS__
); \

100 } 0)

	)

102 
	#log_∑nic
(...) do { \

103 i‡(
	`log_loggabÀ
(
LOG_EMERG
) != 0) { \

104 
	`_log
(
__FILE__
, 
__LINE__
, 1, 
__VA_ARGS__
); \

106 } 0)

	)

108 
log_öô
(
Àvñ
, *
fûíame
);

109 
log_deöô
();

110 
log_Àvñ_up
();

111 
log_Àvñ_down
();

112 
log_Àvñ_£t
(
Àvñ
);

113 
log_ª›í
();

114 
log_loggabÀ
(
Àvñ
);

115 
_log
(c⁄° *
fûe
, 
löe
, 
∑nic
, c⁄° *
fmt
, ...);

116 
_log_°dîr
(c⁄° *
fmt
, ...);

117 
_log_hexdump
(c⁄° *
fûe
, 
löe
, *
d©a
, 
d©Æí
, c⁄° *
fmt
, ...);

	@mcp_queue.h

51 #i‚de‡
_MCP_QUEUE_H_


52 
	#_MCP_QUEUE_H_


	)

54 
	~<m˝_log.h
>

56 
	#__off£tof
(
ty≥
, 
fõld
Ë((
size_t
)(&(—y≥ *)
NULL
)->fõld))

	)

129 
	#QUEUE_MACRO_SCRUB
 1

	)

131 #ifde‡
MCP_ASSERT_PANIC


132 
	#QUEUE_MACRO_TRACE
 1

	)

133 
	#QUEUE_MACRO_ASSERT
 1

	)

136 #ifde‡
QUEUE_MACRO_SCRUB


138 
	#QMD_SAVELINK
(
«me
, 
lök
Ë**«mê(*)&÷ök)

	)

140 
	#TRASHIT
(
x
) do { \

141 (
x
Ë(*Ë
NULL
; \

142 } 0)

	)

146 
	#QMD_SAVELINK
(
«me
, 
lök
)

	)

147 
	#TRASHIT
(
x
)

	)

151 #ifde‡
QUEUE_MACRO_TRACE


154 
	sqm_åa˚
 {

155 *
	mœ°fûe
;

156 
	mœ°löe
;

157 *
	m¥evfûe
;

158 
	m¥evlöe
;

161 
	#TRACEBUF
 
qm_åa˚
 
åa˚
;

	)

163 
	#QMD_TRACE_HEAD
(
hód
) do { \

164 (
hód
)->
åa˚
.
¥evlöe
 = (hód)->åa˚.
œ°löe
; \

165 (
hód
)->
åa˚
.
¥evfûe
 = (hód)->åa˚.
œ°fûe
; \

166 (
hód
)->
åa˚
.
œ°löe
 = 
__LINE__
; \

167 (
hód
)->
åa˚
.
œ°fûe
 = 
__FILE__
; \

168 } 0)

	)

170 
	#QMD_TRACE_ELEM
(
ñem
) do { \

171 (
ñem
)->
åa˚
.
¥evlöe
 = (ñem)->åa˚.
œ°löe
; \

172 (
ñem
)->
åa˚
.
¥evfûe
 = (ñem)->åa˚.
œ°fûe
; \

173 (
ñem
)->
åa˚
.
œ°löe
 = 
__LINE__
; \

174 (
ñem
)->
åa˚
.
œ°fûe
 = 
__FILE__
; \

175 } 0)

	)

179 
	#QMD_TRACE_ELEM
(
ñem
)

	)

180 
	#QMD_TRACE_HEAD
(
hód
)

	)

181 
	#TRACEBUF


	)

188 
	#SLIST_HEAD
(
«me
, 
ty≥
) \

189 
	s«me
 { \

190 
ty≥
 *
¶h_fú°
; \

191 }

	)

193 
	#SLIST_HEAD_INITIALIZER
(
hód
) \

194 { 
NULL
 }

	)

196 
	#SLIST_ENTRY
(
ty≥
) \

198 
ty≥
 *
¶e_√xt
; \

199 }

	)

204 
	#SLIST_EMPTY
(
hód
Ë((hód)->
¶h_fú°
 =
NULL
)

	)

206 
	#SLIST_FIRST
(
hód
Ë((hód)->
¶h_fú°
)

	)

208 
	#SLIST_FOREACH
(
v¨
, 
hód
, 
fõld
) \

209 (
v¨
Ë
	`SLIST_FIRST
((
hód
)); \

210 (
v¨
); \

211 (
v¨
Ë
	`SLIST_NEXT
((v¨), 
fõld
))

	)

213 
	#SLIST_FOREACH_SAFE
(
v¨
, 
hód
, 
fõld
, 
tv¨
) \

214 (
v¨
Ë
	`SLIST_FIRST
((
hód
)); \

215 (
v¨
Ë&& ((
tv¨
Ë
	`SLIST_NEXT
((v¨), 
fõld
), 1); \

216 (
v¨
Ë(
tv¨
))

	)

218 
	#SLIST_FOREACH_PREVPTR
(
v¨
, 
v¨p
, 
hód
, 
fõld
) \

219 (
v¨p
Ë&
	`SLIST_FIRST
((
hód
)); \

220 ((
v¨
Ë*(
v¨p
)Ë!
NULL
; \

221 (
v¨p
Ë&
	`SLIST_NEXT
((
v¨
), 
fõld
))

	)

223 
	#SLIST_INIT
(
hód
) do { \

224 
	`SLIST_FIRST
((
hód
)Ë
NULL
; \

225 } 0)

	)

227 
	#SLIST_INSERT_AFTER
(
¶i°ñm
, 
ñm
, 
fõld
) do { \

228 
	`SLIST_NEXT
((
ñm
), 
fõld
ËSLIST_NEXT((
¶i°ñm
), field); \

229 
	`SLIST_NEXT
((
¶i°ñm
), 
fõld
Ë(
ñm
); \

230 } 0)

	)

232 
	#SLIST_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

233 
	`SLIST_NEXT
((
ñm
), 
fõld
Ë
	`SLIST_FIRST
((
hód
)); \

234 
	`SLIST_FIRST
((
hód
)Ë(
ñm
); \

235 } 0)

	)

237 
	#SLIST_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
¶e_√xt
)

	)

239 
	#SLIST_REMOVE
(
hód
, 
ñm
, 
ty≥
, 
fõld
) do { \

240 i‡(
	`SLIST_FIRST
((
hód
)Ë=(
ñm
)) { \

241 
	`SLIST_REMOVE_HEAD
((
hód
), 
fõld
); \

243 
ty≥
 *
cuªlm
 = 
	`SLIST_FIRST
((
hód
)); \

244 
	`SLIST_NEXT
(
cuªlm
, 
fõld
Ë!(
ñm
)) { \

245 
cuªlm
 = 
	`SLIST_NEXT
(cuªlm, 
fõld
); \

247 
	`SLIST_REMOVE_AFTER
(
cuªlm
, 
fõld
); \

249 } 0)

	)

251 
	#SLIST_REMOVE_AFTER
(
ñm
, 
fõld
) do { \

252 
	`QMD_SAVELINK
(
ﬁd√xt
, 
	`SLIST_NEXT
(SLIST_NEXT(
ñm
, 
fõld
), field)); \

253 
	`SLIST_NEXT
(
ñm
, 
fõld
) = SLIST_NEXT(SLIST_NEXT(elm, field), field); \

254 
	`TRASHIT
(*
ﬁd√xt
); \

255 } 0)

	)

257 
	#SLIST_REMOVE_HEAD
(
hód
, 
fõld
) do { \

258 
	`QMD_SAVELINK
(
ﬁd√xt
, 
	`SLIST_NEXT
(
	`SLIST_FIRST
((
hód
)), 
fõld
)); \

259 
	`SLIST_FIRST
((
hód
)Ë
	`SLIST_NEXT
(SLIST_FIRST((hód)), 
fõld
); \

260 
	`TRASHIT
(*
ﬁd√xt
); \

261 } 0)

	)

266 
	#STAILQ_HEAD
(
«me
, 
ty≥
) \

267 
	s«me
 { \

268 
ty≥
 *
°qh_fú°
; \

269 
ty≥
 **
°qh_œ°
; \

270 }

	)

272 
	#STAILQ_HEAD_INITIALIZER
(
hód
) \

273 { 
NULL
, &(
hód
).
°qh_fú°
 }

	)

275 
	#STAILQ_ENTRY
(
ty≥
) \

277 
ty≥
 *
°qe_√xt
; \

278 }

	)

283 
	#STAILQ_CONCAT
(
hód1
, 
hód2
) do { \

284 i‡(!
	`STAILQ_EMPTY
((
hód2
))) { \

285 *(
hód1
)->
°qh_œ°
 = (
hód2
)->
°qh_fú°
; \

286 (
hód1
)->
°qh_œ°
 = (
hód2
)->stqh_last; \

287 
	`STAILQ_INIT
((
hód2
)); \

289 } 0)

	)

291 
	#STAILQ_EMPTY
(
hód
Ë((hód)->
°qh_fú°
 =
NULL
)

	)

293 
	#STAILQ_FIRST
(
hód
Ë((hód)->
°qh_fú°
)

	)

295 
	#STAILQ_FOREACH
(
v¨
, 
hód
, 
fõld
) \

296 (
v¨
Ë
	`STAILQ_FIRST
((
hód
)); \

297 (
v¨
); \

298 (
v¨
Ë
	`STAILQ_NEXT
((v¨), 
fõld
))

	)

301 
	#STAILQ_FOREACH_SAFE
(
v¨
, 
hód
, 
fõld
, 
tv¨
) \

302 (
v¨
Ë
	`STAILQ_FIRST
((
hód
)); \

303 (
v¨
Ë&& ((
tv¨
Ë
	`STAILQ_NEXT
((v¨), 
fõld
), 1); \

304 (
v¨
Ë(
tv¨
))

	)

306 
	#STAILQ_INIT
(
hód
) do { \

307 
	`STAILQ_FIRST
((
hód
)Ë
NULL
; \

308 (
hód
)->
°qh_œ°
 = &
	`STAILQ_FIRST
((head)); \

309 } 0)

	)

311 
	#STAILQ_INSERT_AFTER
(
hód
, 
tqñm
, 
ñm
, 
fõld
) do { \

312 i‡((
	`STAILQ_NEXT
((
ñm
), 
fõld
ËSTAILQ_NEXT((
tqñm
), fõld)Ë=
NULL
)\

313 (
hód
)->
°qh_œ°
 = &
	`STAILQ_NEXT
((
ñm
), 
fõld
); \

314 
	`STAILQ_NEXT
((
tqñm
), 
fõld
Ë(
ñm
); \

315 } 0)

	)

317 
	#STAILQ_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

318 i‡((
	`STAILQ_NEXT
((
ñm
), 
fõld
Ë
	`STAILQ_FIRST
((
hód
))Ë=
NULL
) \

319 (
hód
)->
°qh_œ°
 = &
	`STAILQ_NEXT
((
ñm
), 
fõld
); \

320 
	`STAILQ_FIRST
((
hód
)Ë(
ñm
); \

321 } 0)

	)

323 
	#STAILQ_INSERT_TAIL
(
hód
, 
ñm
, 
fõld
) do { \

324 
	`STAILQ_NEXT
((
ñm
), 
fõld
Ë
NULL
; \

325 *(
hód
)->
°qh_œ°
 = (
ñm
); \

326 (
hód
)->
°qh_œ°
 = &
	`STAILQ_NEXT
((
ñm
), 
fõld
); \

327 } 0)

	)

329 
	#STAILQ_LAST
(
hód
, 
ty≥
, 
fõld
) \

330 (
	`STAILQ_EMPTY
((
hód
)) ? \

331 
NULL
 : \

332 ((
ty≥
 *)(*) \

333 ((*)((
hód
)->
°qh_œ°
Ë- 
	`__off£tof
(
ty≥
, 
fõld
))))

	)

335 
	#STAILQ_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
°qe_√xt
)

	)

337 
	#STAILQ_REMOVE
(
hód
, 
ñm
, 
ty≥
, 
fõld
) do { \

338 i‡(
	`STAILQ_FIRST
((
hód
)Ë=(
ñm
)) { \

339 
	`STAILQ_REMOVE_HEAD
((
hód
), 
fõld
); \

342 
ty≥
 *
cuªlm
 = 
	`STAILQ_FIRST
((
hód
)); \

343 
	`STAILQ_NEXT
(
cuªlm
, 
fõld
Ë!(
ñm
)) \

344 
cuªlm
 = 
	`STAILQ_NEXT
(cuªlm, 
fõld
); \

345 
	`STAILQ_REMOVE_AFTER
(
hód
, 
cuªlm
, 
fõld
); \

347 } 0)

	)

349 
	#STAILQ_REMOVE_HEAD
(
hód
, 
fõld
) do { \

350 
	`QMD_SAVELINK
(
ﬁd√xt
, 
	`STAILQ_NEXT
(
	`STAILQ_FIRST
((
hód
)), 
fõld
)); \

351 i‡((
	`STAILQ_FIRST
((
hód
)) = \

352 
	`STAILQ_NEXT
(
	`STAILQ_FIRST
((
hód
)), 
fõld
)Ë=
NULL
) { \

353 (
hód
)->
°qh_œ°
 = &
	`STAILQ_FIRST
((head)); \

355 
	`TRASHIT
(*
ﬁd√xt
); \

356 } 0)

	)

358 
	#STAILQ_REMOVE_AFTER
(
hód
, 
ñm
, 
fõld
) do { \

359 
	`QMD_SAVELINK
(
ﬁd√xt
, 
	`STAILQ_NEXT
(STAILQ_NEXT(
ñm
, 
fõld
), field)); \

360 i‡((
	`STAILQ_NEXT
(
ñm
, 
fõld
) = \

361 
	`STAILQ_NEXT
(STAILQ_NEXT(
ñm
, 
fõld
), fõld)Ë=
NULL
) { \

362 (
hód
)->
°qh_œ°
 = &
	`STAILQ_NEXT
((
ñm
), 
fõld
); \

364 
	`TRASHIT
(*
ﬁd√xt
); \

365 } 0)

	)

367 
	#STAILQ_SWAP
(
hód1
, 
hód2
, 
ty≥
) do { \

368 
ty≥
 *
sw≠_fú°
 = 
	`STAILQ_FIRST
(
hód1
); \

369 
ty≥
 **
sw≠_œ°
 = (
hód1
)->
°qh_œ°
; \

370 
	`STAILQ_FIRST
(
hód1
ËSTAILQ_FIRST(
hód2
); \

371 (
hód1
)->
°qh_œ°
 = (
hód2
)->stqh_last; \

372 
	`STAILQ_FIRST
(
hód2
Ë
sw≠_fú°
; \

373 (
hód2
)->
°qh_œ°
 = 
sw≠_œ°
; \

374 i‡(
	`STAILQ_EMPTY
(
hód1
)) \

375 (
hód1
)->
°qh_œ°
 = &
	`STAILQ_FIRST
(head1); \

376 i‡(
	`STAILQ_EMPTY
(
hód2
)) \

377 (
hód2
)->
°qh_œ°
 = &
	`STAILQ_FIRST
(head2); \

378 } 0)

	)

384 
	#LIST_HEAD
(
«me
, 
ty≥
) \

385 
	s«me
 { \

386 
ty≥
 *
lh_fú°
; \

387 }

	)

389 
	#LIST_HEAD_INITIALIZER
(
hód
) \

390 { 
NULL
 }

	)

392 
	#LIST_ENTRY
(
ty≥
) \

394 
ty≥
 *
À_√xt
; \

395 
ty≥
 **
À_¥ev
; \

396 }

	)

402 #ifde‡
QUEUE_MACRO_ASSERT


404 
	#QMD_LIST_CHECK_HEAD
(
hód
, 
fõld
) do { \

405 i‡(
	`LIST_FIRST
((
hód
)Ë!
NULL
 && \

406 
	`LIST_FIRST
((
hód
))->
fõld
.
À_¥ev
 != &LIST_FIRST((head))) { \

407 
	`log_∑nic
("BadÜi° hód %∞fú°->¥ev !hód", (*)(
hód
)); \

409 } 0)

	)

411 
	#QMD_LIST_CHECK_NEXT
(
ñm
, 
fõld
) do { \

412 i‡(
	`LIST_NEXT
((
ñm
), 
fõld
Ë!
NULL
 && \

413 
	`LIST_NEXT
((
ñm
), 
fõld
)->fõld.
À_¥ev
 !&(”lm)->fõld.
À_√xt
)) {\

414 
	`log_∑nic
("BadÜökÉlm %∞√xt->¥ev !ñm",(*)(
ñm
)); \

416 } 0)

	)

418 
	#QMD_LIST_CHECK_PREV
(
ñm
, 
fõld
) do { \

419 i‡(*(
ñm
)->
fõld
.
À_¥ev
 != (elm)) { \

420 
	`log_∑nic
("BadÜökÉlm %∞¥ev->√xà!ñm",(*)(
ñm
)); \

422 } 0)

	)

426 
	#QMD_LIST_CHECK_HEAD
(
hód
, 
fõld
)

	)

427 
	#QMD_LIST_CHECK_NEXT
(
ñm
, 
fõld
)

	)

428 
	#QMD_LIST_CHECK_PREV
(
ñm
, 
fõld
)

	)

432 
	#LIST_EMPTY
(
hód
Ë((hód)->
lh_fú°
 =
NULL
)

	)

434 
	#LIST_FIRST
(
hód
Ë((hód)->
lh_fú°
)

	)

436 
	#LIST_FOREACH
(
v¨
, 
hód
, 
fõld
) \

437 (
v¨
Ë
	`LIST_FIRST
((
hód
)); \

438 (
v¨
); \

439 (
v¨
Ë
	`LIST_NEXT
((v¨), 
fõld
))

	)

441 
	#LIST_FOREACH_SAFE
(
v¨
, 
hód
, 
fõld
, 
tv¨
) \

442 (
v¨
Ë
	`LIST_FIRST
((
hód
)); \

443 (
v¨
Ë&& ((
tv¨
Ë
	`LIST_NEXT
((v¨), 
fõld
), 1); \

444 (
v¨
Ë(
tv¨
))

	)

446 
	#LIST_INIT
(
hód
) do { \

447 
	`LIST_FIRST
((
hód
)Ë
NULL
; \

448 } 0)

	)

450 
	#LIST_INSERT_AFTER
(
li°ñm
, 
ñm
, 
fõld
) do { \

451 
	`QMD_LIST_CHECK_NEXT
(
li°ñm
, 
fõld
); \

452 i‡((
	`LIST_NEXT
((
ñm
), 
fõld
ËLIST_NEXT((
li°ñm
), fõld)Ë!
NULL
)\

453 
	`LIST_NEXT
((
li°ñm
), 
fõld
)->fõld.
À_¥ev
 = \

454 &
	`LIST_NEXT
((
ñm
), 
fõld
); \

455 
	`LIST_NEXT
((
li°ñm
), 
fõld
Ë(
ñm
); \

456 (
ñm
)->
fõld
.
À_¥ev
 = &
	`LIST_NEXT
((
li°ñm
), field); \

457 } 0)

	)

459 
	#LIST_INSERT_BEFORE
(
li°ñm
, 
ñm
, 
fõld
) do { \

460 
	`QMD_LIST_CHECK_PREV
(
li°ñm
, 
fõld
); \

461 (
ñm
)->
fõld
.
À_¥ev
 = (
li°ñm
)->field.le_prev; \

462 
	`LIST_NEXT
((
ñm
), 
fõld
Ë(
li°ñm
); \

463 *(
li°ñm
)->
fõld
.
À_¥ev
 = (
ñm
); \

464 (
li°ñm
)->
fõld
.
À_¥ev
 = &
	`LIST_NEXT
((
ñm
), field); \

465 } 0)

	)

467 
	#LIST_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

468 
	`QMD_LIST_CHECK_HEAD
((
hód
), 
fõld
); \

469 i‡((
	`LIST_NEXT
((
ñm
), 
fõld
Ë
	`LIST_FIRST
((
hód
))Ë!
NULL
) \

470 
	`LIST_FIRST
((
hód
))->
fõld
.
À_¥ev
 = &
	`LIST_NEXT
((
ñm
), field); \

471 
	`LIST_FIRST
((
hód
)Ë(
ñm
); \

472 (
ñm
)->
fõld
.
À_¥ev
 = &
	`LIST_FIRST
((
hód
)); \

473 } 0)

	)

475 
	#LIST_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
À_√xt
)

	)

477 
	#LIST_REMOVE
(
ñm
, 
fõld
) do { \

478 
	`QMD_SAVELINK
(
ﬁd√xt
, (
ñm
)->
fõld
.
À_√xt
); \

479 
	`QMD_SAVELINK
(
ﬁd¥ev
, (
ñm
)->
fõld
.
À_¥ev
); \

480 
	`QMD_LIST_CHECK_NEXT
(
ñm
, 
fõld
); \

481 
	`QMD_LIST_CHECK_PREV
(
ñm
, 
fõld
); \

482 i‡(
	`LIST_NEXT
((
ñm
), 
fõld
Ë!
NULL
) \

483 
	`LIST_NEXT
((
ñm
), 
fõld
)->fõld.
À_¥ev
 = \

484 (
ñm
)->
fõld
.
À_¥ev
; \

485 *(
ñm
)->
fõld
.
À_¥ev
 = 
	`LIST_NEXT
((elm), field); \

486 
	`TRASHIT
(*
ﬁd√xt
); \

487 
	`TRASHIT
(*
ﬁd¥ev
); \

488 } 0)

	)

490 
	#LIST_SWAP
(
hód1
, 
hód2
, 
ty≥
, 
fõld
) do { \

491 
ty≥
 *
sw≠_tmp
 = 
	`LIST_FIRST
((
hód1
)); \

492 
	`LIST_FIRST
((
hód1
)ËLIST_FIRST((
hód2
)); \

493 
	`LIST_FIRST
((
hód2
)Ë
sw≠_tmp
; \

494 i‡((
sw≠_tmp
 = 
	`LIST_FIRST
((
hód1
))Ë!
NULL
) \

495 
sw≠_tmp
->
fõld
.
À_¥ev
 = &
	`LIST_FIRST
((
hód1
)); \

496 i‡((
sw≠_tmp
 = 
	`LIST_FIRST
((
hód2
))Ë!
NULL
) \

497 
sw≠_tmp
->
fõld
.
À_¥ev
 = &
	`LIST_FIRST
((
hód2
)); \

498 } 0)

	)

503 
	#TAILQ_HEAD
(
«me
, 
ty≥
) \

504 
	s«me
 { \

505 
ty≥
 *
tqh_fú°
; \

506 
ty≥
 **
tqh_œ°
; \

507 
TRACEBUF
 \

508 }

	)

510 
	#TAILQ_HEAD_INITIALIZER
(
hód
) \

511 { 
NULL
, &(
hód
).
tqh_fú°
 }

	)

513 
	#TAILQ_ENTRY
(
ty≥
) \

515 
ty≥
 *
tqe_√xt
; \

516 
ty≥
 **
tqe_¥ev
; \

517 
TRACEBUF
 \

518 }

	)

523 #ifde‡
QUEUE_MACRO_ASSERT


525 
	#QMD_TAILQ_CHECK_HEAD
(
hód
, 
fõld
) do { \

526 i‡(!
	`TAILQ_EMPTY
(
hód
) && \

527 
	`TAILQ_FIRST
((
hód
))->
fõld
.
tqe_¥ev
 != &TAILQ_FIRST((head))) { \

528 
	`log_∑nic
("BadÅaûq hód %∞fú°->¥ev !hód", (*)(
hód
)); \

530 } 0)

	)

532 
	#QMD_TAILQ_CHECK_TAIL
(
hód
, 
fõld
) do { \

533 i‡(*(
hód
)->
tqh_œ°
 !
NULL
) { \

534 
	`log_∑nic
("BadÅaûq NEXT(%p->tqh_œ°Ë!NULL",(*)(
hód
)); \

536 } 0)

	)

538 
	#QMD_TAILQ_CHECK_NEXT
(
ñm
, 
fõld
) do { \

539 i‡(
	`TAILQ_NEXT
((
ñm
), 
fõld
Ë!
NULL
 && \

540 
	`TAILQ_NEXT
((
ñm
), 
fõld
)->fõld.
tqe_¥ev
 !&(”lm)->fõld.
tqe_√xt
)) {\

541 
	`log_∑nic
("BadÜökÉlm %∞√xt->¥ev !ñm",(*)(
ñm
)); \

543 } 0)

	)

545 
	#QMD_TAILQ_CHECK_PREV
(
ñm
, 
fõld
) do { \

546 i‡(*(
ñm
)->
fõld
.
tqe_¥ev
 != (elm)) { \

547 
	`log_∑nic
("BadÜökÉlm %∞¥ev->√xà!ñm",(*)(
ñm
)); \

549 } 0)

	)

553 
	#QMD_TAILQ_CHECK_HEAD
(
hód
, 
fõld
)

	)

554 
	#QMD_TAILQ_CHECK_TAIL
(
hód
, 
hód«me
)

	)

555 
	#QMD_TAILQ_CHECK_NEXT
(
ñm
, 
fõld
)

	)

556 
	#QMD_TAILQ_CHECK_PREV
(
ñm
, 
fõld
)

	)

560 
	#TAILQ_CONCAT
(
hód1
, 
hód2
, 
fõld
) do { \

561 i‡(!
	`TAILQ_EMPTY
(
hód2
)) { \

562 *(
hód1
)->
tqh_œ°
 = (
hód2
)->
tqh_fú°
; \

563 (
hód2
)->
tqh_fú°
->
fõld
.
tqe_¥ev
 = (
hód1
)->
tqh_œ°
; \

564 (
hód1
)->
tqh_œ°
 = (
hód2
)->tqh_last; \

565 
	`TAILQ_INIT
((
hód2
)); \

566 
	`QMD_TRACE_HEAD
(
hód1
); \

567 
	`QMD_TRACE_HEAD
(
hód2
); \

569 } 0)

	)

571 
	#TAILQ_EMPTY
(
hód
Ë((hód)->
tqh_fú°
 =
NULL
)

	)

573 
	#TAILQ_FIRST
(
hód
Ë((hód)->
tqh_fú°
)

	)

575 
	#TAILQ_FOREACH
(
v¨
, 
hód
, 
fõld
) \

576 (
v¨
Ë
	`TAILQ_FIRST
((
hód
)); \

577 (
v¨
); \

578 (
v¨
Ë
	`TAILQ_NEXT
((v¨), 
fõld
))

	)

580 
	#TAILQ_FOREACH_SAFE
(
v¨
, 
hód
, 
fõld
, 
tv¨
) \

581 (
v¨
Ë
	`TAILQ_FIRST
((
hód
)); \

582 (
v¨
Ë&& ((
tv¨
Ë
	`TAILQ_NEXT
((v¨), 
fõld
), 1); \

583 (
v¨
Ë(
tv¨
))

	)

585 
	#TAILQ_FOREACH_REVERSE
(
v¨
, 
hód
, 
hód«me
, 
fõld
) \

586 (
v¨
Ë
	`TAILQ_LAST
((
hód
), 
hód«me
); \

587 (
v¨
); \

588 (
v¨
Ë
	`TAILQ_PREV
((v¨), 
hód«me
, 
fõld
))

	)

590 
	#TAILQ_FOREACH_REVERSE_SAFE
(
v¨
, 
hód
, 
hód«me
, 
fõld
, 
tv¨
) \

591 (
v¨
Ë
	`TAILQ_LAST
((
hód
), 
hód«me
); \

592 (
v¨
Ë&& ((
tv¨
Ë
	`TAILQ_PREV
((v¨), 
hód«me
, 
fõld
), 1); \

593 (
v¨
Ë(
tv¨
))

	)

595 
	#TAILQ_INIT
(
hód
) do { \

596 
	`TAILQ_FIRST
((
hód
)Ë
NULL
; \

597 (
hód
)->
tqh_œ°
 = &
	`TAILQ_FIRST
((head)); \

598 
	`QMD_TRACE_HEAD
(
hód
); \

599 } 0)

	)

601 
	#TAILQ_INSERT_AFTER
(
hód
, 
li°ñm
, 
ñm
, 
fõld
) do { \

602 
	`QMD_TAILQ_CHECK_NEXT
(
li°ñm
, 
fõld
); \

603 i‡((
	`TAILQ_NEXT
((
ñm
), 
fõld
ËTAILQ_NEXT((
li°ñm
), fõld)Ë!
NULL
) { \

604 
	`TAILQ_NEXT
((
ñm
), 
fõld
)->fõld.
tqe_¥ev
 = &TAILQ_NEXT((elm), field);\

606 (
hód
)->
tqh_œ°
 = &
	`TAILQ_NEXT
((
ñm
), 
fõld
); \

607 
	`QMD_TRACE_HEAD
(
hód
); \

609 
	`TAILQ_NEXT
((
li°ñm
), 
fõld
Ë(
ñm
); \

610 (
ñm
)->
fõld
.
tqe_¥ev
 = &
	`TAILQ_NEXT
((
li°ñm
), field); \

611 
	`QMD_TRACE_ELEM
(&(
ñm
)->
fõld
); \

612 
	`QMD_TRACE_ELEM
(&
li°ñm
->
fõld
); \

613 } 0)

	)

615 
	#TAILQ_INSERT_BEFORE
(
li°ñm
, 
ñm
, 
fõld
) do { \

616 
	`QMD_TAILQ_CHECK_PREV
(
li°ñm
, 
fõld
); \

617 (
ñm
)->
fõld
.
tqe_¥ev
 = (
li°ñm
)->field.tqe_prev; \

618 
	`TAILQ_NEXT
((
ñm
), 
fõld
Ë(
li°ñm
); \

619 *(
li°ñm
)->
fõld
.
tqe_¥ev
 = (
ñm
); \

620 (
li°ñm
)->
fõld
.
tqe_¥ev
 = &
	`TAILQ_NEXT
((
ñm
), field); \

621 
	`QMD_TRACE_ELEM
(&(
ñm
)->
fõld
); \

622 
	`QMD_TRACE_ELEM
(&
li°ñm
->
fõld
); \

623 } 0)

	)

625 
	#TAILQ_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

626 
	`QMD_TAILQ_CHECK_HEAD
(
hód
, 
fõld
); \

627 i‡((
	`TAILQ_NEXT
((
ñm
), 
fõld
Ë
	`TAILQ_FIRST
((
hód
))Ë!
NULL
) \

628 
	`TAILQ_FIRST
((
hód
))->
fõld
.
tqe_¥ev
 = \

629 &
	`TAILQ_NEXT
((
ñm
), 
fõld
); \

631 (
hód
)->
tqh_œ°
 = &
	`TAILQ_NEXT
((
ñm
), 
fõld
); \

632 
	`TAILQ_FIRST
((
hód
)Ë(
ñm
); \

633 (
ñm
)->
fõld
.
tqe_¥ev
 = &
	`TAILQ_FIRST
((
hód
)); \

634 
	`QMD_TRACE_HEAD
(
hód
); \

635 
	`QMD_TRACE_ELEM
(&(
ñm
)->
fõld
); \

636 } 0)

	)

638 
	#TAILQ_INSERT_TAIL
(
hód
, 
ñm
, 
fõld
) do { \

639 
	`QMD_TAILQ_CHECK_TAIL
(
hód
, 
fõld
); \

640 
	`TAILQ_NEXT
((
ñm
), 
fõld
Ë
NULL
; \

641 (
ñm
)->
fõld
.
tqe_¥ev
 = (
hód
)->
tqh_œ°
; \

642 *(
hód
)->
tqh_œ°
 = (
ñm
); \

643 (
hód
)->
tqh_œ°
 = &
	`TAILQ_NEXT
((
ñm
), 
fõld
); \

644 
	`QMD_TRACE_HEAD
(
hód
); \

645 
	`QMD_TRACE_ELEM
(&(
ñm
)->
fõld
); \

646 } 0)

	)

648 
	#TAILQ_LAST
(
hód
, 
hód«me
) \

649 (*(((
hód«me
 *)((
hód
)->
tqh_œ°
))->tqh_œ°))

	)

651 
	#TAILQ_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
tqe_√xt
)

	)

653 
	#TAILQ_PREV
(
ñm
, 
hód«me
, 
fõld
) \

654 (*(((
hód«me
 *)((
ñm
)->
fõld
.
tqe_¥ev
))->
tqh_œ°
))

	)

656 
	#TAILQ_REMOVE
(
hód
, 
ñm
, 
fõld
) do { \

657 
	`QMD_SAVELINK
(
ﬁd√xt
, (
ñm
)->
fõld
.
tqe_√xt
); \

658 
	`QMD_SAVELINK
(
ﬁd¥ev
, (
ñm
)->
fõld
.
tqe_¥ev
); \

659 
	`QMD_TAILQ_CHECK_NEXT
(
ñm
, 
fõld
); \

660 
	`QMD_TAILQ_CHECK_PREV
(
ñm
, 
fõld
); \

661 i‡((
	`TAILQ_NEXT
((
ñm
), 
fõld
)Ë!
NULL
) { \

662 
	`TAILQ_NEXT
((
ñm
), 
fõld
)->fõld.
tqe_¥ev
 = \

663 (
ñm
)->
fõld
.
tqe_¥ev
; \

665 (
hód
)->
tqh_œ°
 = (
ñm
)->
fõld
.
tqe_¥ev
; \

666 
	`QMD_TRACE_HEAD
(
hód
); \

668 *(
ñm
)->
fõld
.
tqe_¥ev
 = 
	`TAILQ_NEXT
((elm), field); \

669 
	`TRASHIT
(*
ﬁd√xt
); \

670 
	`TRASHIT
(*
ﬁd¥ev
); \

671 
	`QMD_TRACE_ELEM
(&(
ñm
)->
fõld
); \

672 } 0)

	)

674 
	#TAILQ_SWAP
(
hód1
, 
hód2
, 
ty≥
, 
fõld
) do { \

675 
ty≥
 *
sw≠_fú°
 = (
hód1
)->
tqh_fú°
; \

676 
ty≥
 **
sw≠_œ°
 = (
hód1
)->
tqh_œ°
; \

677 (
hód1
)->
tqh_fú°
 = (
hód2
)->tqh_first; \

678 (
hód1
)->
tqh_œ°
 = (
hód2
)->tqh_last; \

679 (
hód2
)->
tqh_fú°
 = 
sw≠_fú°
; \

680 (
hód2
)->
tqh_œ°
 = 
sw≠_œ°
; \

681 i‡((
sw≠_fú°
 = (
hód1
)->
tqh_fú°
Ë!
NULL
) \

682 
sw≠_fú°
->
fõld
.
tqe_¥ev
 = &(
hód1
)->
tqh_fú°
; \

684 (
hód1
)->
tqh_œ°
 = &(hód1)->
tqh_fú°
; \

685 i‡((
sw≠_fú°
 = (
hód2
)->
tqh_fú°
Ë!
NULL
) \

686 
sw≠_fú°
->
fõld
.
tqe_¥ev
 = &(
hód2
)->
tqh_fú°
; \

688 (
hód2
)->
tqh_œ°
 = &(hód2)->
tqh_fú°
; \

689 } 0)

	)

694 
	#CIRCLEQ_HEAD
(
«me
, 
ty≥
) \

695 
	s«me
 { \

696 
ty≥
 *
cqh_fú°
; \

697 
ty≥
 *
cqh_œ°
; \

698 }

	)

700 
	#CIRCLEQ_HEAD_INITIALIZER
(
hód
) \

701 { (*)&(
hód
), (*)&(hódË}

	)

703 
	#CIRCLEQ_ENTRY
(
ty≥
) \

705 
ty≥
 *
cqe_√xt
; \

706 
ty≥
 *
cqe_¥ev
; \

707 }

	)

712 
	#CIRCLEQ_EMPTY
(
hód
Ë((hód)->
cqh_fú°
 =(*)(hód))

	)

714 
	#CIRCLEQ_FIRST
(
hód
Ë((hód)->
cqh_fú°
)

	)

716 
	#CIRCLEQ_FOREACH
(
v¨
, 
hód
, 
fõld
) \

717 (
v¨
Ë
	`CIRCLEQ_FIRST
((
hód
)); \

718 (
v¨
Ë!(*)(
hód
Ë|| ((v¨Ë
NULL
); \

719 (
v¨
Ë
	`CIRCLEQ_NEXT
((v¨), 
fõld
))

	)

721 
	#CIRCLEQ_FOREACH_REVERSE
(
v¨
, 
hód
, 
fõld
) \

722 (
v¨
Ë
	`CIRCLEQ_LAST
((
hód
)); \

723 (
v¨
Ë!(*)(
hód
Ë|| ((v¨Ë
NULL
); \

724 (
v¨
Ë
	`CIRCLEQ_PREV
((v¨), 
fõld
))

	)

726 
	#CIRCLEQ_INIT
(
hód
) do { \

727 
	`CIRCLEQ_FIRST
((
hód
)) = (*)(head); \

728 
	`CIRCLEQ_LAST
((
hód
)) = (*)(head); \

729 } 0)

	)

731 
	#CIRCLEQ_INSERT_AFTER
(
hód
, 
li°ñm
, 
ñm
, 
fõld
) do { \

732 
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
ËCIRCLEQ_NEXT((
li°ñm
), field); \

733 
	`CIRCLEQ_PREV
((
ñm
), 
fõld
Ë(
li°ñm
); \

734 i‡(
	`CIRCLEQ_NEXT
((
li°ñm
), 
fõld
Ë=(*)(
hód
)) \

735 
	`CIRCLEQ_LAST
((
hód
)Ë(
ñm
); \

737 
	`CIRCLEQ_PREV
(
	`CIRCLEQ_NEXT
((
li°ñm
), 
fõld
), fõldË(
ñm
); \

738 
	`CIRCLEQ_NEXT
((
li°ñm
), 
fõld
Ë(
ñm
); \

739 } 0)

	)

741 
	#CIRCLEQ_INSERT_BEFORE
(
hód
, 
li°ñm
, 
ñm
, 
fõld
) do { \

742 
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
Ë(
li°ñm
); \

743 
	`CIRCLEQ_PREV
((
ñm
), 
fõld
ËCIRCLEQ_PREV((
li°ñm
), field); \

744 i‡(
	`CIRCLEQ_PREV
((
li°ñm
), 
fõld
Ë=(*)(
hód
)) \

745 
	`CIRCLEQ_FIRST
((
hód
)Ë(
ñm
); \

747 
	`CIRCLEQ_NEXT
(
	`CIRCLEQ_PREV
((
li°ñm
), 
fõld
), fõldË(
ñm
); \

748 
	`CIRCLEQ_PREV
((
li°ñm
), 
fõld
Ë(
ñm
); \

749 } 0)

	)

751 
	#CIRCLEQ_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

752 
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
Ë
	`CIRCLEQ_FIRST
((
hód
)); \

753 
	`CIRCLEQ_PREV
((
ñm
), 
fõld
Ë(*)(
hód
); \

754 i‡(
	`CIRCLEQ_LAST
((
hód
)) == (*)(head)) \

755 
	`CIRCLEQ_LAST
((
hód
)Ë(
ñm
); \

757 
	`CIRCLEQ_PREV
(
	`CIRCLEQ_FIRST
((
hód
)), 
fõld
Ë(
ñm
); \

758 
	`CIRCLEQ_FIRST
((
hód
)Ë(
ñm
); \

759 } 0)

	)

761 
	#CIRCLEQ_INSERT_TAIL
(
hód
, 
ñm
, 
fõld
) do { \

762 
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
Ë(*)(
hód
); \

763 
	`CIRCLEQ_PREV
((
ñm
), 
fõld
Ë
	`CIRCLEQ_LAST
((
hód
)); \

764 i‡(
	`CIRCLEQ_FIRST
((
hód
)) == (*)(head)) \

765 
	`CIRCLEQ_FIRST
((
hód
)Ë(
ñm
); \

767 
	`CIRCLEQ_NEXT
(
	`CIRCLEQ_LAST
((
hód
)), 
fõld
Ë(
ñm
); \

768 
	`CIRCLEQ_LAST
((
hód
)Ë(
ñm
); \

769 } 0)

	)

771 
	#CIRCLEQ_LAST
(
hód
Ë((hód)->
cqh_œ°
)

	)

773 
	#CIRCLEQ_NEXT
(
ñm
,
fõld
Ë(”lm)->fõld.
cqe_√xt
)

	)

775 
	#CIRCLEQ_PREV
(
ñm
,
fõld
Ë(”lm)->fõld.
cqe_¥ev
)

	)

777 
	#CIRCLEQ_REMOVE
(
hód
, 
ñm
, 
fõld
) do { \

778 i‡(
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
Ë=(*)(
hód
)) \

779 
	`CIRCLEQ_LAST
((
hód
)Ë
	`CIRCLEQ_PREV
((
ñm
), 
fõld
); \

781 
	`CIRCLEQ_PREV
(
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
), field) = \

782 
	`CIRCLEQ_PREV
((
ñm
), 
fõld
); \

783 i‡(
	`CIRCLEQ_PREV
((
ñm
), 
fõld
Ë=(*)(
hód
)) \

784 
	`CIRCLEQ_FIRST
((
hód
)Ë
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
); \

786 
	`CIRCLEQ_NEXT
(
	`CIRCLEQ_PREV
((
ñm
), 
fõld
), field) = \

787 
	`CIRCLEQ_NEXT
((
ñm
), 
fõld
); \

788 } 0)

	)

	@mcp_stats.c

19 
	~<°dlib.h
>

20 
	~<Êﬂt.h
>

22 
	~<m˝_c‹e.h
>

23 
	~<m˝_°©s.h
>

26 
	$°©s_rußge_°¨t
(
c⁄ãxt
 *
˘x
)

28 
°©us
;

29 
°©s
 *°©†&
˘x
->stats;

31 
°©us
 = 
	`gërußge
(
RUSAGE_SELF
, &
°©s
->
rußge_°¨t
);

32 i‡(
°©us
 < 0) {

33 
	`log_∑nic
("gërußgêÁûed: %s", 
	`°ªº‹
(
î∫o
));

35 
	}
}

38 
	$°©s_rußge_°›
(
c⁄ãxt
 *
˘x
)

40 
°©us
;

41 
°©s
 *°©†&
˘x
->stats;

43 
°©us
 = 
	`gërußge
(
RUSAGE_SELF
, &
°©s
->
rußge_°›
);

44 i‡(
°©us
 < 0) {

45 
	`log_∑nic
("gërußgêÁûed: %s", 
	`°ªº‹
(
î∫o
));

47 
	}
}

50 
	$°©s_rußge_¥öt
(
c⁄ãxt
 *
˘x
)

52 
›t
 *›à&
˘x
->opt;

53 
°©s
 *°©†&
˘x
->stats;

54 
rußge
 *
°¨t
, *
°›
;

55 
dñè
, 
u£r
, 
sys
;

56 
maxrss
, 
ixrss
, 
idrss
, 
i§ss
;

57 
möÊt
, 
majÊt
;

58 
nsw≠
;

59 
öblock
, 
oublock
;

60 
msg¢d
, 
msgrcv
;

61 
nsig«ls
;

62 
nvcsw
, 
nivcsw
;

64 
dñè
 = 
°©s
->
°›_time
 - sèts->
°¨t_time
;

66 
°¨t
 = &
°©s
->
rußge_°¨t
;

67 
°›
 = &
°©s
->
rußge_°›
;

70 
u£r
 = 
	`TV_TO_SEC
(&
°›
->
ru_utime
Ë- TV_TO_SEC(&
°¨t
->ru_utime);

73 
sys
 = 
	`TV_TO_SEC
(&
°›
->
ru_°ime
Ë- TV_TO_SEC(&
°¨t
->ru_stime);

75 
	`log_°dîr
("CPUÅime [s]: user %.2f system %.2f (user %.1f%% system "

76 "%.1f%%ÅŸÆ %.1f%%)", 
u£r
, 
sys
, 100.0 * u£∏/ 
dñè
,

77 100.0 * 
sys
 / 
dñè
, 100.0 * (
u£r
 + sys) / delta);

79 i‡(!
›t
->
¥öt_rußge
) {

84 
maxrss
 = 
°›
->
ru_maxrss
 - 
°¨t
->ru_maxrss;

90 
ixrss
 = 
°›
->
ru_ixrss
 - 
°¨t
->ru_ixrss;

93 
idrss
 = 
°›
->
ru_idrss
 - 
°¨t
->ru_idrss;

96 
i§ss
 = 
°›
->
ru_i§ss
 - 
°¨t
->ru_isrss;

102 
möÊt
 = 
°›
->
ru_möÊt
 - 
°¨t
->ru_minflt;

105 
majÊt
 = 
°›
->
ru_majÊt
 - 
°¨t
->ru_majflt;

108 
nsw≠
 = 
°›
->
ru_nsw≠
 - 
°¨t
->ru_nswap;

111 
öblock
 = 
°›
->
ru_öblock
 - 
°¨t
->ru_inblock;

114 
oublock
 = 
°›
->
ru_oublock
 - 
°¨t
->ru_oublock;

117 
msg¢d
 = 
°›
->
ru_msg¢d
 - 
°¨t
->ru_msgsnd;

120 
msgrcv
 = 
°›
->
ru_msgrcv
 - 
°¨t
->ru_msgrcv;

123 
nsig«ls
 = 
°›
->
ru_nsig«ls
 - 
°¨t
->ru_nsignals;

130 
nvcsw
 = 
°›
->
ru_nvcsw
 - 
°¨t
->ru_nvcsw;

136 
nivcsw
 = 
°›
->
ru_nivcsw
 - 
°¨t
->ru_nivcsw;

138 
	`log_°dîr
("MaximumÑesidíà£àsizê[KB]: %ld", 
maxrss
);

139 
	`log_°dîr
("Texà£gmíàsh¨ed wôh othîÖro˚s£†[KB-£c]: %ld", 
ixrss
);

140 
	`log_°dîr
("D©®£gmíàu£d [KB-£c]: %ld", 
idrss
);

141 
	`log_°dîr
("Sèck mem‹y u£d [KB-£c]: %ld", 
i§ss
);

142 
	`log_°dîr
("Numbî o‡so·ÖagêÁu…s: %ld", 
möÊt
);

143 
	`log_°dîr
("Numbî o‡h¨dÖagêÁu…s: %ld", 
majÊt
);

144 
	`log_°dîr
("Numbî o‡time†¥o˚s†wa†sw≠≥d ouào‡physiˇ»mem‹y: %ld", 
nsw≠
);

145 
	`log_°dîr
("Numbî o‡öpuà›î©i⁄†vü fûêsy°em: %ld", 
öblock
);

146 
	`log_°dîr
("Numbî o‡ouçuà›î©i⁄†vü fûêsy°em: %ld", 
oublock
);

147 
	`log_°dîr
("Numbî o‡IPC mesßge†£¡: %ld", 
msg¢d
);

148 
	`log_°dîr
("Numbî o‡IPC mesßge†ª˚ived: %ld", 
msgrcv
);

149 
	`log_°dîr
("Numbî o‡sig«l†dñivîed: %ld", 
nsig«ls
);

150 
	`log_°dîr
("Numbî o‡vﬁu¡¨y c⁄ãxàswôches: %ld", 
nvcsw
);

151 
	`log_°dîr
("Numbî o‡övﬁu¡¨y c⁄ãxàswôches: %ld", 
nivcsw
);

152 
	}
}

155 
	$°©s_öô
(
c⁄ãxt
 *
˘x
)

157 
°©s
 *°©†&
˘x
->stats;

158 
uöt32_t
 
i
;

160 
	`mem£t
(&
°©s
->
rußge_°¨t
, 0, (stats->rusage_start));

161 
	`mem£t
(&
°©s
->
rußge_°›
, 0, (stats->rusage_stop));

163 
°©s
->
°¨t_time
 = 0.0;

164 
°©s
->
°›_time
 = 0.0;

166 
°©s
->
nc⁄n_¸óãd
 = 0;

167 
°©s
->
nc⁄n_de°royed
 = 0;

169 
°©s
->
nc⁄n_a˘ive
 = 0;

170 
°©s
->
nc⁄n_a˘ive_max
 = 0;

172 
°©s
->
nc⁄√˘_issued
 = 0;

173 
°©s
->
nc⁄√˘
 = 0;

174 
°©s
->
c⁄√˘_sum
 = 0.0;

175 
°©s
->
c⁄√˘_sum2
 = 0.0;

176 
°©s
->
c⁄√˘_mö
 = 
DBL_MAX
;

177 
°©s
->
c⁄√˘_max
 = 0.0;

178 
°©s
->
c⁄√˘i⁄_sum
 = 0.0;

179 
°©s
->
c⁄√˘i⁄_sum2
 = 0.0;

180 
°©s
->
c⁄√˘i⁄_mö
 = 
DBL_MAX
;

181 
°©s
->
c⁄√˘i⁄_max
 = 0.0;

183 
°©s
->
n˛õ¡_timeout
 = 0;

184 
°©s
->
nsock_fdu«vaû
 = 0;

185 
°©s
->
nsock_·abfuŒ
 = 0;

186 
°©s
->
nsock_addru«vaû
 = 0;

187 
°©s
->
nsock_ªfu£d
 = 0;

188 
°©s
->
nsock_ª£t
 = 0;

189 
°©s
->
nsock_timedout
 = 0;

190 
°©s
->
nsock_Ÿhî_îr‹
 = 0;

192 
°©s
->
ƒeq
 = 0;

193 
°©s
->
ªq_byãs_£¡
 = 0.0;

194 
°©s
->
ªq_byãs_£¡2
 = 0.0;

195 
°©s
->
ªq_byãs_£¡_mö
 = 
DBL_MAX
;

196 
°©s
->
ªq_byãs_£¡_max
 = 0.0;

198 
°©s
->
ªq_x„r_sum
 = 0.0;

199 
°©s
->
ªq_x„r_sum2
 = 0.0;

200 
°©s
->
ªq_x„r_mö
 = 
DBL_MAX
;

201 
°©s
->
ªq_x„r_max
 = 0.0;

203 
°©s
->
ªq_r•_sum
 = 0.0;

204 
°©s
->
ªq_r•_sum2
 = 0.0;

205 
°©s
->
ªq_r•_mö
 = 
DBL_MAX
;

206 
°©s
->
ªq_r•_max
 = 0.0;

207 
i
 = 0; i < 
HIST_NUM_BINS
; i++) {

208 
°©s
->
ªq_r•_hi°
[
i
] = 0;

211 
°©s
->
ƒ•
 = 0;

212 
°©s
->
r•_byãs_rcvd
 = 0.0;

213 
°©s
->
r•_byãs_rcvd2
 = 0.0;

214 
°©s
->
r•_byãs_rcvd_mö
 = 
DBL_MAX
;

215 
°©s
->
r•_byãs_rcvd_max
 = 0.0;

217 
°©s
->
r•_x„r_sum
 = 0.0;

218 
°©s
->
r•_x„r_sum2
 = 0.0;

219 
°©s
->
r•_x„r_mö
 = 
DBL_MAX
;

220 
°©s
->
r•_x„r_max
 = 0.0;

222 
i
 = 0; i < 
RSP_MAX_TYPES
; i++) {

223 
°©s
->
r•_ty≥
[
i
] = 0;

225 
	}
}

228 
	$°©s_°¨t
(
c⁄ãxt
 *
˘x
)

230 
°©s
 *°©†&
˘x
->stats;

232 
	`°©s_rußge_°¨t
(
˘x
);

233 
°©s
->
°¨t_time
 = 
	`timî_now
();

234 
	}
}

237 
	$°©s_°›
(
c⁄ãxt
 *
˘x
)

239 
°©s
 *°©†&
˘x
->stats;

241 
	`°©s_rußge_°›
(
˘x
);

242 
°©s
->
°›_time
 = 
	`timî_now
();

243 
	}
}

246 
	$°©s_dump
(
c⁄ãxt
 *
˘x
)

248 
›t
 *›à&
˘x
->opt;

249 
°©s
 *°©†&
˘x
->stats;

250 
c⁄n_≥riod
, 
c⁄n_øã
;

251 
c⁄n_avg
, 
c⁄n_mö
, 
c⁄n_max
, 
c⁄n_°ddev
;

252 
c⁄√˘i⁄_avg
, 
c⁄√˘i⁄_mö
, 
c⁄√˘i⁄_max
, 
c⁄√˘i⁄_°ddev
;

253 
ªq_øã
, 
ªq_≥riod
;

254 
ªq_size_avg
, 
ªq_size_mö
, 
ªq_size_max
, 
ªq_size_°ddev
;

255 
r•_øã
, 
r•_≥riod
;

256 
r•_size_avg
, 
r•_size_mö
, 
r•_size_max
, 
r•_size_°ddev
;

257 
ªq_r•_avg
, 
ªq_r•_mö
, 
ªq_r•_max
, 
ªq_r•_°ddev
;

258 
ªq_r•_p25
 = 0.0, 
ªq_r•_p50
 = 0.0, 
ªq_r•_p75
 = 0.0;

259 
ªq_r•_p95
 = 0.0, 
ªq_r•_p99
 = 0.0, 
ªq_r•_p999
 = 0.0;

260 
tŸÆ_size
, 
tŸÆ_øã
;

261 
dñè
;

262 
bö_time
;

263 
uöt32_t
 
i
, 
√º‹
;

264 
n
;

267 
	`°©s_°›
(
˘x
);

269 
	`ASSERT
(
°©s
->
°›_time
 > sèts->
°¨t_time
);

271 
dñè
 = 
°©s
->
°›_time
 - sèts->
°¨t_time
;

280 
	`log_°dîr
("");

281 
	`log_°dîr
("TŸÆ: c⁄√˘i⁄†%"
PRIu32
"Ñequests %"PRIu32"Ñesponses "

282 "%"
PRIu32
"Åe°-duøti⁄ %.3‡s", 
°©s
->
nc⁄√˘_issued
,

283 
°©s
->
ƒeq
, sèts->
ƒ•
, 
dñè
);

293 i‡(
°©s
->
nc⁄√˘_issued
 != 0) {

294 
	`log_°dîr
("");

296 
c⁄n_≥riod
 = 
dñè
 / 
°©s
->
nc⁄√˘_issued
;

297 
c⁄n_øã
 = 
°©s
->
nc⁄√˘_issued
 / 
dñè
;

299 
	`log_°dîr
("C⁄√˘i⁄Ñ©e: %.1‡c⁄n/†(%.1‡ms/c⁄¿<%"
PRIu32
" "

300 "c⁄cuºíàc⁄√˘i⁄s)", 
c⁄n_øã
, 1e3 * 
c⁄n_≥riod
,

301 
°©s
->
nc⁄n_a˘ive_max
);

303 
c⁄√˘i⁄_avg
 = 
°©s
->
c⁄√˘i⁄_sum
 / sèts->
nc⁄√˘
;

304 
c⁄√˘i⁄_mö
 = 
°©s
->connection_min;

305 
c⁄√˘i⁄_max
 = 
°©s
->connection_max;

306 
c⁄√˘i⁄_°ddev
 = 
	`STDDEV
(
°©s
->
c⁄√˘i⁄_sum
, sèts->
c⁄√˘i⁄_sum2
,

307 
°©s
->
nc⁄√˘
);

308 
	`log_°dîr
("ConnectionÅime [ms]:ávg %.1f min %.1f max %.1f stddev "

309 "%.2f", 1e3 * 
c⁄√˘i⁄_avg
, 1e3 * 
c⁄√˘i⁄_mö
,

310 1e3 * 
c⁄√˘i⁄_max
, 1e3 * 
c⁄√˘i⁄_°ddev
);

312 
c⁄n_avg
 = 
°©s
->
c⁄√˘_sum
 / sèts->
nc⁄√˘
;

313 
c⁄n_mö
 = 
°©s
->
c⁄√˘_mö
;

314 
c⁄n_max
 = 
°©s
->
c⁄√˘_max
;

315 
c⁄n_°ddev
 = 
	`STDDEV
(
°©s
->
c⁄√˘_sum
, sèts->
c⁄√˘_sum2
,

316 
°©s
->
nc⁄√˘
);

317 
	`log_°dîr
("ConnectÅime [ms]:ávg %.1f min %.1f max %.1f "

318 "°ddev %.2f", 1e3 * 
c⁄n_avg
, 1e3 * 
c⁄n_mö
,

319 1e3 * 
c⁄n_max
, 1e3 * 
c⁄n_°ddev
);

327 i‡(
°©s
->
ƒeq
 != 0) {

328 
	`log_°dîr
("");

330 
ªq_≥riod
 = 
dñè
 / 
°©s
->
ƒeq
;

331 
ªq_øã
 = 
°©s
->
ƒeq
 / 
dñè
;

333 
	`log_°dîr
("Reque°Ñ©e: %.1‡ªq/†(%.1‡ms/ªq)", 
ªq_øã
,

334 1e3 * 
ªq_≥riod
);

336 
ªq_size_mö
 = 
°©s
->
ªq_byãs_£¡_mö
;

337 
ªq_size_avg
 = 
°©s
->
ªq_byãs_£¡
 / sèts->
ƒeq
;

338 
ªq_size_max
 = 
°©s
->
ªq_byãs_£¡_max
;

339 
ªq_size_°ddev
 = 
	`STDDEV
(
°©s
->
ªq_byãs_£¡
, sèts->
ªq_byãs_£¡2
,

340 
°©s
->
ƒeq
);

342 
	`log_°dîr
("Request size [B]:ávg %.1f min %.1f max %.1f stddev %.2f",

343 
ªq_size_avg
, 
ªq_size_mö
, 
ªq_size_max
, 
ªq_size_°ddev
);

353 i‡(
°©s
->
ƒ•
 != 0) {

354 
	`log_°dîr
("");

356 
r•_≥riod
 = 
dñè
 / 
°©s
->
ƒ•
;

357 
r•_øã
 = 
°©s
->
ƒ•
 / 
dñè
;

359 
	`log_°dîr
("Re•⁄£Ñ©e: %.1‡r•/†(%.1‡ms/r•)", 
r•_øã
,

360 1e3 * 
r•_≥riod
);

362 
r•_size_mö
 = 
°©s
->
r•_byãs_rcvd_mö
;

363 
r•_size_avg
 = 
°©s
->
r•_byãs_rcvd
 / sèts->
ƒ•
;

364 
r•_size_max
 = 
°©s
->
r•_byãs_rcvd_max
;

365 
r•_size_°ddev
 = 
	`STDDEV
(
°©s
->
r•_byãs_rcvd
, sèts->
r•_byãs_rcvd2
,

366 
°©s
->
ƒ•
);

368 
	`log_°dîr
("Response size [B]:ávg %.1f min %.1f max %.1f stddev %.2f",

369 
r•_size_avg
, 
r•_size_mö
, 
r•_size_max
, 
r•_size_°ddev
);

371 
ªq_r•_avg
 = 
°©s
->
ªq_r•_sum
 / sèts->
ƒ•
;

372 
ªq_r•_mö
 = 
°©s
->req_rsp_min;

373 
ªq_r•_max
 = 
°©s
->req_rsp_max;

374 
ªq_r•_°ddev
 = 
	`STDDEV
(
°©s
->
ªq_r•_sum
, sèts->
ªq_r•_sum2
,

375 
°©s
->
ƒ•
);

377 
	`log_°dîr
("ResponseÅime [ms]:ávg %.1f min %.1f max %.1f stddev %.2f",

378 1e3 * 
ªq_r•_avg
, 1e3 * 
ªq_r•_mö
, 1e3 * 
ªq_r•_max
,

379 
ªq_r•_°ddev
);

381 i‡(
›t
->
¥öt_hi°ogøm
) {

382 
	`log_°dîr
("ResponseÅime histogram [ms]:");

384 
i
 = 0; i < 
HIST_NUM_BINS
; i++) {

385 i‡(
°©s
->
ªq_r•_hi°
[
i
] == 0) {

388 i‡(
i
 > 0 && 
°©s
->
ªq_r•_hi°
[i - 1] == 0) {

389 
	`log_°dîr
("%14c", ':');

391 
bö_time
 = 
i
 * 
HIST_BIN_WIDTH
;

392 
	`log_°dîr
("%16.1‡%u", 1e3 * 
bö_time
, 
°©s
->
ªq_r•_hi°
[
i
]);

394 i‡(
°©s
->
ªq_r•_hi°
[
i
 - 1] == 0) {

395 
	`log_°dîr
("%14c", ':');

399 
i
 = 0, 
n
 = 0; i < 
HIST_NUM_BINS
; i++) {

400 
n
 +
°©s
->
ªq_r•_hi°
[
i
];

402 i‡(
ªq_r•_p25
 =0.0 && 
n
 >
	`Ãöt
(0.25 * 
°©s
->
ƒ•
)) {

403 
ªq_r•_p25
 = 
i
 * 
HIST_BIN_WIDTH
;

406 i‡(
ªq_r•_p50
 =0.0 && 
n
 >
	`Ãöt
(0.50 * 
°©s
->
ƒ•
)) {

407 
ªq_r•_p50
 = 
i
 * 
HIST_BIN_WIDTH
;

410 i‡(
ªq_r•_p75
 =0.0 && 
n
 >
	`Ãöt
(0.70 * 
°©s
->
ƒ•
)) {

411 
ªq_r•_p75
 = 
i
 * 
HIST_BIN_WIDTH
;

414 i‡(
ªq_r•_p95
 =0.0 && 
n
 >
	`Ãöt
(0.95 * 
°©s
->
ƒ•
)) {

415 
ªq_r•_p95
 = 
i
 * 
HIST_BIN_WIDTH
;

418 i‡(
ªq_r•_p99
 =0.0 && 
n
 >
	`Ãöt
(0.99 * 
°©s
->
ƒ•
)) {

419 
ªq_r•_p99
 = 
i
 * 
HIST_BIN_WIDTH
;

422 i‡(
ªq_r•_p999
 =0.0 && 
n
 >
	`Ãöt
(0.999 * 
°©s
->
ƒ•
)) {

423 
ªq_r•_p999
 = 
i
 * 
HIST_BIN_WIDTH
;

427 
	`log_°dîr
("ResponseÅime [ms]:Ö25 %.1fÖ50 %.1fÖ75 %.1f",

428 1e3 * 
ªq_r•_p25
, 1e3 * 
ªq_r•_p50
, 1e3 * 
ªq_r•_p75
);

430 
	`log_°dîr
("ResponseÅime [ms]:Ö95 %.1fÖ99 %.1fÖ999 %.1f",

431 1e3 * 
ªq_r•_p95
, 1e3 * 
ªq_r•_p99
, 1e3 * 
ªq_r•_p999
);

433 
	`log_°dîr
("Re•⁄£Åy≥: st‹ed %"
PRIu32
"Çot_stored %"PRIu32" "

434 "exi°†%"
PRIu32
"Çot_found %"PRIu32"",

435 
°©s
->
r•_ty≥
[
RSP_STORED
], sèts->r•_ty≥[
RSP_NOT_STORED
],

436 
°©s
->
r•_ty≥
[
RSP_EXISTS
], sèts->r•_ty≥[
RSP_NOT_FOUND
]);

438 
	`log_°dîr
("Re•⁄£Åy≥:Çum %"
PRIu32
" deleted %"PRIu32"Énd %"PRIu32

439 " vÆuê%"
PRIu32
"", 
°©s
->
r•_ty≥
[
RSP_NUM
],

440 
°©s
->
r•_ty≥
[
RSP_DELETED
], sèts->r•_ty≥[
RSP_END
],

441 
°©s
->
r•_ty≥
[
RSP_VALUE
]);

443 
	`log_°dîr
("Re•⁄£Åy≥:Éº‹ %"
PRIu32
" client_error %"PRIu32" "

444 "£rvî_îr‹ %"
PRIu32
"", 
°©s
->
r•_ty≥
[
RSP_ERROR
],

445 
°©s
->
r•_ty≥
[
RSP_CLIENT_ERROR
],

446 
°©s
->
r•_ty≥
[
RSP_SERVER_ERROR
]);

452 
	`log_°dîr
("");

454 
√º‹
 = 
°©s
->
n˛õ¡_timeout
 + sèts->
nsock_fdu«vaû
 +

455 
°©s
->
nsock_·abfuŒ
 + sèts->
nsock_addru«vaû
 +

456 
°©s
->
nsock_ªfu£d
 + sèts->
nsock_ª£t
 +

457 
°©s
->
nsock_timedout
 + sèts->
nsock_Ÿhî_îr‹
;

459 
	`log_°dîr
("Eº‹s:ÅŸÆ %"
PRIu32
" client-timo %"PRIu32" "

460 "sockë-timÿ%"
PRIu32
" connrefused %"PRIu32" "

461 "c⁄ƒe£à%"
PRIu32
"", 
√º‹
, 
°©s
->
n˛õ¡_timeout
,

462 
°©s
->
nsock_timedout
, sèts->
nsock_ªfu£d
,

463 
°©s
->
nsock_ª£t
);

465 
	`log_°dîr
("Eº‹s: fd-u«vaû %"
PRIu32
" ftab-full %"PRIu32" "

466 "addru«vaû %"
PRIu32
" other %"PRIu32"",

467 
°©s
->
nsock_fdu«vaû
, sèts->
nsock_·abfuŒ
,

468 
°©s
->
nsock_addru«vaû
, sèts->
nsock_Ÿhî_îr‹
);

475 
	`log_°dîr
("");

477 
	`°©s_rußge_¥öt
(
˘x
);

479 i‡(
°©s
->
ƒeq
 + sèts->
ƒ•
 != 0) {

480 
tŸÆ
;

481 *
mëric
;

483 
tŸÆ_size
 = 
°©s
->
ªq_byãs_£¡
 + sèts->
r•_byãs_rcvd
;

484 
tŸÆ_øã
 = 
tŸÆ_size
 / 
dñè
;

486 i‡(
tŸÆ_size
 <
KB
) {

487 
tŸÆ
 = 
tŸÆ_size
;

488 
mëric
 = "B";

489 } i‡(
tŸÆ_size
 <
MB
) {

490 
tŸÆ
 = 
tŸÆ_size
 / 
KB
;

491 
mëric
 = "KB";

492 } i‡(
tŸÆ_size
 <
GB
) {

493 
tŸÆ
 = 
tŸÆ_size
 / 
MB
;

494 
mëric
 = "MB";

496 
tŸÆ
 = 
tŸÆ_size
 / 
GB
;

497 
mëric
 = "GB";

500 
	`log_°dîr
("Net I/O: bytes %.1f %sÑate %.1f KB/s (%.1f*10^6 bps)",

501 
tŸÆ
, 
mëric
, 
tŸÆ_øã
 / 1024.0,

502 8e-6 * 
tŸÆ_size
 / 
dñè
);

505 
	`log_°dîr
("");

507 
	`exô
(0);

508 
	}
}

	@mcp_stats.h

19 #i‚de‡
_MCP_STATS_H_


20 
	#_MCP_STATS_H_


	)

22 
	~<sys/ªsour˚.h
>

24 
	#HIST_MAX_TIME
 100

	)

25 
	#HIST_BIN_WIDTH
 1e-3

	)

26 
	#HIST_NUM_BINS
 (
HIST_MAX_TIME
 * 1000Ë

	)

28 
	s°©s
 {

29 
rußge
 
	mrußge_°¨t
;

30 
rußge
 
	mrußge_°›
;

32 
	m°¨t_time
;

33 
	m°›_time
;

35 
uöt32_t
 
	mnc⁄n_¸óãd
;

36 
uöt32_t
 
	mnc⁄n_de°royed
;

38 
uöt32_t
 
	mnc⁄n_a˘ive
;

39 
uöt32_t
 
	mnc⁄n_a˘ive_max
;

41 
uöt32_t
 
	mnc⁄√˘_issued
;

42 
uöt32_t
 
	mnc⁄√˘
;

43 
	mc⁄√˘_sum
;

44 
	mc⁄√˘_sum2
;

45 
	mc⁄√˘_mö
;

46 
	mc⁄√˘_max
;

47 
	mc⁄√˘i⁄_sum
;

48 
	mc⁄√˘i⁄_sum2
;

49 
	mc⁄√˘i⁄_mö
;

50 
	mc⁄√˘i⁄_max
;

52 
uöt32_t
 
	mn˛õ¡_timeout
;

53 
uöt32_t
 
	mnsock_fdu«vaû
;

54 
uöt32_t
 
	mnsock_·abfuŒ
;

55 
uöt32_t
 
	mnsock_addru«vaû
;

56 
uöt32_t
 
	mnsock_ªfu£d
;

57 
uöt32_t
 
	mnsock_ª£t
;

58 
uöt32_t
 
	mnsock_timedout
;

59 
uöt32_t
 
	mnsock_Ÿhî_îr‹
;

61 
uöt32_t
 
	mƒeq
;

62 
	mªq_byãs_£¡
;

63 
	mªq_byãs_£¡2
;

64 
	mªq_byãs_£¡_mö
;

65 
	mªq_byãs_£¡_max
;

67 
	mªq_x„r_sum
;

68 
	mªq_x„r_sum2
;

69 
	mªq_x„r_mö
;

70 
	mªq_x„r_max
;

72 
	mªq_r•_sum
;

73 
	mªq_r•_sum2
;

74 
	mªq_r•_mö
;

75 
	mªq_r•_max
;

76 
	mªq_r•_hi°
[
HIST_NUM_BINS
];

78 
uöt32_t
 
	mƒ•
;

79 
	mr•_byãs_rcvd
;

80 
	mr•_byãs_rcvd2
;

81 
	mr•_byãs_rcvd_mö
;

82 
	mr•_byãs_rcvd_max
;

84 
	mr•_x„r_sum
;

85 
	mr•_x„r_sum2
;

86 
	mr•_x„r_mö
;

87 
	mr•_x„r_max
;

89 
uöt32_t
 
	mr•_ty≥
[
RSP_MAX_TYPES
];

92 
°©s_öô
(
c⁄ãxt
 *
˘x
);

93 
°©s_°¨t
(
c⁄ãxt
 *
˘x
);

94 
°©s_°›
(
c⁄ãxt
 *
˘x
);

95 
°©s_dump
(
c⁄ãxt
 *
˘x
);

	@mcp_timer.c

19 
	~<sys/time.h
>

21 
	~<m˝_c‹e.h
>

30 
timîhdr
 
	gwhìl
[
TIMER_WHEEL_SIZE
];

31 
uöt32_t
 
	gwidx
;

33 
uöt32_t
 
	gn‰ì_timîq
;

34 
timîhdr
 
	g‰ì_timîq
;

36 
	gnow
;

37 
	g√xt_tick
;

39 
uöt64_t
 
	gid
;

41 
timî
 *

42 
	$timî_gë
()

44 
timî
 *
t
;

46 i‡(!
	`LIST_EMPTY
(&
‰ì_timîq
)) {

47 
	`ASSERT
(
n‰ì_timîq
 > 0);

49 
t
 = 
	`LIST_FIRST
(&
‰ì_timîq
);

50 
n‰ì_timîq
--;

51 
	`LIST_REMOVE
(
t
, 
ée
);

53 
t
 = 
	`m˝_Æloc
((*t));

54 i‡(
t
 =
NULL
) {

55  
NULL
;

58 
t
->
id
 = ++id;

59 
t
->
dñè
 = 0;

60 
t
->
timeout
 = 
NULL
;

61 
t
->
¨g
 = 
NULL
;

63 
	`log_debug
(
LOG_VERB
, "gëÅimî %∞id %"
PRIu64
"", 
t
,Å->
id
);

65  
t
;

66 
	}
}

69 
	$timî_put
(
timî
 *
t
)

71 
	`log_debug
(
LOG_VERB
, "puàtimî %∞id %"
PRIu64
"", 
t
,Å->
id
);

73 
	`LIST_INSERT_HEAD
(&
‰ì_timîq
, 
t
, 
ée
);

74 
n‰ì_timîq
++;

75 
	}
}

78 
	$timî_now_upd©e
()

80 
°©us
;

81 
timevÆ
 
tv
;

83 
°©us
 = 
	`gëtimeofday
(&
tv
, 
NULL
);

84 i‡(
°©us
 < 0) {

85 
	`log_∑nic
("gëtimeofday faûed: %s", 
	`°ªº‹
(
î∫o
));

88 
now
 = 
	`TV_TO_SEC
(&
tv
);

89 
	}
}

92 
	$timî_now
()

94  
now
;

95 
	}
}

98 
	$timî_öô
()

100 
uöt32_t
 
i
;

102 
i
 = 0; i < 
TIMER_WHEEL_SIZE
; i++) {

103 
	`LIST_INIT
(&
whìl
[
i
]);

105 
widx
 = 0;

107 
n‰ì_timîq
 = 0;

108 
	`LIST_INIT
(&
‰ì_timîq
);

110 
	`timî_now_upd©e
();

112 
√xt_tick
 = 
	`timî_now
(Ë+ 
TIMER_INTERVAL
;

113 
	}
}

116 
	$timî_deöô
()

118 
	}
}

121 
	$timî_tick
()

123 
timî
 *
t
, *
t_√xt
;

125 
	`timî_now_upd©e
();

127 
	`timî_now
(Ë>
√xt_tick
) {

130 
t
 = 
	`LIST_FIRST
(&
whìl
[
widx
]);Å !
NULL
 &&Å->
dñè
 == 0;

131 
t
 = 
t_√xt
) {

132 
t_√xt
 = 
	`LIST_NEXT
(
t
, 
ée
);

134 
	`log_debug
(
LOG_DEBUG
, "fúêtimî %"
PRIu64
" '%s'", 
t
->
id
,Å->
«me
);

136 (
t
->
timeout
)—,Å->
¨g
);

138 
	`LIST_REMOVE
(
t
, 
ée
);

140 
	`timî_put
(
t
);

143 i‡(
t
 !
NULL
) {

144 
t
->
dñè
--;

145 
	`log_debug
(
LOG_DEBUG
, "de¸emítögÅimî %"
PRIu64
" '%s' deltaÅo "

146 "%"
PRIu64
"", 
t
->
id
,Å->
«me
,Å->
dñè
);

149 
√xt_tick
 +
TIMER_INTERVAL
;

150 
widx
 = (widx + 1Ë% 
TIMER_WHEEL_SIZE
;

152 
	}
}

154 
timî
 *

155 
	$_timî_scheduÀ
(
timeout_t
 
timeout
, *
¨g
, 
dñay
, *
«me
)

157 
timîhdr
 *
•oke
;

158 
uöt32_t
 
sidx
;

159 
timî
 *
t
, *
t_√w
;

160 
uöt64_t
 
ticks
, 
dñè
;

161 
behöd
;

163 
t_√w
 = 
	`timî_gë
();

164 i‡(
t_√w
 =
NULL
) {

165  
NULL
;

167 
t_√w
->
timeout
 =Åimeout;

168 
t_√w
->
¨g
 =árg;

169 
t_√w
->
«me
 =Çame;

171 
behöd
 = (
	`timî_now
(Ë- 
√xt_tick
);

172 i‡(
behöd
 > 0.0) {

173 
dñay
 +
behöd
;

177 
ticks
 = (
uöt64_t
)((
dñay
 + (
TIMER_INTERVAL
 / 2.0)Ë* 
TIMER_TICKS_SEC
);

178 i‡(
ticks
 == 0) {

179 
ticks
 = 1;

183 
sidx
 = (
widx
 + 
ticks
Ë% 
TIMER_WHEEL_SIZE
;

184 
•oke
 = &
whìl
[
sidx
];

187 
dñè
 = 
ticks
 / 
TIMER_WHEEL_SIZE
;

189 
t
 = 
	`LIST_FIRST
(
•oke
);Å !
NULL
 && 
dñè
 >Å->delta;

190 
t
 = 
	`LIST_NEXT
—, 
ée
)) {

191 
dñè
 -
t
->delta;

194 
t_√w
->
dñè
 = delta;

196 i‡(
t
 =
NULL
) {

197 
	`LIST_INSERT_HEAD
(
•oke
, 
t_√w
, 
ée
);

199 
	`LIST_INSERT_AFTER
(
t
, 
t_√w
, 
ée
);

202 i‡(
	`LIST_NEXT
(
t_√w
, 
ée
Ë!
NULL
) {

203 
	`LIST_NEXT
(
t_√w
, 
ée
)->
dñè
 -= delta;

206 
	`log_debug
(
LOG_DEBUG
, "scheduÀÅimî %"
PRIu64
" '%s'Åo fireáfter %g s, "

207 "%"
PRIu64
"Åick†™d %"PRIu64"Ñounds", 
t_√w
->
id
,Å_√w->
«me
,

208 
dñay
, 
ticks
, 
t_√w
->
dñè
);

210  
t_√w
;

211 
	}
}

214 
	$_timî_ˇn˚l
(
timî
 *
t
)

216 
timî
 *
t_√xt
;

218 
	`log_debug
(
LOG_DEBUG
, "ˇn˚»timî %"
PRIu64
" '%s'", 
t
->
id
,Å->
«me
);

220 
t_√xt
 = 
	`LIST_NEXT
(
t
, 
ée
);

221 i‡(
t_√xt
 !
NULL
) {

222 
t_√xt
->
dñè
 +
t
->delta;

225 
	`LIST_REMOVE
(
t
, 
ée
);

227 
	`timî_put
(
t
);

228 
	}
}

	@mcp_timer.h

19 #i‚de‡
_MCP_TIMER_H_


20 
	#_MCP_TIMER_H_


	)

29 
	#TIMER_INTERVAL
 (1.0 / 1000Ë

	)

30 
	#TIMER_TICKS_SEC
 (1.0 / 
TIMER_INTERVAL
Ë

	)

32 
	#TIMER_WHEEL_SIZE
 4096

	)

34 
	gtimî
;

36 (*
	ttimeout_t
)(
	ttimî
 *
	tt
, *
	t¨g
);

38 
	stimî
 {

39 
uöt64_t
 
id
;

40 
	`LIST_ENTRY
(
timî
Ë
ée
;

41 
uöt64_t
 
dñè
;

42 
timeout_t
 
timeout
;

43 *
¨g
;

44 *
«me
;

47 
	`LIST_HEAD
(
timîhdr
, 
timî
);

49 
	`timî_öô
();

50 
	`timî_deöô
();

52 
	`timî_now
();

53 
	`timî_tick
();

55 
	#timî_scheduÀ
(
_timeout
, 
_¨g
, 
_dñay
) \

56 
	`_timî_scheduÀ
(
_timeout
, 
_¨g
, 
_dñay
, #_timeout)

	)

58 
	#timî_ˇn˚l
(
_timî
) do { \

59 
	`_timî_ˇn˚l
(
_timî
); \

60 
_timî
 = 
NULL
; \

61 
	}
} 0)

	)

63 
timî
 *
_timî_scheduÀ
(
timeout_t
 
timeout
, *
¨g
, 
dñay
, *
«me
);

64 
_timî_ˇn˚l
(
timî
 *
t
);

	@mcp_util.c

19 
	~<°dio.h
>

20 
	~<°dlib.h
>

21 
	~<°d¨g.h
>

22 
	~<°rög.h
>

23 
	~<uni°d.h
>

24 
	~<f˙é.h
>

25 
	~<execöfo.h
>

26 
	~<î∫o.h
>

27 
	~<√tdb.h
>

29 
	~<sys/time.h
>

30 
	~<sys/ty≥s.h
>

31 
	~<sys/sockë.h
>

32 
	~<sys/io˘l.h
>

34 
	~<√töë/ö.h
>

35 
	~<√töë/t˝.h
>

37 
	~<m˝_c‹e.h
>

38 
	~<m˝_utû.h
>

39 
	~<m˝_log.h
>

42 
	$m˝_ªsﬁve_addr_öë
(*
«me
, 
p‹t
, 
socköfo
 *
si
)

44 
°©us
;

45 
addröfo
 *
ai
, *
ˇi
;

46 
addröfo
 
höts
;

47 *
node
, 
node°r
[
MCP_INET_ADDRSTRLEN
], 
£rvi˚
[
MCP_UINTMAX_MAXLEN
];

48 
boﬁ
 
found
;

50 
	`ASSERT
(
	`m˝_vÆid_p‹t
(
p‹t
));

52 
	`mem£t
(&
höts
, 0, (hints));

53 
höts
.
ai_Êags
 = 
AI_NUMERICSERV
;

54 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

55 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

56 
höts
.
ai_¥Ÿocﬁ
 = 0;

57 
höts
.
ai_addæí
 = 0;

58 
höts
.
ai_addr
 = 
NULL
;

59 
höts
.
ai_ˇn⁄«me
 = 
NULL
;

61 i‡(
«me
 !
NULL
) {

62 
uöt32_t
 
nodñí
 = 
	`MIN
(
MCP_INET_ADDRSTRLEN
 - 1, 
	`m˝_°æí
(
«me
));

63 
	`m˝_mem˝y
(
node°r
, 
«me
, 
nodñí
);

64 
node°r
[
nodñí
] = '\0';

65 
node
 = 
node°r
;

73 
node
 = 
NULL
;

74 
höts
.
ai_Êags
 |
AI_PASSIVE
;

77 
	`m˝_¢¥ötf
(
£rvi˚
, 
MCP_UINTMAX_MAXLEN
, "%d", 
p‹t
);

79 
°©us
 = 
	`gëaddröfo
(
node
, 
£rvi˚
, &
höts
, &
ai
);

80 i‡(
°©us
 < 0) {

81 
	`log_îr‹
("addressÑesolution ofÇode '%s' service '%s' failed: %s",

82 
node
, 
£rvi˚
, 
	`gai_°ªº‹
(
°©us
));

97 
ˇi
 = 
ai
, 
found
 = 
Ál£
; caò!
NULL
; caòˇi->
ai_√xt
) {

98 
si
->
Ámûy
 = 
ˇi
->
ai_Ámûy
;

99 
si
->
addæí
 = 
ˇi
->
ai_addæí
;

100 
	`m˝_mem˝y
(&
si
->
addr
, 
ˇi
->
ai_addr
, si->
addæí
);

101 
found
 = 
åue
;

105 
	`‰ìaddröfo
(
ai
);

107  !
found
 ? -1 : 0;

108 
	}
}

111 
	$m˝_ªsﬁve_addr_unix
(*
«me
, 
socköfo
 *
si
)

113 
sockaddr_un
 *
un
;

114 
uöt32_t
 
«mñí
 = 
	`m˝_°æí
(
«me
);

116 i‡(
«mñí
 >
MCP_UNIX_ADDRSTRLEN
) {

120 
un
 = &
si
->
addr
.un;

122 
un
->
sun_Ámûy
 = 
AF_UNIX
;

123 
	`m˝_mem˝y
(
un
->
sun_∑th
, 
«me
, 
«mñí
);

124 
un
->
sun_∑th
[
«mñí
] = '\0';

126 
si
->
Ámûy
 = 
AF_UNIX
;

127 
si
->
addæí
 = (*
un
);

131 
	}
}

140 
	$m˝_ªsﬁve_addr
(*
«me
, 
p‹t
, 
socköfo
 *
si
)

142 i‡(
«me
 !
NULL
 &&Çame[0] == '/') {

143  
	`m˝_ªsﬁve_addr_unix
(
«me
, 
si
);

146  
	`m˝_ªsﬁve_addr_öë
(
«me
, 
p‹t
, 
si
);

147 
	}
}

150 
	$m˝_£t_n⁄blockög
(
sd
)

152 
Êags
;

154 
Êags
 = 
	`f˙é
(
sd
, 
F_GETFL
, 0);

155 i‡(
Êags
 < 0) {

156  
Êags
;

159  
	`f˙é
(
sd
, 
F_SETFL
, 
Êags
 | 
O_NONBLOCK
);

160 
	}
}

163 
	$m˝_£t_t˝nodñay
(
sd
)

165 
nodñay
;

166 
sockÀn_t
 
Àn
;

168 
nodñay
 = 1;

169 
Àn
 = (
nodñay
);

171  
	`£tsock›t
(
sd
, 
IPPROTO_TCP
, 
TCP_NODELAY
, &
nodñay
, 
Àn
);

172 
	}
}

175 
	$m˝_£t_lögî
(
sd
, 
timeout
)

177 
lögî
Üinger;

178 
sockÀn_t
 
Àn
;

180 
lögî
.
l_⁄off
 = 1;

181 
lögî
.
l_lögî
 = 
timeout
;

183 
Àn
 = (
lögî
);

185  
	`£tsock›t
(
sd
, 
SOL_SOCKET
, 
SO_LINGER
, &
lögî
, 
Àn
);

186 
	}
}

189 
	$m˝_£t_¢dbuf
(
sd
, 
size
)

191 
sockÀn_t
 
Àn
;

193 
Àn
 = (
size
);

195  
	`£tsock›t
(
sd
, 
SOL_SOCKET
, 
SO_SNDBUF
, &
size
, 
Àn
);

196 
	}
}

199 
	$m˝_£t_rcvbuf
(
sd
, 
size
)

201 
sockÀn_t
 
Àn
;

203 
Àn
 = (
size
);

205  
	`£tsock›t
(
sd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
size
, 
Àn
);

206 
	}
}

209 
	$m˝_gë_s€º‹
(
sd
)

211 
°©us
, 
îr
;

212 
sockÀn_t
 
Àn
;

214 
îr
 = 0;

215 
Àn
 = (
îr
);

217 
°©us
 = 
	`gësock›t
(
sd
, 
SOL_SOCKET
, 
SO_ERROR
, &
îr
, &
Àn
);

218 i‡(
°©us
 == 0) {

219 
î∫o
 = 
îr
;

222  
°©us
;

223 
	}
}

226 
	$m˝_gë_¢dbuf
(
sd
)

228 
°©us
, 
size
;

229 
sockÀn_t
 
Àn
;

231 
size
 = 0;

232 
Àn
 = (
size
);

234 
°©us
 = 
	`gësock›t
(
sd
, 
SOL_SOCKET
, 
SO_SNDBUF
, &
size
, &
Àn
);

235 i‡(
°©us
 < 0) {

236  
°©us
;

239  
size
;

240 
	}
}

243 
	$m˝_gë_rcvbuf
(
sd
)

245 
°©us
, 
size
;

246 
sockÀn_t
 
Àn
;

248 
size
 = 0;

249 
Àn
 = (
size
);

251 
°©us
 = 
	`gësock›t
(
sd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
size
, &
Àn
);

252 i‡(
°©us
 < 0) {

253  
°©us
;

256  
size
;

257 
	}
}

259 
boﬁ


260 
	$m˝_vÆid_p‹t
(
n
)

262 i‡(
n
 < 1 ||Ç > 
UINT16_MAX
) {

263  
Ál£
;

266  
åue
;

267 
	}
}

274 
	$m˝_©oi
(*
löe
)

276 
î∫o_ßve
, 
vÆ
;

277 
vÆue
;

278 *
íd
;

280 
î∫o_ßve
 = 
î∫o
;

282 
î∫o
 = 0;

295 
vÆue
 = 
	`°πoul
(
löe
, &
íd
, 10);

296 i‡(
î∫o
 !0 || 
íd
 =
löe
 || *end != '\0') {

297 
vÆ
 = -1;

299 
vÆ
 = ()
vÆue
;

302 
î∫o
 = 
î∫o_ßve
;

304  
vÆ
;

305 
	}
}

312 
	$m˝_©od
(*
löe
)

314 
î∫o_ßve
;

315 
vÆue
;

316 *
íd
;

318 
î∫o_ßve
 = 
î∫o
;

320 
î∫o
 = 0;

337 
vÆue
 = 
	`°πod
(
löe
, &
íd
);

338 i‡(
î∫o
 !0 || 
íd
 =
löe
 || *end != '\0') {

339 
vÆue
 = -1.0;

342 
î∫o
 = 
î∫o_ßve
;

344  
vÆue
;

345 
	}
}

348 
	$_m˝_Æloc
(
size_t
 
size
, *
«me
, 
löe
)

350 *
p
;

352 
	`ASSERT
(
size
 != 0);

354 
p
 = 
	`mÆloc
(
size
);

355 i‡(
p
 =
NULL
) {

356 
	`log_debug
(
LOG_ERR
, "mÆloc(%zuËÁûed @ %s:%d", 
size
, 
«me
, 
löe
);

359  
p
;

360 
	}
}

363 
	$_m˝_zÆloc
(
size_t
 
size
, *
«me
, 
löe
)

365 *
p
;

367 
p
 = 
	`m˝_Æloc
(
size
);

368 i‡(
p
 !
NULL
) {

369 
	`mem£t
(
p
, 0, 
size
);

372  
p
;

373 
	}
}

376 
	$_m˝_ˇŒoc
(
size_t
 
nmemb
, size_à
size
, *
«me
, 
löe
)

378  
	`_m˝_zÆloc
(
nmemb
 * 
size
, 
«me
, 
löe
);

379 
	}
}

382 
	$_m˝_ªÆloc
(*
±r
, 
size_t
 
size
, *
«me
, 
löe
)

384 *
p
;

386 
	`ASSERT
(
size
 != 0);

388 
p
 = 
	`ªÆloc
(
±r
, 
size
);

389 i‡(
p
 =
NULL
) {

390 
	`log_debug
(
LOG_CRIT
, "ªÆloc(%zuËÁûed @ %s:%d", 
size
, 
«me
, 
löe
);

393  
p
;

394 
	}
}

397 
	$_m˝_‰ì
(*
±r
)

399 
	`ASSERT
(
±r
 !
NULL
);

400 
	`‰ì
(
±r
);

401 
	}
}

404 
	$m˝_°ackåa˚
(
skù_cou¡
)

406 *
°ack
[64];

407 **
symbﬁs
;

408 
size
, 
i
, 
j
;

410 
size
 = 
	`backåa˚
(
°ack
, 64);

411 
symbﬁs
 = 
	`backåa˚_symbﬁs
(
°ack
, 
size
);

412 i‡(
symbﬁs
 =
NULL
) {

416 
skù_cou¡
++;

418 
i
 = 
skù_cou¡
, 
j
 = 0; i < 
size
; i++, j++) {

419 
	`loga
("[%d] %s", 
j
, 
symbﬁs
[
i
]);

422 
	`‰ì
(
symbﬁs
);

423 
	}
}

426 
	$m˝_as£π
(c⁄° *
c⁄d
, c⁄° *
fûe
, 
löe
, 
∑nic
)

428 
	`log_îr‹
("as£π '%s' faûed @ (%s, %d)", 
c⁄d
, 
fûe
, 
löe
);

429 i‡(
∑nic
) {

430 
	`m˝_°ackåa˚
(1);

431 
	`ab‹t
();

433 
	}
}

436 
	$_vs˙¥ötf
(*
buf
, 
size_t
 
size
, c⁄° *
fmt
, 
va_li°
 
¨gs
)

438 
n
;

440 
n
 = 
	`v¢¥ötf
(
buf
, 
size
, 
fmt
, 
¨gs
);

452 i‡(
n
 <= 0) {

456 i‡(
n
 < (Ë
size
) {

457  
n
;

460  ()(
size
 - 1);

461 
	}
}

464 
	$_s˙¥ötf
(*
buf
, 
size_t
 
size
, c⁄° *
fmt
, ...)

466 
va_li°
 
¨gs
;

467 
n
;

469 
	`va_°¨t
(
¨gs
, 
fmt
);

470 
n
 = 
	`_vs˙¥ötf
(
buf
, 
size
, 
fmt
, 
¨gs
);

471 
	`va_íd
(
¨gs
);

473  
n
;

474 
	}
}

479 
ssize_t


480 
	$_m˝_£ndn
(
sd
, c⁄° *
v±r
, 
size_t
 
n
)

482 
size_t
 
∆e·
;

483 
ssize_t
 
n£nd
;

484 c⁄° *
±r
;

486 
±r
 = 
v±r
;

487 
∆e·
 = 
n
;

488 
∆e·
 > 0) {

489 
n£nd
 = 
	`£nd
(
sd
, 
±r
, 
∆e·
, 0);

490 i‡(
n£nd
 < 0) {

491 i‡(
î∫o
 =
EINTR
) {

494  
n£nd
;

496 i‡(
n£nd
 == 0) {

500 
∆e·
 -(
size_t
)
n£nd
;

501 
±r
 +
n£nd
;

504  (
ssize_t
)
n
;

505 
	}
}

510 
ssize_t


511 
	$_m˝_ªcvn
(
sd
, *
v±r
, 
size_t
 
n
)

513 
size_t
 
∆e·
;

514 
ssize_t
 
ƒecv
;

515 *
±r
;

517 
±r
 = 
v±r
;

518 
∆e·
 = 
n
;

519 
∆e·
 > 0) {

520 
ƒecv
 = 
	`ªcv
(
sd
, 
±r
, 
∆e·
, 0);

521 i‡(
ƒecv
 < 0) {

522 i‡(
î∫o
 =
EINTR
) {

525  
ƒecv
;

527 i‡(
ƒecv
 == 0) {

531 
∆e·
 -(
size_t
)
ƒecv
;

532 
±r
 +
ƒecv
;

535  (
ssize_t
)(
n
 - 
∆e·
);

536 
	}
}

541 
öt64_t


542 
	$m˝_u£c_now
()

544 
timevÆ
 
now
;

545 
öt64_t
 
u£c
;

546 
°©us
;

548 
°©us
 = 
	`gëtimeofday
(&
now
, 
NULL
);

549 i‡(
°©us
 < 0) {

550 
	`log_îr‹
("gëtimeofday faûed: %s", 
	`°ªº‹
(
î∫o
));

554 
u£c
 = (
öt64_t
)
now
.
tv_£c
 * 1000000LL + (öt64_tÍow.
tv_u£c
;

556  
u£c
;

557 
	}
}

	@mcp_util.h

19 #i‚de‡
_MCP_UTIL_H_


20 
	#_MCP_UTIL_H_


	)

22 
	~<°ddef.h
>

23 
	~<°dboﬁ.h
>

24 
	~<°d¨g.h
>

25 
	~<m©h.h
>

27 
	~<sys/ty≥s.h
>

28 
	~<sys/sockë.h
>

29 
	~<sys/un.h
>

30 
	~<√töë/ö.h
>

32 
	#SQUARE
(
d
Ë((dË* (d))

	)

33 
	#VAR
(
s
, 
s2
, 
n
) \

34 (((
n
Ë< 2Ë? 0.0 : ((
s2
Ë- 
	`SQUARE
(
s
Ë/ (n)Ë/ (“Ë- 1))

	)

35 
	#STDDEV
(
s
, 
s2
, 
n
Ë((“Ë< 2Ë? 0.0 : 
	`sqπ
(
	`VAR
((s), (s2), (n))))

	)

37 
	#MIN
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

38 
	#MAX
(
a
, 
b
Ë(◊Ë> (bË? (aË: (b))

	)

40 
	#NELEM
(
a
Ë((◊)Ë/ (◊)[0]))

	)

42 
	#KB
 (1024)

	)

43 
	#MB
 (1024 * 
KB
)

	)

44 
	#GB
 (1024 * 
MB
)

	)

56 
	#MCP_UINT8_MAXLEN
 (3 + 1)

	)

57 
	#MCP_UINT16_MAXLEN
 (5 + 1)

	)

58 
	#MCP_UINT32_MAXLEN
 (10 + 1)

	)

59 
	#MCP_UINT64_MAXLEN
 (20 + 1)

	)

60 
	#MCP_UINTMAX_MAXLEN
 
MCP_UINT64_MAXLEN


	)

63 
	#TV_TO_SEC
(
_tv
Ë((_tv)->
tv_£c
 + (1e-6 * (_tv)->
tv_u£c
))

	)

65 
	#MCP_INET4_ADDRSTRLEN
 (("255.255.255.255"Ë- 1)

	)

66 
	#MCP_INET6_ADDRSTRLEN
 \

67 (("ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255"Ë- 1)

	)

68 
	#MCP_INET_ADDRSTRLEN
 
	`MAX
(
MCP_INET4_ADDRSTRLEN
, 
MCP_INET6_ADDRSTRLEN
)

	)

69 
	#MCP_UNIX_ADDRSTRLEN
 \

70 ((
sockaddr_un
Ë- 
	`off£tof
(sockaddr_un, 
sun_∑th
))

	)

76 
	ssocköfo
 {

77 
	mÁmûy
;

78 
sockÀn_t
 
	maddæí
;

80 
sockaddr_ö
 
	mö
;

81 
sockaddr_ö6
 
	mö6
;

82 
sockaddr_un
 
	mun
;

83 } 
	maddr
;

86 
m˝_ªsﬁve_addr
(*
«me
, 
p‹t
, 
socköfo
 *
si
);

88 
m˝_£t_n⁄blockög
(
sd
);

89 
m˝_£t_t˝nodñay
(
sd
);

90 
m˝_£t_lögî
(
sd
, 
timeout
);

91 
m˝_£t_¢dbuf
(
sd
, 
size
);

92 
m˝_£t_rcvbuf
(
sd
, 
size
);

94 
m˝_gë_s€º‹
(
sd
);

95 
m˝_gë_¢dbuf
(
sd
);

96 
m˝_gë_rcvbuf
(
sd
);

98 
boﬁ
 
m˝_vÆid_p‹t
(
n
);

99 
m˝_©oi
(*
löe
);

100 
m˝_©od
(*
löe
);

106 
	#m˝_mem˝y
(
_d
, 
_c
, 
_n
) \

107 
	`mem˝y
(
_d
, 
_c
, (
size_t
)(
_n
))

	)

109 
	#m˝_memmove
(
_d
, 
_c
, 
_n
) \

110 
	`memmove
(
_d
, 
_c
, (
size_t
)(
_n
))

	)

112 
	#m˝_memchr
(
_d
, 
_c
, 
_n
) \

113 
	`memchr
(
_d
, 
_c
, (
size_t
)(
_n
))

	)

115 
	#m˝_°æí
(
_s
) \

116 
	`°æí
((*)(
_s
))

	)

118 
	#m˝_°∫cmp
(
_s1
, 
_s2
, 
_n
) \

119 
	`°∫cmp
((*)(
_s1
), (*)(
_s2
), (
size_t
)(
_n
))

	)

121 
	#m˝_°rchr
(
_p
, 
_l
, 
_c
) \

122 
	`_m˝_°rchr
((
uöt8_t
 *)(
_p
), (uöt8_à*)(
_l
), (uöt8_t)(
_c
))

	)

124 
	#m˝_°ºchr
(
_p
, 
_s
, 
_c
) \

125 
	`_m˝_°ºchr
((
uöt8_t
 *)(
_p
),(uöt8_à*)(
_s
), (uöt8_t)(
_c
))

	)

127 
	#m˝_°∫dup
(
_s
, 
_n
) \

128 (
uöt8_t
 *)
	`°∫dup
((*)(
_s
), (
size_t
)(
_n
));

	)

130 
	#m˝_¢¥ötf
(
_s
, 
_n
, ...) \

131 
	`¢¥ötf
((*)(
_s
), (
size_t
)(
_n
), 
__VA_ARGS__
)

	)

133 
	#m˝_s˙¥ötf
(
_s
, 
_n
, ...) \

134 
	`_s˙¥ötf
((*)(
_s
), (
size_t
)(
_n
), 
__VA_ARGS__
)

	)

136 
	#m˝_vs˙¥ötf
(
_s
, 
_n
, 
_f
, 
_a
) \

137 
	`_vs˙¥ötf
((*)(
_s
), (
size_t
)(
_n
), 
_f
, 
_a
)

	)

139 
ölöe
 
uöt8_t
 *

140 
	$_m˝_°rchr
(
uöt8_t
 *
p
, uöt8_à*
œ°
, uöt8_à
c
)

142 
p
 < 
œ°
) {

143 i‡(*
p
 =
c
) {

144  
p
;

146 
p
++;

149  
NULL
;

150 
	}
}

152 
ölöe
 
uöt8_t
 *

153 
	$_m˝_°ºchr
(
uöt8_t
 *
p
, uöt8_à*
°¨t
, uöt8_à
c
)

155 
p
 >
°¨t
) {

156 i‡(*
p
 =
c
) {

157  
p
;

159 
p
--;

162  
NULL
;

163 
	}
}

171 
	#m˝_Æloc
(
_s
Ë
	`_m˝_Æloc
((
size_t
)(_s), 
__FILE__
, 
__LINE__
)

	)

172 
	#m˝_zÆloc
(
_s
Ë
	`_m˝_zÆloc
((
size_t
)(_s), 
__FILE__
, 
__LINE__
)

	)

173 
	#m˝_ˇŒoc
(
_n
, 
_s
Ë
	`_m˝_ˇŒoc
((
size_t
)(_n), (size_t)(_s), 
__FILE__
, 
__LINE__
)

	)

174 
	#m˝_ªÆloc
(
_p
, 
_s
Ë
	`_m˝_ªÆloc
(_p, (
size_t
)(_s), 
__FILE__
, 
__LINE__
)

	)

175 
	#m˝_‰ì
(
_p
) do { \

176 
	`_m˝_‰ì
(
_p
); \

177 (
_p
Ë
NULL
; \

178 } 0)

	)

180 *
_m˝_Æloc
(
size_t
 
size
, *
«me
, 
löe
);

181 *
_m˝_zÆloc
(
size_t
 
size
, *
«me
, 
löe
);

182 *
_m˝_ˇŒoc
(
size_t
 
nmemb
, size_à
size
, *
«me
, 
löe
);

183 *
_m˝_ªÆloc
(*
±r
, 
size_t
 
size
, *
«me
, 
löe
);

184 
_m˝_‰ì
(*
±r
);

190 
	#m˝_£ndn
(
_s
, 
_b
, 
_n
Ë
	`_m˝_£ndn
(_s, _b, (
size_t
)(_n))

	)

191 
	#m˝_ªcvn
(
_s
, 
_b
, 
_n
Ë
	`_m˝_ªcvn
(_s, _b, (
size_t
)(_n))

	)

197 
	#m˝_ªad
(
_d
, 
_b
, 
_n
Ë
	`ªad
(_d, _b, (
size_t
)(_n))

	)

198 
	#m˝_ªadv
(
_d
, 
_b
, 
_n
Ë
	`ªadv
(_d, _b, ()(_n))

	)

200 
	#m˝_wrôe
(
_d
, 
_b
, 
_n
Ë
	`wrôe
(_d, _b, (
size_t
)(_n))

	)

201 
	#m˝_wrôev
(
_d
, 
_b
, 
_n
Ë
	`wrôev
(_d, _b, ()(_n))

	)

203 
ssize_t
 
_m˝_£ndn
(
sd
, c⁄° *
v±r
, 
size_t
 
n
);

204 
ssize_t
 
_m˝_ªcvn
(
sd
, *
v±r
, 
size_t
 
n
);

206 
m˝_as£π
(c⁄° *
c⁄d
, c⁄° *
fûe
, 
löe
, 
∑nic
);

208 #ifde‡
MCP_ASSERT_PANIC


210 
	#ASSERT
(
_x
) do { \

211 i‡(!(
_x
)) { \

212 
	`m˝_as£π
(#_x, 
__FILE__
, 
__LINE__
, 1); \

214 } 0)

	)

216 
	#NOT_REACHED
(Ë
	`ASSERT
(0)

	)

218 #ñi‡
MCP_ASSERT_LOG


220 
	#ASSERT
(
_x
) do { \

221 i‡(!(
_x
)) { \

222 
	`m˝_as£π
(#_x, 
__FILE__
, 
__LINE__
, 0); \

224 } 0)

	)

226 
	#NOT_REACHED
(Ë
	`ASSERT
(0)

	)

230 
	#ASSERT
(
_x
)

	)

232 
	#NOT_REACHED
()

	)

236 
m˝_°ackåa˚
(
skù_cou¡
);

237 
_s˙¥ötf
(*
buf
, 
size_t
 
size
, c⁄° *
fmt
, ...);

238 
_vs˙¥ötf
(*
buf
, 
size_t
 
size
, c⁄° *
fmt
, 
va_li°
 
¨gs
);

240 
öt64_t
 
m˝_u£c_now
();

	@stats/mcp_call_stats.c

19 
	~<m˝_c‹e.h
>

22 
	$ˇŒ_¸óãd
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

24 
	`ASSERT
(
ty≥
 =
EVENT_CALL_CREATED
);

25 
	}
}

28 
	$ˇŒ_issue_°¨t
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

30 
ˇŒ
 *ˇŒ = 
ˇrg
;

32 
	`ASSERT
(
ty≥
 =
EVENT_CALL_ISSUE_START
);

34 
ˇŒ
->
ªq
.
issue_°¨t
 = 
	`timî_now
();

35 
	}
}

38 
	$ˇŒ_£nd_°¨t
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

40 
ˇŒ
 *ˇŒ = 
ˇrg
;

42 
	`ASSERT
(
ty≥
 =
EVENT_CALL_SEND_START
);

43 
	`ASSERT
(
ˇŒ
->
ªq
.
issue_°¨t
 > 0.0);

45 
ˇŒ
->
ªq
.
£nd_°¨t
 = 
	`timî_now
();

46 
	}
}

49 
	$ˇŒ_£nd_°›
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

51 
°©s
 *°©†&
˘x
->stats;

52 
ˇŒ
 *ˇŒ = 
ˇrg
;

53 
ªq_x„r_time
;

55 
	`ASSERT
(
ty≥
 =
EVENT_CALL_SEND_STOP
);

56 
	`ASSERT
(
ˇŒ
->
ªq
.
£¡
 > 0);

57 
	`ASSERT
(
ˇŒ
->
ªq
.
£nd_°¨t
 > 0.0);

58 
	`ASSERT
(
ˇŒ
->
ªq
.
£nd_°¨t
 >ˇŒ->ªq.
issue_°¨t
);

60 
ˇŒ
->
ªq
.
£nd_°›
 = 
	`timî_now
();

62 
°©s
->
ƒeq
++;

64 
°©s
->
ªq_byãs_£¡
 +
ˇŒ
->
ªq
.
£¡
;

65 
°©s
->
ªq_byãs_£¡2
 +
	`SQUARE
(
ˇŒ
->
ªq
.
£¡
);

66 
°©s
->
ªq_byãs_£¡_mö
 = 
	`MIN
(
ˇŒ
->
ªq
.
£¡
, stats->req_bytes_sent_min);

67 
°©s
->
ªq_byãs_£¡_max
 = 
	`MAX
(
ˇŒ
->
ªq
.
£¡
, stats->req_bytes_sent_max);

69 
ªq_x„r_time
 = 
	`timî_now
(Ë- 
ˇŒ
->
ªq
.
£nd_°¨t
;

70 
°©s
->
ªq_x„r_sum
 +
ªq_x„r_time
;

71 
°©s
->
ªq_x„r_sum2
 +
	`SQUARE
(
ªq_x„r_time
);

72 
°©s
->
ªq_x„r_mö
 = 
	`MIN
(
ªq_x„r_time
, stats->req_xfer_min);

73 
°©s
->
ªq_x„r_max
 = 
	`MAX
(
ªq_x„r_time
, stats->req_xfer_max);

74 
	}
}

77 
	$ˇŒ_ªcv_°¨t
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

79 
°©s
 *°©†&
˘x
->stats;

80 
ˇŒ
 *ˇŒ = 
ˇrg
;

81 
ªq_r•_time
;

82 
bö
;

84 
	`ASSERT
(
ty≥
 =
EVENT_CALL_RECV_START
);

86 
ˇŒ
->
r•
.
ªcv_°¨t
 = 
	`timî_now
();

87 
ªq_r•_time
 = 
	`timî_now
(Ë- 
ˇŒ
->
ªq
.
£nd_°¨t
;

89 
°©s
->
ªq_r•_sum
 +
ªq_r•_time
;

90 
°©s
->
ªq_r•_sum2
 +
	`SQUARE
(
ªq_r•_time
);

91 
°©s
->
ªq_r•_mö
 = 
	`MIN
(
ªq_r•_time
, stats->req_rsp_min);

92 
°©s
->
ªq_r•_max
 = 
	`MAX
(
ªq_r•_time
, stats->req_rsp_max);

94 
bö
 = 
	`MIN
(
	`Ãöt
(
ªq_r•_time
 / 
HIST_BIN_WIDTH
), 
HIST_NUM_BINS
 - 1);

95 
°©s
->
ªq_r•_hi°
[
bö
]++;

96 
	}
}

99 
	$ˇŒ_ªcv_°›
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

101 
°©s
 *°©†&
˘x
->stats;

102 
ˇŒ
 *ˇŒ = 
ˇrg
;

103 
r•_x„r_time
;

105 
	`ASSERT
(
ty≥
 =
EVENT_CALL_RECV_STOP
);

106 
	`ASSERT
(
ˇŒ
->
r•
.
ty≥
 < 
RSP_MAX_TYPES
);

108 
°©s
->
r•_ty≥
[
ˇŒ
->
r•
.
ty≥
]++;

109 
°©s
->
ƒ•
++;

111 
°©s
->
r•_byãs_rcvd
 +
ˇŒ
->
r•
.
rcvd
;

112 
°©s
->
r•_byãs_rcvd2
 +
	`SQUARE
(
ˇŒ
->
r•
.
rcvd
);

113 
°©s
->
r•_byãs_rcvd_mö
 = 
	`MIN
(
ˇŒ
->
r•
.
rcvd
, stats->rsp_bytes_rcvd_min);

114 
°©s
->
r•_byãs_rcvd_max
 = 
	`MAX
(
ˇŒ
->
r•
.
rcvd
, stats->rsp_bytes_rcvd_max);

116 
r•_x„r_time
 = 
	`timî_now
(Ë- 
ˇŒ
->
r•
.
ªcv_°¨t
;

117 
°©s
->
r•_x„r_sum
 +
r•_x„r_time
;

118 
°©s
->
r•_x„r_sum2
 +
	`SQUARE
(
r•_x„r_time
);

119 
°©s
->
r•_x„r_mö
 = 
	`MIN
(
r•_x„r_time
, stats->rsp_xfer_min);

120 
°©s
->
r•_x„r_max
 = 
	`MAX
(
r•_x„r_time
, stats->rsp_xfer_max);

121 
	}
}

124 
	$ˇŒ_de°royed
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

126 
	`ASSERT
(
ty≥
 =
EVENT_CALL_DESTROYED
);

127 
	}
}

130 
	$öô
(
c⁄ãxt
 *
˘x
, *
¨g
)

132 
	`ecb_ªgi°î
(
˘x
, 
EVENT_CALL_CREATED
, 
ˇŒ_¸óãd
, 
NULL
);

133 
	`ecb_ªgi°î
(
˘x
, 
EVENT_CALL_ISSUE_START
, 
ˇŒ_issue_°¨t
, 
NULL
);

134 
	`ecb_ªgi°î
(
˘x
, 
EVENT_CALL_SEND_START
, 
ˇŒ_£nd_°¨t
, 
NULL
);

135 
	`ecb_ªgi°î
(
˘x
, 
EVENT_CALL_SEND_STOP
, 
ˇŒ_£nd_°›
, 
NULL
);

136 
	`ecb_ªgi°î
(
˘x
, 
EVENT_CALL_RECV_START
, 
ˇŒ_ªcv_°¨t
, 
NULL
);

137 
	`ecb_ªgi°î
(
˘x
, 
EVENT_CALL_RECV_STOP
, 
ˇŒ_ªcv_°›
, 
NULL
);

138 
	`ecb_ªgi°î
(
˘x
, 
EVENT_CALL_DESTROYED
, 
ˇŒ_de°royed
, 
NULL
);

139 
	}
}

142 
	$no_›
(
c⁄ãxt
 *
˘x
, *
¨g
)

145 
	}
}

147 
°©s_cﬁÀ˘‹
 
	gˇŒ_°©s
 = {

149 
öô
,

150 
no_›
,

151 
no_›
,

152 
no_›


	@stats/mcp_conn_stats.c

19 
	~<m˝_c‹e.h
>

22 
	$c⁄n_¸óãd
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

24 
°©s
 *°©†&
˘x
->stats;

26 
	`ASSERT
(
ty≥
 =
EVENT_CONN_CREATED
);

28 
°©s
->
nc⁄n_¸óãd
++;

29 
	}
}

32 
	$c⁄n_c⁄√˘ög
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

34 
°©s
 *°©†&
˘x
->stats;

35 
c⁄n
 *c⁄¿
ˇrg
;

37 
	`ASSERT
(
ty≥
 =
EVENT_CONN_CONNECTING
);

39 
c⁄n
->
c⁄√˘_°¨t
 = 
	`timî_now
();

40 
°©s
->
nc⁄√˘_issued
++;

41 
	}
}

44 
	$c⁄n_c⁄√˘ed
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

46 
°©s
 *°©†&
˘x
->stats;

47 
c⁄n
 *c⁄¿
ˇrg
;

48 
c⁄√˘_time
;

50 
	`ASSERT
(
ty≥
 =
EVENT_CONN_CONNECTED
);

51 
	`ASSERT
(
c⁄n
->
c⁄√˘_°¨t
 > 0.0);

52 
	`ASSERT
(
	`timî_now
(Ë>
c⁄n
->
c⁄√˘_°¨t
);

53 
	`ASSERT
(
c⁄n
->
c⁄√˘ed
);

55 
°©s
->
nc⁄√˘
++;

57 
c⁄√˘_time
 = 
	`timî_now
(Ë- 
c⁄n
->
c⁄√˘_°¨t
;

58 
°©s
->
c⁄√˘_sum
 +
c⁄√˘_time
;

59 
°©s
->
c⁄√˘_sum2
 +
	`SQUARE
(
c⁄√˘_time
);

60 
°©s
->
c⁄√˘_mö
 = 
	`MIN
(
c⁄√˘_time
, stats->connect_min);

61 
°©s
->
c⁄√˘_max
 = 
	`MAX
(
c⁄√˘_time
, stats->connect_max);

63 
°©s
->
nc⁄n_a˘ive
++;

64 
°©s
->
nc⁄n_a˘ive_max
 = 
	`MAX
(°©s->
nc⁄n_a˘ive
, stats->nconn_active_max);

65 
	}
}

68 
	$c⁄n_de°royed
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

70 
°©s
 *°©†&
˘x
->stats;

71 
c⁄n
 *c⁄¿
ˇrg
;

73 
	`ASSERT
(
ty≥
 =
EVENT_CONN_DESTROYED
);

75 i‡(
c⁄n
->
c⁄√˘ed
) {

76 
c⁄√˘i⁄_time
;

78 
	`ASSERT
(
°©s
->
nc⁄n_a˘ive
 > 0);

79 
°©s
->
nc⁄n_a˘ive
--;

81 
c⁄√˘i⁄_time
 = 
	`timî_now
(Ë- 
c⁄n
->
c⁄√˘_°¨t
;

82 
°©s
->
c⁄√˘i⁄_sum
 +
c⁄√˘i⁄_time
;

83 
°©s
->
c⁄√˘i⁄_sum2
 +
	`SQUARE
(
c⁄√˘i⁄_time
);

84 
°©s
->
c⁄√˘i⁄_mö
 = 
	`MIN
(
c⁄√˘i⁄_time
, stats->connection_min);

85 
°©s
->
c⁄√˘i⁄_max
 = 
	`MAX
(
c⁄√˘i⁄_time
, stats->connection_max);

87 
°©s
->
nc⁄n_de°royed
++;

88 
	}
}

91 
	$c⁄n_timeout
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

93 
°©s
 *°©†&
˘x
->stats;

95 
	`ASSERT
(
ty≥
 =
EVENT_CONN_TIMEOUT
);

97 
°©s
->
n˛õ¡_timeout
++;

98 
	}
}

101 
	$c⁄n_Áûed
(
c⁄ãxt
 *
˘x
, 
evít_ty≥_t
 
ty≥
, *
ørg
, *
ˇrg
)

103 
°©s
 *°©†&
˘x
->stats;

104 
c⁄n
 *c⁄¿
ˇrg
;

106 
	`ASSERT
(
ty≥
 =
EVENT_CONN_FAILED
);

107 
	`ASSERT
(
c⁄n
->
˘x
 == ctx);

109 
c⁄n
->
îr
) {

110 
EMFILE
:

111 
°©s
->
nsock_fdu«vaû
++;

114 
ENFILE
:

115 
°©s
->
nsock_·abfuŒ
++;

118 
ECONNREFUSED
:

119 
°©s
->
nsock_ªfu£d
++;

122 
EPIPE
:

123 
ECONNRESET
:

124 
°©s
->
nsock_ª£t
++;

127 
ETIMEDOUT
:

128 
°©s
->
nsock_timedout
++;

131 
EADDRNOTAVAIL
:

132 
°©s
->
nsock_addru«vaû
++;

136 
°©s
->
nsock_Ÿhî_îr‹
++;

139 
	}
}

142 
	$öô
(
c⁄ãxt
 *
˘x
, *
¨g
)

144 
	`ecb_ªgi°î
(
˘x
, 
EVENT_CONN_CREATED
, 
c⁄n_¸óãd
, 
NULL
);

145 
	`ecb_ªgi°î
(
˘x
, 
EVENT_CONN_CONNECTING
, 
c⁄n_c⁄√˘ög
, 
NULL
);

146 
	`ecb_ªgi°î
(
˘x
, 
EVENT_CONN_CONNECTED
, 
c⁄n_c⁄√˘ed
, 
NULL
);

147 
	`ecb_ªgi°î
(
˘x
, 
EVENT_CONN_DESTROYED
, 
c⁄n_de°royed
, 
NULL
);

148 
	`ecb_ªgi°î
(
˘x
, 
EVENT_CONN_TIMEOUT
, 
c⁄n_timeout
, 
NULL
);

149 
	`ecb_ªgi°î
(
˘x
, 
EVENT_CONN_FAILED
, 
c⁄n_Áûed
, 
NULL
);

150 
	}
}

153 
	$no_›
(
c⁄ãxt
 *
˘x
, *
¨g
)

156 
	}
}

158 
°©s_cﬁÀ˘‹
 
	gc⁄n_°©s
 = {

160 
öô
,

161 
no_›
,

162 
no_›
,

163 
no_›


	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/execinfo.h

18 #i‚de‡
_EXECINFO_H


19 
	#_EXECINFO_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


27 
	$backåa˚
 (**
__¨øy
, 
__size
Ë
	`__n⁄nuŒ
 ((1));

32 **
	$backåa˚_symbﬁs
 (*c⁄° *
__¨øy
, 
__size
)

33 
__THROW
 
	`__n⁄nuŒ
 ((1));

38 
	$backåa˚_symbﬁs_fd
 (*c⁄° *
__¨øy
, 
__size
, 
__fd
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1));

41 
__END_DECLS


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


32 
	~<bôs/huge_vÆ.h
>

33 #ifde‡
__USE_ISOC99


34 
	~<bôs/huge_vÆf.h
>

35 
	~<bôs/huge_vÆl.h
>

38 
	~<bôs/öf.h
>

41 
	~<bôs/«n.h
>

45 
	~<bôs/m©hdef.h
>

52 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

53 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

54 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

56 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

57 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

58 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

59 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

61 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

62 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

63 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

65 
	#_MdoubÀ_
 

	)

66 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

67 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

68 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

69 
	~<bôs/m©hˇŒs.h
>

70 #unde‡
_MdoubÀ_


71 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


72 #unde‡
_MdoubÀ_END_NAMESPACE


73 #unde‡
__MATH_PRECNAME


75 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


81 #i‚de‡
_MÊﬂt_


82 
	#_MÊﬂt_
 

	)

84 
	#_MdoubÀ_
 
_MÊﬂt_


	)

85 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

86 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

87 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

88 
	~<bôs/m©hˇŒs.h
>

89 #unde‡
_MdoubÀ_


90 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


91 #unde‡
_MdoubÀ_END_NAMESPACE


92 #unde‡
__MATH_PRECNAME


94 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

95 || 
deföed
 
__LDBL_COMPAT


96 #ifde‡
__LDBL_COMPAT


98 #ifde‡
__USE_ISOC99


99 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

100 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

101 #ifde‡
__REDIRECT_NTH


102 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

103 
__∆dbl_√xâow¨df
)

104 
	`__©åibuã__
 ((
__c⁄°__
));

105 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

106 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

107 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

108 (
__x
, 
__y
),

109 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 #unde‡
__MATHDECL_1


114 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

115 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

116 
¨gs
, 
Æüs
)

	)

117 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

118 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

124 #i‚de‡
_Ml⁄g_doubÀ_


125 
	#_Ml⁄g_doubÀ_
 

	)

127 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

128 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

129 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

130 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

131 
	#__MATH_DECLARE_LDOUBLE
 1

	)

132 
	~<bôs/m©hˇŒs.h
>

133 #unde‡
_MdoubÀ_


134 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


135 #unde‡
_MdoubÀ_END_NAMESPACE


136 #unde‡
__MATH_PRECNAME


141 #unde‡
__MATHDECL_1


142 #unde‡
__MATHDECL


143 #unde‡
__MATHCALL


146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


148 
signgam
;

153 #ifde‡
__USE_ISOC99


191 
FP_NAN
 =

192 
	#FP_NAN
 0

	)

193 
FP_NAN
,

194 
FP_INFINITE
 =

195 
	#FP_INFINITE
 1

	)

196 
FP_INFINITE
,

197 
FP_ZERO
 =

198 
	#FP_ZERO
 2

	)

199 
FP_ZERO
,

200 
FP_SUBNORMAL
 =

201 
	#FP_SUBNORMAL
 3

	)

202 
FP_SUBNORMAL
,

203 
FP_NORMAL
 =

204 
	#FP_NORMAL
 4

	)

205 
FP_NORMAL


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
	#Â˛assify
(
x
) \

211 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

213 
	#Â˛assify
(
x
) \

214 ( (
x
) ==  () \

215 ? 
	`__Â˛assifyf
 (
x
) \

216 :  (
x
) ==  () \

217 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

221 #ifde‡
__NO_LONG_DOUBLE_MATH


222 
	#signbô
(
x
) \

223 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

225 
	#signbô
(
x
) \

226 ( (
x
) ==  () \

227 ? 
	`__signbôf
 (
x
) \

228 :  (
x
) ==  () \

229 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

233 #ifde‡
__NO_LONG_DOUBLE_MATH


234 
	#isföôe
(
x
) \

235 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

237 
	#isföôe
(
x
) \

238 ( (
x
) ==  () \

239 ? 
	`__föôef
 (
x
) \

240 :  (
x
) ==  () \

241 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

245 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

249 #ifde‡
__NO_LONG_DOUBLE_MATH


250 
	#i¢™
(
x
) \

251 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

253 
	#i¢™
(
x
) \

254 ( (
x
) ==  () \

255 ? 
	`__i¢™f
 (
x
) \

256 :  (
x
) ==  () \

257 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

261 #ifde‡
__NO_LONG_DOUBLE_MATH


262 
	#isöf
(
x
) \

263 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

265 
	#isöf
(
x
) \

266 ( (
x
) ==  () \

267 ? 
	`__isöff
 (
x
) \

268 :  (
x
) ==  () \

269 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

273 
	#MATH_ERRNO
 1

	)

274 
	#MATH_ERREXCEPT
 2

	)

279 #i‚de‡
__FAST_MATH__


280 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

285 #ifde‡
__USE_GNU


287 #ifde‡
__NO_LONG_DOUBLE_MATH


288 
	#issig«lög
(
x
) \

289 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

291 
	#issig«lög
(
x
) \

292 ( (
x
) ==  () \

293 ? 
	`__issig«lögf
 (
x
) \

294 :  (
x
) ==  () \

295 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

299 #ifdef 
__USE_MISC


303 
_IEEE_
 = -1,

304 
_SVID_
,

305 
_XOPEN_
,

306 
_POSIX_
,

307 
_ISOC_


308 } 
	t_LIB_VERSION_TYPE
;

313 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

317 #ifde‡
__USE_SVID


323 #ifde‡
__˝lu•lus


324 
__ex˚±i⁄


326 
ex˚±i⁄


329 
ty≥
;

330 *
«me
;

331 
¨g1
;

332 
¨g2
;

333 
ªtvÆ
;

334 
	}
};

336 #ifde‡
__˝lu•lus


337 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

339 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

342 
	#X_TLOSS
 1.41484755040568800000e+16

	)

345 
	#DOMAIN
 1

	)

346 
	#SING
 2

	)

347 
	#OVERFLOW
 3

	)

348 
	#UNDERFLOW
 4

	)

349 
	#TLOSS
 5

	)

350 
	#PLOSS
 6

	)

353 
	#HUGE
 3.40282347e+38F

	)

357 #ifde‡
__USE_XOPEN


359 
	#MAXFLOAT
 3.40282347e+38F

	)

366 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


367 
	#M_E
 2.7182818284590452354

	)

368 
	#M_LOG2E
 1.4426950408889634074

	)

369 
	#M_LOG10E
 0.43429448190325182765

	)

370 
	#M_LN2
 0.69314718055994530942

	)

371 
	#M_LN10
 2.30258509299404568402

	)

372 
	#M_PI
 3.14159265358979323846

	)

373 
	#M_PI_2
 1.57079632679489661923

	)

374 
	#M_PI_4
 0.78539816339744830962

	)

375 
	#M_1_PI
 0.31830988618379067154

	)

376 
	#M_2_PI
 0.63661977236758134308

	)

377 
	#M_2_SQRTPI
 1.12837916709551257390

	)

378 
	#M_SQRT2
 1.41421356237309504880

	)

379 
	#M_SQRT1_2
 0.70710678118654752440

	)

385 #ifde‡
__USE_GNU


386 
	#M_El
 2.718281828459045235360287471352662498L

	)

387 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

388 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

389 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

390 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

391 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

392 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

393 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

394 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

395 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

396 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

397 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

398 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

405 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


406 
	#__NO_MATH_INLINES
 1

	)

409 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

416 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

417 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

418 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

419 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

420 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

421 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

425 #ifde‡
__USE_EXTERN_INLINES


426 
	~<bôs/m©hölöe.h
>

431 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

432 
	~<bôs/m©h-föôe.h
>

435 #ifde‡
__USE_ISOC99


439 #i‚de‡
isgª©î


440 
	#isgª©î
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

447 #i‚de‡
isgª©îequÆ


448 
	#isgª©îequÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

455 #i‚de‡
i¶ess


456 
	#i¶ess
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

463 #i‚de‡
i¶es£quÆ


464 
	#i¶es£quÆ
(
x
, 
y
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

467 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

471 #i‚de‡
i¶essgª©î


472 
	#i¶essgª©î
(
x
, 
y
) \

473 (
__exãnsi⁄__
 \

474 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

475 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

479 #i‚de‡
isun‹dîed


480 
	#isun‹dîed
(
u
, 
v
) \

481 (
__exãnsi⁄__
 \

482 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

483 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

488 
	g__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_BSD


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifdef 
__USE_POSIX


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__glibc_ª£rved
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_RAW
 = 255,

89 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

90 
	mIPPROTO_MAX


96 #i‚de‡
__USE_KERNEL_IPV6_DEFS


99 
	mIPPROTO_HOPOPTS
 = 0,

100 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

101 
	mIPPROTO_ROUTING
 = 43,

102 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

103 
	mIPPROTO_FRAGMENT
 = 44,

104 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

105 
	mIPPROTO_ICMPV6
 = 58,

106 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

107 
	mIPPROTO_NONE
 = 59,

108 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

109 
	mIPPROTO_DSTOPTS
 = 60,

110 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

111 
	mIPPROTO_MH
 = 135

112 
	#IPPROTO_MH
 
IPPROTO_MH


	)

117 
uöt16_t
 
	tö_p‹t_t
;

122 
	mIPPORT_ECHO
 = 7,

123 
	mIPPORT_DISCARD
 = 9,

124 
	mIPPORT_SYSTAT
 = 11,

125 
	mIPPORT_DAYTIME
 = 13,

126 
	mIPPORT_NETSTAT
 = 15,

127 
	mIPPORT_FTP
 = 21,

128 
	mIPPORT_TELNET
 = 23,

129 
	mIPPORT_SMTP
 = 25,

130 
	mIPPORT_TIMESERVER
 = 37,

131 
	mIPPORT_NAMESERVER
 = 42,

132 
	mIPPORT_WHOIS
 = 43,

133 
	mIPPORT_MTP
 = 57,

135 
	mIPPORT_TFTP
 = 69,

136 
	mIPPORT_RJE
 = 77,

137 
	mIPPORT_FINGER
 = 79,

138 
	mIPPORT_TTYLINK
 = 87,

139 
	mIPPORT_SUPDUP
 = 95,

142 
	mIPPORT_EXECSERVER
 = 512,

143 
	mIPPORT_LOGINSERVER
 = 513,

144 
	mIPPORT_CMDSERVER
 = 514,

145 
	mIPPORT_EFSSERVER
 = 520,

148 
	mIPPORT_BIFFUDP
 = 512,

149 
	mIPPORT_WHOSERVER
 = 513,

150 
	mIPPORT_ROUTESERVER
 = 520,

153 
	mIPPORT_RESERVED
 = 1024,

156 
	mIPPORT_USERRESERVED
 = 5000

164 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

165 
	#IN_CLASSA_NET
 0xff000000

	)

166 
	#IN_CLASSA_NSHIFT
 24

	)

167 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

168 
	#IN_CLASSA_MAX
 128

	)

170 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

171 
	#IN_CLASSB_NET
 0xffff0000

	)

172 
	#IN_CLASSB_NSHIFT
 16

	)

173 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

174 
	#IN_CLASSB_MAX
 65536

	)

176 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

177 
	#IN_CLASSC_NET
 0xffffff00

	)

178 
	#IN_CLASSC_NSHIFT
 8

	)

179 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

181 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

182 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

184 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

185 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

188 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

190 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

192 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

195 
	#IN_LOOPBACKNET
 127

	)

197 #i‚de‡
INADDR_LOOPBACK


198 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

202 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

203 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

204 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

205 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

207 #i‚de‡
__USE_KERNEL_IPV6_DEFS


209 
	sö6_addr


213 
uöt8_t
 
	m__u6_addr8
[16];

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


215 
uöt16_t
 
	m__u6_addr16
[8];

216 
uöt32_t
 
	m__u6_addr32
[4];

218 } 
	m__ö6_u
;

219 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

220 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


221 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

222 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

227 c⁄° 
ö6_addr
 
ö6addr_™y
;

228 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

229 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

230 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

232 
	#INET_ADDRSTRLEN
 16

	)

233 
	#INET6_ADDRSTRLEN
 46

	)

237 
	ssockaddr_ö


239 
__SOCKADDR_COMMON
 (
sö_
);

240 
ö_p‹t_t
 
	msö_p‹t
;

241 
ö_addr
 
	msö_addr
;

244 
	msö_zîo
[ (
sockaddr
) -

245 
__SOCKADDR_COMMON_SIZE
 -

246  (
ö_p‹t_t
) -

247  (
ö_addr
)];

250 #i‚de‡
__USE_KERNEL_IPV6_DEFS


252 
	ssockaddr_ö6


254 
__SOCKADDR_COMMON
 (
sö6_
);

255 
ö_p‹t_t
 
	msö6_p‹t
;

256 
uöt32_t
 
	msö6_Êowöfo
;

257 
ö6_addr
 
	msö6_addr
;

258 
uöt32_t
 
	msö6_sc›e_id
;

262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


264 
	sù_mªq


267 
ö_addr
 
	mimr_mu…üddr
;

270 
ö_addr
 
	mimr_öãrÁ˚
;

273 
	sù_mªq_sour˚


276 
ö_addr
 
	mimr_mu…üddr
;

279 
ö_addr
 
	mimr_öãrÁ˚
;

282 
ö_addr
 
	mimr_sour˚addr
;

286 #i‚de‡
__USE_KERNEL_IPV6_DEFS


288 
	sùv6_mªq


291 
ö6_addr
 
	mùv6mr_mu…üddr
;

294 
	mùv6mr_öãrÁ˚
;

298 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


300 
	sgroup_ªq


303 
uöt32_t
 
	mgr_öãrÁ˚
;

306 
sockaddr_°‹age
 
	mgr_group
;

309 
	sgroup_sour˚_ªq


312 
uöt32_t
 
	mg§_öãrÁ˚
;

315 
sockaddr_°‹age
 
	mg§_group
;

318 
sockaddr_°‹age
 
	mg§_sour˚
;

323 
	sù_msfûãr


326 
ö_addr
 
	mimsf_mu…üddr
;

329 
ö_addr
 
	mimsf_öãrÁ˚
;

332 
uöt32_t
 
	mimsf_fmode
;

335 
uöt32_t
 
	mimsf_num§c
;

337 
ö_addr
 
	mimsf_¶i°
[1];

340 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

341 -  (
ö_addr
) \

342 + (
num§c
Ë*  (
ö_addr
))

	)

344 
	sgroup_fûãr


347 
uöt32_t
 
	mgf_öãrÁ˚
;

350 
sockaddr_°‹age
 
	mgf_group
;

353 
uöt32_t
 
	mgf_fmode
;

356 
uöt32_t
 
	mgf_num§c
;

358 
sockaddr_°‹age
 
	mgf_¶i°
[1];

361 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

362 -  (
sockaddr_°‹age
) \

363 + ((
num§c
) \

364 *  (
sockaddr_°‹age
)))

	)

374 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

375 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

376 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

382 
	~<ídün.h
>

385 
	~<bôs/byãsw≠.h
>

387 #ifde‡
__OPTIMIZE__


391 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


394 
	#¡ohl
(
x
Ë(x)

	)

395 
	#¡ohs
(
x
Ë(x)

	)

396 
	#ht⁄l
(
x
Ë(x)

	)

397 
	#ht⁄s
(
x
Ë(x)

	)

399 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


400 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

401 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

402 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

408 #ifde‡
__GNUC__


409 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

410 (
__exãnsi⁄__
 \

411 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

412 
__a
->
s6_addr32
[0] == 0 \

413 && 
__a
->
s6_addr32
[1] == 0 \

414 && 
__a
->
s6_addr32
[2] == 0 \

415 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

417 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

418 (
__exãnsi⁄__
 \

419 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

420 
__a
->
s6_addr32
[0] == 0 \

421 && 
__a
->
s6_addr32
[1] == 0 \

422 && 
__a
->
s6_addr32
[2] == 0 \

423 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

425 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

426 (
__exãnsi⁄__
 \

427 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

428 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

430 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

431 (
__exãnsi⁄__
 \

432 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

433 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

435 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

436 (
__exãnsi⁄__
 \

437 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

438 
__a
->
s6_addr32
[0] == 0 \

439 && 
__a
->
s6_addr32
[1] == 0 \

440 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

442 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

443 (
__exãnsi⁄__
 \

444 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

445 
__a
->
s6_addr32
[0] == 0 \

446 && 
__a
->
s6_addr32
[1] == 0 \

447 && 
__a
->
s6_addr32
[2] == 0 \

448 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

450 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

451 (
__exãnsi⁄__
 \

452 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

453 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

454 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

455 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

456 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

457 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

459 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

460 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

461 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

462 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

465 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

466 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

467 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

468 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

471 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

472 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

473 =
	`ht⁄l
 (0x„800000))

	)

475 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

476 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

477 =
	`ht⁄l
 (0x„c00000))

	)

479 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

480 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

481 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

482 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

484 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

485 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

486 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

487 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

488 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

490 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

491 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

492 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

493 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

497 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

499 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


501 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

504 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

505 
__THROW
;

509 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

510 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

511 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

513 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

514 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

515 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

517 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

518 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

519 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

521 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

522 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

523 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

525 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

526 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

527 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

530 #ifde‡
__USE_GNU


531 
cmsghdr
;

534 
	sö6_pktöfo


536 
ö6_addr
 
ùi6_addr
;

537 
ùi6_ifödex
;

541 
	sù6_mtuöfo


543 
sockaddr_ö6
 
ù6m_addr
;

544 
uöt32_t
 
ù6m_mtu
;

549 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

552 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

553 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

554 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

555 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

557 
__mu…x
, 
__∂usy
)

558 
__THROW
 
__©åibuã_dïªˇãd__
;

559 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

560 
uöt8_t
 **
__çåp
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
, 
__ty≥
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

568 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

569 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

570 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

571 **
__d©abuÂ
Ë
__THROW
;

572 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

573 
__THROW
;

574 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

575 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

577 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

578 **
__d©abuÂ
Ë
__THROW
;

579 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

583 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

587 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

588 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

589 
__£gmíts
Ë
__THROW
;

590 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

591 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

592 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

593 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

594 
__THROW
;

600 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

601 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

602 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

603 
__THROW
;

606 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

607 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

608 
uöt32_t
 
__num§c
,

609 c⁄° 
ö_addr
 *
__¶i°
)

610 
__THROW
;

614 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

615 c⁄° 
sockaddr
 *
__group
,

616 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

617 
uöt32_t
 *
__num§c
,

618 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

621 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

622 c⁄° 
sockaddr
 *
__group
,

623 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

624 
uöt32_t
 
__num§c
,

625 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

628 
__END_DECLS


	@/usr/include/netinet/tcp.h

32 #i‚de‡
_NETINET_TCP_H


33 
	#_NETINET_TCP_H
 1

	)

35 
	~<„©uªs.h
>

40 
	#TCP_NODELAY
 1

	)

41 
	#TCP_MAXSEG
 2

	)

42 
	#TCP_CORK
 3

	)

43 
	#TCP_KEEPIDLE
 4

	)

44 
	#TCP_KEEPINTVL
 5

	)

45 
	#TCP_KEEPCNT
 6

	)

46 
	#TCP_SYNCNT
 7

	)

47 
	#TCP_LINGER2
 8

	)

48 
	#TCP_DEFER_ACCEPT
 9

	)

49 
	#TCP_WINDOW_CLAMP
 10

	)

50 
	#TCP_INFO
 11

	)

51 
	#TCP_QUICKACK
 12

	)

52 
	#TCP_CONGESTION
 13

	)

53 
	#TCP_MD5SIG
 14

	)

54 
	#TCP_COOKIE_TRANSACTIONS
 15

	)

55 
	#TCP_THIN_LINEAR_TIMEOUTS
 16

	)

56 
	#TCP_THIN_DUPACK
 17

	)

57 
	#TCP_USER_TIMEOUT
 18

	)

58 
	#TCP_REPAIR
 19

	)

59 
	#TCP_REPAIR_QUEUE
 20

	)

60 
	#TCP_QUEUE_SEQ
 21

	)

61 
	#TCP_REPAIR_OPTIONS
 22

	)

62 
	#TCP_FASTOPEN
 23

	)

63 
	#TCP_TIMESTAMP
 24

	)

65 #ifde‡
__USE_MISC


66 
	~<sys/ty≥s.h
>

67 
	~<sys/sockë.h
>

69 
u_öt32_t
 
	tt˝_£q
;

74 
	st˝hdr


76 
__exãnsi⁄__
 union

80 
u_öt16_t
 
	mth_•‹t
;

81 
u_öt16_t
 
	mth_dp‹t
;

82 
t˝_£q
 
	mth_£q
;

83 
t˝_£q
 
	mth_ack
;

84 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


85 
u_öt8_t
 
	mth_x2
:4;

86 
u_öt8_t
 
	mth_off
:4;

88 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


89 
u_öt8_t
 
	mth_off
:4;

90 
u_öt8_t
 
	mth_x2
:4;

92 
u_öt8_t
 
	mth_Êags
;

93 
	#TH_FIN
 0x01

	)

94 
	#TH_SYN
 0x02

	)

95 
	#TH_RST
 0x04

	)

96 
	#TH_PUSH
 0x08

	)

97 
	#TH_ACK
 0x10

	)

98 
	#TH_URG
 0x20

	)

99 
u_öt16_t
 
	mth_wö
;

100 
u_öt16_t
 
	mth_sum
;

101 
u_öt16_t
 
	mth_uΩ
;

105 
u_öt16_t
 
	msour˚
;

106 
u_öt16_t
 
	mde°
;

107 
u_öt32_t
 
	m£q
;

108 
u_öt32_t
 
	mack_£q
;

109 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


110 
u_öt16_t
 
	mªs1
:4;

111 
u_öt16_t
 
	mdoff
:4;

112 
u_öt16_t
 
	mfö
:1;

113 
u_öt16_t
 
	msyn
:1;

114 
u_öt16_t
 
	mr°
:1;

115 
u_öt16_t
 
	mpsh
:1;

116 
u_öt16_t
 
	mack
:1;

117 
u_öt16_t
 
	murg
:1;

118 
u_öt16_t
 
	mªs2
:2;

119 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


120 
u_öt16_t
 
	mdoff
:4;

121 
u_öt16_t
 
	mªs1
:4;

122 
u_öt16_t
 
	mªs2
:2;

123 
u_öt16_t
 
	murg
:1;

124 
u_öt16_t
 
	mack
:1;

125 
u_öt16_t
 
	mpsh
:1;

126 
u_öt16_t
 
	mr°
:1;

127 
u_öt16_t
 
	msyn
:1;

128 
u_öt16_t
 
	mfö
:1;

132 
u_öt16_t
 
	mwödow
;

133 
u_öt16_t
 
	mcheck
;

134 
u_öt16_t
 
	murg_±r
;

141 
	mTCP_ESTABLISHED
 = 1,

142 
	mTCP_SYN_SENT
,

143 
	mTCP_SYN_RECV
,

144 
	mTCP_FIN_WAIT1
,

145 
	mTCP_FIN_WAIT2
,

146 
	mTCP_TIME_WAIT
,

147 
	mTCP_CLOSE
,

148 
	mTCP_CLOSE_WAIT
,

149 
	mTCP_LAST_ACK
,

150 
	mTCP_LISTEN
,

151 
	mTCP_CLOSING


154 
	#TCPOPT_EOL
 0

	)

155 
	#TCPOPT_NOP
 1

	)

156 
	#TCPOPT_MAXSEG
 2

	)

157 
	#TCPOLEN_MAXSEG
 4

	)

158 
	#TCPOPT_WINDOW
 3

	)

159 
	#TCPOLEN_WINDOW
 3

	)

160 
	#TCPOPT_SACK_PERMITTED
 4

	)

161 
	#TCPOLEN_SACK_PERMITTED
 2

	)

162 
	#TCPOPT_SACK
 5

	)

163 
	#TCPOPT_TIMESTAMP
 8

	)

164 
	#TCPOLEN_TIMESTAMP
 10

	)

165 
	#TCPOLEN_TSTAMP_APPA
 (
TCPOLEN_TIMESTAMP
+2Ë

	)

167 
	#TCPOPT_TSTAMP_HDR
 \

168 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_TIMESTAMP
<<8|
TCPOLEN_TIMESTAMP
)

	)

176 
	#TCP_MSS
 512

	)

178 
	#TCP_MAXWIN
 65535

	)

180 
	#TCP_MAX_WINSHIFT
 14

	)

182 
	#SOL_TCP
 6

	)

185 
	#TCPI_OPT_TIMESTAMPS
 1

	)

186 
	#TCPI_OPT_SACK
 2

	)

187 
	#TCPI_OPT_WSCALE
 4

	)

188 
	#TCPI_OPT_ECN
 8

	)

189 
	#TCPI_OPT_ECN_SEEN
 16

	)

190 
	#TCPI_OPT_SYN_DATA
 32

	)

193 
	et˝_ˇ_°©e


195 
	mTCP_CA_O≥n
 = 0,

196 
	mTCP_CA_Dis‹dî
 = 1,

197 
	mTCP_CA_CWR
 = 2,

198 
	mTCP_CA_Recovîy
 = 3,

199 
	mTCP_CA_Loss
 = 4

202 
	st˝_öfo


204 
u_öt8_t
 
	mt˝i_°©e
;

205 
u_öt8_t
 
	mt˝i_ˇ_°©e
;

206 
u_öt8_t
 
	mt˝i_ªå™smôs
;

207 
u_öt8_t
 
	mt˝i_¥obes
;

208 
u_öt8_t
 
	mt˝i_backoff
;

209 
u_öt8_t
 
	mt˝i_›ti⁄s
;

210 
u_öt8_t
 
	mt˝i_¢d_wsˇÀ
 : 4, 
	mt˝i_rcv_wsˇÀ
 : 4;

212 
u_öt32_t
 
	mt˝i_πo
;

213 
u_öt32_t
 
	mt˝i_©o
;

214 
u_öt32_t
 
	mt˝i_¢d_mss
;

215 
u_öt32_t
 
	mt˝i_rcv_mss
;

217 
u_öt32_t
 
	mt˝i_u«cked
;

218 
u_öt32_t
 
	mt˝i_ßcked
;

219 
u_öt32_t
 
	mt˝i_lo°
;

220 
u_öt32_t
 
	mt˝i_ªå™s
;

221 
u_öt32_t
 
	mt˝i_Áckës
;

224 
u_öt32_t
 
	mt˝i_œ°_d©a_£¡
;

225 
u_öt32_t
 
	mt˝i_œ°_ack_£¡
;

226 
u_öt32_t
 
	mt˝i_œ°_d©a_ªcv
;

227 
u_öt32_t
 
	mt˝i_œ°_ack_ªcv
;

230 
u_öt32_t
 
	mt˝i_pmtu
;

231 
u_öt32_t
 
	mt˝i_rcv_s°hªsh
;

232 
u_öt32_t
 
	mt˝i_πt
;

233 
u_öt32_t
 
	mt˝i_πtv¨
;

234 
u_öt32_t
 
	mt˝i_¢d_s°hªsh
;

235 
u_öt32_t
 
	mt˝i_¢d_cwnd
;

236 
u_öt32_t
 
	mt˝i_advmss
;

237 
u_öt32_t
 
	mt˝i_ª‹dîög
;

239 
u_öt32_t
 
	mt˝i_rcv_πt
;

240 
u_öt32_t
 
	mt˝i_rcv_•a˚
;

242 
u_öt32_t
 
	mt˝i_tŸÆ_ªå™s
;

247 
	#TCP_MD5SIG_MAXKEYLEN
 80

	)

249 
	st˝_md5sig


251 
sockaddr_°‹age
 
	mt˝m_addr
;

252 
u_öt16_t
 
	m__t˝m_∑d1
;

253 
u_öt16_t
 
	mt˝m_keyÀn
;

254 
u_öt32_t
 
	m__t˝m_∑d2
;

255 
u_öt8_t
 
	mt˝m_key
[
TCP_MD5SIG_MAXKEYLEN
];

259 
	st˝_ª∑ú_›t


261 
u_öt32_t
 
	m›t_code
;

262 
u_öt32_t
 
	m›t_vÆ
;

268 
	mTCP_NO_QUEUE
,

269 
	mTCP_RECV_QUEUE
,

270 
	mTCP_SEND_QUEUE
,

271 
	mTCP_QUEUES_NR
,

275 
	#TCP_COOKIE_MIN
 8

	)

276 
	#TCP_COOKIE_MAX
 16

	)

277 
	#TCP_COOKIE_PAIR_SIZE
 (2*
TCP_COOKIE_MAX
)

	)

280 
	#TCP_COOKIE_IN_ALWAYS
 (1 << 0Ë

	)

281 
	#TCP_COOKIE_OUT_NEVER
 (1 << 1Ë

	)

285 
	#TCP_S_DATA_IN
 (1 << 2Ë

	)

286 
	#TCP_S_DATA_OUT
 (1 << 3Ë

	)

288 
	#TCP_MSS_DEFAULT
 536U

	)

289 
	#TCP_MSS_DESIRED
 1220U

	)

291 
	st˝_cookõ_å™ß˘i⁄s


293 
u_öt16_t
 
	mt˝˘_Êags
;

294 
u_öt8_t
 
	m__t˝˘_∑d1
;

295 
u_öt8_t
 
	mt˝˘_cookõ_desúed
;

296 
u_öt16_t
 
	mt˝˘_s_d©a_desúed
;

297 
u_öt16_t
 
	mt˝˘_u£d
;

298 
u_öt8_t
 
	mt˝˘_vÆue
[
TCP_MSS_DEFAULT
];

	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 
	#SIZE_MAX
 (4294967295U)

	)

267 #i‚de‡
WCHAR_MIN


269 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

270 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

274 
	#WINT_MIN
 (0u)

	)

275 
	#WINT_MAX
 (4294967295u)

	)

278 
	#INT8_C
(
c
Ë
	)
c

279 
	#INT16_C
(
c
Ë
	)
c

280 
	#INT32_C
(
c
Ë
	)
c

281 #i‡
__WORDSIZE
 == 64

282 
	#INT64_C
(
c
Ë¯## 
L


	)

284 
	#INT64_C
(
c
Ë¯## 
LL


	)

288 
	#UINT8_C
(
c
Ë
	)
c

289 
	#UINT16_C
(
c
Ë
	)
c

290 
	#UINT32_C
(
c
Ë¯## 
U


	)

291 #i‡
__WORDSIZE
 == 64

292 
	#UINT64_C
(
c
Ë¯## 
UL


	)

294 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

298 #i‡
__WORDSIZE
 == 64

299 
	#INTMAX_C
(
c
Ë¯## 
L


	)

300 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

302 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

303 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
56
1018
gen/mcp_call_generator.c
gen/mcp_conn_generator.c
gen/mcp_size_generator.c
mcp.c
mcp_call.c
mcp_call.h
mcp_conn.c
mcp_conn.h
mcp_core.c
mcp_core.h
mcp_distribution.c
mcp_distribution.h
mcp_ecb.c
mcp_ecb.h
mcp_event.c
mcp_event.h
mcp_generator.c
mcp_generator.h
mcp_log.c
mcp_log.h
mcp_queue.h
mcp_stats.c
mcp_stats.h
mcp_timer.c
mcp_timer.h
mcp_util.c
mcp_util.h
stats/mcp_call_stats.c
stats/mcp_conn_stats.c
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/execinfo.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/inttypes.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/netinet/tcp.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/rpc/netdb.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
